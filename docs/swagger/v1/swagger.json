{
  "openapi": "3.0.0",
  "info": {
    "title": "API V1",
    "version": "v1"
  },
  "servers": [
    {
      "url": "/api/{api_version}",
      "variables": {
        "api_version": {
          "default": "v1",
          "enum": [
            "v1"
          ]
        }
      }
    }
  ],
  "components": {
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "Bearer Token",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "auth": {
        "title": "Auth Data",
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "auth"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "access_token": {
                    "type": "string"
                  },
                  "refresh_token": {
                    "type": "string"
                  },
                  "me": {
                    "$ref": "#/components/schemas/user"
                  }
                },
                "required": [
                  "access_token",
                  "refresh_token",
                  "me"
                ]
              }
            },
            "required": [
              "type",
              "attributes"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "comment": {
        "title": "Comment",
        "description": "Comment object",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/comment_attributes"
          },
          "meta": {
            "$ref": "#/components/schemas/comment_meta"
          },
          "children": {
            "$ref": "#/components/schemas/comment_children"
          }
        },
        "required": [
          "id",
          "type",
          "attributes",
          "meta"
        ]
      },
      "comment_attributes": {
        "title": "Comment Attributes",
        "description": "Attributes for Comment",
        "type": "object",
        "properties": {
          "body": {
            "type": "string"
          },
          "user_id": {
            "type": "integer"
          },
          "commentable_id": {
            "type": "integer"
          },
          "parent_id": {
            "type": "integer",
            "nullable": true
          },
          "created_at": {
            "type": "string"
          },
          "edited_at": {
            "type": "string",
            "nullable": true
          },
          "edited": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          }
        },
        "required": [
          "body",
          "user_id",
          "commentable_id",
          "parent_id",
          "created_at",
          "edited",
          "deleted"
        ]
      },
      "comment_children": {
        "title": "Comment Children",
        "description": "Array of comment children",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/comment"
        }
      },
      "comment_meta": {
        "title": "Comment Meta",
        "description": "Comment object meta",
        "type": "object",
        "properties": {
          "children_count": {
            "type": "integer"
          }
        },
        "required": [
          "children_count"
        ]
      },
      "error": {
        "title": "Error",
        "description": "JSON:API Error response",
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string"
                },
                "code": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "detail": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "status",
                "code",
                "title"
              ]
            }
          }
        },
        "required": [
          "errors"
        ]
      },
      "invalid_credentials_error": {
        "title": "Invalid Credentials Error",
        "description": "User's token is invalid",
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "401"
                  ]
                },
                "code": {
                  "type": "string",
                  "enum": [
                    "unauthorized"
                  ]
                },
                "title": {
                  "type": "string",
                  "enum": [
                    "Invalid credentials"
                  ]
                }
              },
              "required": [
                "status",
                "code",
                "title"
              ]
            }
          }
        },
        "required": [
          "errors"
        ]
      },
      "invalid_value": {
        "title": "Invalid Value Error",
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "400"
                  ]
                },
                "code": {
                  "type": "string",
                  "enum": [
                    "bad_request"
                  ]
                },
                "title": {
                  "type": "string",
                  "enum": [
                    "Invalid value"
                  ]
                }
              },
              "required": [
                "status",
                "code",
                "title"
              ]
            }
          }
        },
        "required": [
          "errors"
        ]
      },
      "pagination_error": {
        "title": "Pagination Error",
        "description": "JSON:API Pagination Error response",
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string"
                },
                "code": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "detail": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "source": {
                  "parameter": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "status",
                "code",
                "title"
              ]
            }
          }
        },
        "required": [
          "errors"
        ]
      },
      "param_is_missing": {
        "title": "Param is missing or the value is empty",
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "422"
                  ]
                },
                "code": {
                  "type": "string",
                  "enum": [
                    "unprocessable_entity"
                  ]
                },
                "title": {
                  "type": "string"
                }
              },
              "required": [
                "status",
                "code",
                "title"
              ]
            }
          }
        },
        "required": [
          "errors"
        ]
      },
      "record_is_invalid": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "422"
                  ]
                },
                "code": {
                  "type": "string",
                  "enum": [
                    "unprocessable_entity"
                  ]
                },
                "title": {
                  "type": "string",
                  "enum": [
                    "Record Invalid"
                  ]
                },
                "detail": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "status",
                "code",
                "title"
              ]
            }
          }
        },
        "required": [
          "errors"
        ]
      },
      "unauthorized_error": {
        "title": "Unauthorized Error",
        "description": "User must sign in before continuing",
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "401"
                  ]
                },
                "code": {
                  "type": "string",
                  "enum": [
                    "unauthorized"
                  ]
                },
                "title": {
                  "type": "string",
                  "enum": [
                    "You need to sign in or sign up before continuing"
                  ]
                }
              },
              "required": [
                "status",
                "code",
                "title"
              ]
            }
          }
        },
        "required": [
          "errors"
        ]
      },
      "user_not_found_error": {
        "title": "User Not Found",
        "description": "User ID is invalid",
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "404"
                  ]
                },
                "code": {
                  "type": "string",
                  "enum": [
                    "not_found"
                  ]
                },
                "title": {
                  "type": "string",
                  "enum": [
                    "Not Found"
                  ]
                }
              },
              "required": [
                "status",
                "code",
                "title"
              ]
            }
          }
        }
      },
      "you_must_be_logged_in": {
        "title": "Unauthorized Error",
        "description": "User must log in  before continuing",
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "401"
                  ]
                },
                "code": {
                  "type": "string",
                  "enum": [
                    "unauthorized"
                  ]
                },
                "title": {
                  "type": "string"
                },
                "detail": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "You must be logged in"
                    ]
                  }
                }
              },
              "required": [
                "status",
                "code",
                "title"
              ]
            }
          }
        },
        "required": [
          "errors"
        ]
      },
      "pagination_links": {
        "title": "Pagination Links",
        "description": "Pagination Links",
        "type": "object",
        "properties": {
          "first": {
            "type": "string"
          },
          "self": {
            "type": "string"
          },
          "last": {
            "type": "string"
          },
          "next": {
            "type": "string"
          },
          "prev": {
            "type": "string"
          }
        },
        "required": [
          "first",
          "self",
          "last"
        ]
      },
      "pagination_meta": {
        "title": "Pagination Meta",
        "description": "Pagination Meta",
        "type": "object",
        "properties": {
          "total": {
            "description": "Total entries",
            "type": "integer"
          },
          "pages": {
            "description": "Total pages count",
            "type": "integer"
          },
          "current_page": {
            "description": "Current page",
            "type": "integer"
          },
          "per_page": {
            "description": "Per Page",
            "minimum": 1,
            "maximum": 100,
            "type": "integer"
          },
          "from": {
            "description": "Offset",
            "type": "integer"
          },
          "to": {
            "description": "Offset + Page length",
            "type": "integer"
          }
        },
        "required": [
          "total",
          "pages",
          "current_page",
          "per_page",
          "from",
          "to"
        ]
      },
      "post": {
        "title": "Post",
        "description": "Post object",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/post_attributes"
          },
          "relationships": {
            "$ref": "#/components/schemas/post_relationships"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "post_attributes": {
        "title": "Post Attributes",
        "description": "Attributes for Post",
        "type": "object",
        "properties": {
          "body": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "comments_count": {
            "type": "integer"
          }
        },
        "required": [
          "body",
          "created_at",
          "updated_at",
          "comments_count"
        ]
      },
      "post_relationships": {
        "title": "Post Relationships",
        "description": "Relationships for Post",
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "data": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "type"
                ]
              }
            },
            "required": [
              "data"
            ]
          }
        },
        "required": [
          "user"
        ]
      },
      "posts": {
        "title": "Posts",
        "description": "Posts",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/post"
        }
      },
      "role": {
        "title": "Role",
        "description": "Role",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "$ref": "#/components/schemas/role_value"
          }
        },
        "required": [
          "name",
          "value"
        ]
      },
      "role_name": {
        "title": "Role Name",
        "enum": [
          "unconfirmed",
          "banned",
          "warned",
          "user",
          "premium",
          "primary",
          "owner",
          "moderator",
          "admin"
        ],
        "type": "string",
        "description": "An enumeration"
      },
      "role_value": {
        "title": "Role Value",
        "enum": [
          -30,
          -20,
          -10,
          0,
          10,
          20,
          30,
          40,
          50
        ],
        "type": "integer",
        "description": "An enumeration"
      },
      "user": {
        "title": "User",
        "description": "User object",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/user_attributes"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "user_attributes": {
        "title": "User Attributes",
        "description": "Attributes for User",
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "posts_count": {
            "type": "integer"
          },
          "comments_count": {
            "type": "integer"
          },
          "role": {
            "$ref": "#/components/schemas/role"
          }
        },
        "required": [
          "email",
          "username",
          "created_at",
          "role",
          "posts_count",
          "comments_count"
        ]
      },
      "users": {
        "title": "Users",
        "description": "Users",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/user"
        }
      },
      "response_auth_confirm": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "auth"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "me": {
                    "$ref": "#/components/schemas/user"
                  }
                },
                "required": [
                  "me"
                ]
              }
            },
            "required": [
              "type",
              "attributes"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "response_auth_request_password_reset": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "auth"
                ]
              },
              "meta": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string"
                  },
                  "detail": {
                    "type": "string"
                  }
                },
                "required": [
                  "message",
                  "detail"
                ]
              }
            },
            "required": [
              "type",
              "meta"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "response_auth_sign_in": {
        "$ref": "#/components/schemas/auth"
      },
      "response_auth_sign_out": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "auth"
                ]
              },
              "meta": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string"
                  }
                },
                "required": [
                  "message"
                ]
              }
            },
            "required": [
              "type",
              "meta"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "response_auth_sign_out401": {
        "$ref": "#/components/schemas/invalid_credentials_error"
      },
      "response_auth_sign_up": {
        "$ref": "#/components/schemas/auth"
      },
      "response_comments_create": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/comment"
          }
        },
        "required": [
          "data"
        ]
      },
      "response_comments_destroy": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "meta": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string"
                  }
                },
                "required": [
                  "message"
                ]
              }
            },
            "required": [
              "type",
              "meta"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "response_comments_show": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/comment"
          }
        },
        "required": [
          "data"
        ]
      },
      "response_error": {
        "$ref": "#/components/schemas/error"
      },
      "response_posts_destroy": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "post"
                ]
              },
              "meta": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string"
                  }
                },
                "required": [
                  "message"
                ]
              }
            },
            "required": [
              "type",
              "meta"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "response_posts_index": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/posts"
          },
          "links": {
            "$ref": "#/components/schemas/pagination_links"
          },
          "meta": {
            "$ref": "#/components/schemas/pagination_meta"
          }
        },
        "required": [
          "data"
        ]
      },
      "response_posts_show": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/post"
          }
        },
        "required": [
          "data"
        ]
      },
      "response_root_index": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "enum": [
              "If you see this, you're in!"
            ]
          }
        },
        "required": [
          "message"
        ]
      },
      "response_root_index401": {
        "$ref": "#/components/schemas/unauthorized_error"
      },
      "response_users_index": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/users"
          },
          "links": {
            "$ref": "#/components/schemas/pagination_links"
          },
          "meta": {
            "$ref": "#/components/schemas/pagination_meta"
          }
        },
        "required": [
          "data"
        ]
      },
      "response_users_show": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/user"
          }
        },
        "required": [
          "data"
        ]
      },
      "response_users_show404": {
        "$ref": "#/components/schemas/user_not_found_error"
      },
      "response_users_update": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/user"
          }
        },
        "required": [
          "data"
        ]
      },
      "parameter_auth_request_password_reset": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "auth"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  }
                },
                "required": [
                  "email"
                ]
              }
            },
            "required": [
              "type",
              "attributes"
            ]
          }
        }
      },
      "parameter_auth_reset_password": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "auth"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "password": {
                    "type": "string"
                  },
                  "reset_token": {
                    "type": "string"
                  }
                },
                "required": [
                  "password",
                  "reset_token"
                ]
              }
            },
            "required": [
              "type",
              "attributes"
            ]
          }
        }
      },
      "parameter_auth_sign_in": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "auth"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            },
            "required": [
              "type",
              "attributes"
            ]
          }
        }
      },
      "parameter_auth_sign_out": {
        "type": "string",
        "nullable": true,
        "enum": [
          "true",
          "false"
        ]
      },
      "parameter_auth_sign_up": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "auth"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "username",
                  "password"
                ]
              }
            },
            "required": [
              "type",
              "attributes"
            ]
          }
        }
      },
      "parameter_comments_create": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "post"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "body": {
                    "description": "Comment body",
                    "type": "string"
                  },
                  "commentable_type": {
                    "description": "Commentable type",
                    "enum": [
                      "Post"
                    ],
                    "type": "string"
                  },
                  "commentable_id": {
                    "description": "Commentable ID",
                    "type": "string"
                  },
                  "parent_id": {
                    "description": "Comment parent ID",
                    "type": "string",
                    "required": false
                  }
                }
              }
            },
            "required": [
              "type",
              "attributes"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "parameter_posts_create": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "post"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "body": {
                    "description": "Post body",
                    "type": "string"
                  }
                }
              }
            },
            "required": [
              "type",
              "attributes"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "parameter_users_update": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "user"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "current_password": {
                    "description": "Current password",
                    "type": "string"
                  },
                  "password": {
                    "description": "New password",
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "username": {
                    "type": "string"
                  },
                  "role": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/role_value"
                      },
                      {
                        "$ref": "#/components/schemas/role_name"
                      }
                    ]
                  }
                }
              }
            },
            "required": [
              "type",
              "attributes"
            ]
          }
        },
        "required": [
          "data"
        ]
      }
    }
  },
  "paths": {
    "/auth/sign_in": {
      "post": {
        "summary": "Sign In",
        "tags": [
          "Auth"
        ],
        "description": "Sign In",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "type": "auth",
                    "attributes": {
                      "access_token": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOjEsImV4cCI6MTY1MzE0MDI5MSwianRpIjoiMmRmNzYzZWNmNTk1NWM2Yzc2Y2Y4ODYwNTM2MzM1YTMiLCJ0eXBlIjoiYWNjZXNzIn0.v5_YV_tljofcV_40MxWnI2kGl7GPeeWASxo_w8eTqrU",
                      "refresh_token": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOjEsImV4cCI6MTY1NTcyODY5MSwianRpIjoiMmRmNzYzZWNmNTk1NWM2Yzc2Y2Y4ODYwNTM2MzM1YTMiLCJ0eXBlIjoicmVmcmVzaCJ9.6dQ3d4B1Qr4qsMeEZwrJmb_O52yjEYuoKR_a_LYqFjI",
                      "me": {
                        "id": "1",
                        "type": "user",
                        "attributes": {
                          "email": "0@mail.com",
                          "username": "Poseidon26373",
                          "created_at": "2022-05-21T12:38:11.342Z",
                          "updated_at": "2022-05-21T12:38:11.382Z",
                          "comments_count": 0,
                          "posts_count": 0,
                          "role": {
                            "name": "user",
                            "value": 0
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_auth_sign_in"
                }
              }
            }
          },
          "401": {
            "description": "invalid credentials",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "status": "401",
                      "title": "Invalid credentials"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/invalid_credentials_error"
                }
              }
            }
          },
          "422": {
            "description": "param is missing",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unprocessable_entity",
                      "status": "422",
                      "title": "param is missing or the value is empty: attributes"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/param_is_missing"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/parameter_auth_sign_in"
              }
            }
          }
        }
      }
    },
    "/auth/sign_up": {
      "post": {
        "summary": "Sign Up",
        "tags": [
          "Auth"
        ],
        "description": "Sign Up",
        "parameters": [],
        "responses": {
          "201": {
            "description": "created",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "type": "auth",
                    "attributes": {
                      "access_token": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOjMsImV4cCI6MTY1MzE0MDI5MSwianRpIjoiYjE0N2E0MjYwOGQ1ZTMyY2I4ZDJiNzBiMmUzMGNmZTIiLCJ0eXBlIjoiYWNjZXNzIn0.OC0Kjc9bIhOs-KwD1nvhTilqw8SJKeULs8ycBcCz-QM",
                      "refresh_token": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOjMsImV4cCI6MTY1NTcyODY5MSwianRpIjoiYjE0N2E0MjYwOGQ1ZTMyY2I4ZDJiNzBiMmUzMGNmZTIiLCJ0eXBlIjoicmVmcmVzaCJ9.22j0GfOVIxRSkP16ocJpm57UVHwU18Lnx-P9eyS-jlA",
                      "me": {
                        "id": "3",
                        "type": "user",
                        "attributes": {
                          "email": "0@mail.com",
                          "username": "User000",
                          "created_at": "2022-05-21T12:38:11.489Z",
                          "updated_at": "2022-05-21T12:38:11.505Z",
                          "comments_count": 0,
                          "posts_count": 0,
                          "role": {
                            "name": "unconfirmed",
                            "value": -30
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_auth_sign_up"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/parameter_auth_sign_up"
              }
            }
          }
        }
      }
    },
    "/auth/sign_out": {
      "delete": {
        "summary": "Sign Out",
        "tags": [
          "Auth"
        ],
        "description": "Sign Out",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "everywhere",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/parameter_auth_sign_out"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "type": "auth",
                    "meta": {
                      "message": "User signed out successfully"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_auth_sign_out"
                }
              }
            }
          },
          "401": {
            "description": "invalid credentials",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "status": "401",
                      "title": "Invalid credentials"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/invalid_credentials_error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/confirm": {
      "get": {
        "summary": "Confirm User",
        "tags": [
          "Auth"
        ],
        "description": "Confirm User",
        "parameters": [
          {
            "name": "confirmation_token",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "type": "auth",
                    "attributes": {
                      "me": {
                        "id": "6",
                        "type": "user",
                        "attributes": {
                          "email": "user_3@example.com",
                          "username": "Hephaestus94896",
                          "created_at": "2022-05-21T12:38:11.558Z",
                          "updated_at": "2022-05-21T12:38:11.568Z",
                          "comments_count": 0,
                          "posts_count": 0,
                          "role": {
                            "name": "user",
                            "value": 0
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_auth_confirm"
                }
              }
            }
          },
          "400": {
            "description": "Invalid value",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "bad_request",
                      "status": "400",
                      "title": "Invalid value"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/invalid_value"
                }
              }
            }
          },
          "422": {
            "description": "Missing params",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unprocessable_entity",
                      "status": "422",
                      "title": "param is missing or the value is empty: confirmation_token"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/param_is_missing"
                }
              }
            }
          }
        }
      }
    },
    "/auth/request_password_reset": {
      "post": {
        "summary": "Request Password Reset",
        "tags": [
          "Auth"
        ],
        "description": "Request Password Reset",
        "parameters": [],
        "responses": {
          "200": {
            "description": "instructions sent",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "type": "auth",
                    "meta": {
                      "message": "Instructions sent",
                      "detail": "Password recovery instructions were sent"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_auth_request_password_reset"
                }
              }
            }
          },
          "404": {
            "description": "User with this email not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "not_found",
                      "status": "404",
                      "title": "Record not found",
                      "detail": [
                        "User with email a123456@mail.com not found"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/parameter_auth_request_password_reset"
              }
            }
          }
        }
      }
    },
    "/auth/reset_password": {
      "post": {
        "summary": "Reset Password",
        "tags": [
          "Auth"
        ],
        "description": "Reset Password",
        "parameters": [],
        "responses": {
          "200": {
            "description": "password reset successfully",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "type": "auth",
                    "attributes": {
                      "access_token": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOjgsImV4cCI6MTY1MzE0MDI5MSwianRpIjoiYzA2MzE1NDYzZTk2NGQ2ZDgzYjAzNTQ0MGRjN2YyMjUiLCJ0eXBlIjoiYWNjZXNzIn0.yj6dDQcYAIWTb5iqjEZ3V_B6COnwpolqNThsuVAB40s",
                      "refresh_token": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOjgsImV4cCI6MTY1NTcyODY5MSwianRpIjoiYzA2MzE1NDYzZTk2NGQ2ZDgzYjAzNTQ0MGRjN2YyMjUiLCJ0eXBlIjoicmVmcmVzaCJ9.WiDfN4hlFPk_yG53tH0JrYerJW-m5fW3xeWDbDOj49w",
                      "me": {
                        "id": "8",
                        "type": "user",
                        "attributes": {
                          "email": "user_5@example.com",
                          "username": "Hera88769",
                          "created_at": "2022-05-21T12:38:11.631Z",
                          "updated_at": "2022-05-21T12:38:11.639Z",
                          "comments_count": 0,
                          "posts_count": 0,
                          "role": {
                            "name": "admin",
                            "value": 50
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/auth"
                }
              }
            }
          },
          "401": {
            "description": "Invalid token",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "status": "401",
                      "title": "Invalid credentials"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/parameter_auth_reset_password"
              }
            }
          }
        }
      }
    },
    "/comments": {
      "post": {
        "summary": "create comment",
        "tags": [
          "Comments"
        ],
        "description": "Create comments",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "responses": {
          "201": {
            "description": "created successful",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "1",
                    "type": "comment",
                    "attributes": {
                      "body": "Accusamus ut maxime. Excepturi pariatur ut.",
                      "user_id": 9,
                      "commentable_id": 1,
                      "parent_id": null,
                      "created_at": "2022-05-21T12:38:11.744Z",
                      "edited_at": null,
                      "edited": false,
                      "deleted": false
                    },
                    "meta": {
                      "children_count": 0
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_comments_create"
                }
              }
            }
          },
          "401": {
            "description": "user is suspended",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "status": "401",
                      "title": "You are banned"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          },
          "422": {
            "description": "validation error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unprocessable_entity",
                      "status": "422",
                      "title": "Record Invalid",
                      "detail": [
                        "Body is too long (maximum is 10000 characters)"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/parameter_comments_create"
              }
            }
          }
        }
      }
    },
    "/comments/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "show comment",
        "tags": [
          "Comments"
        ],
        "description": "Show comment",
        "responses": {
          "200": {
            "description": "comment found",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "2",
                    "type": "comment",
                    "attributes": {
                      "body": "Quisquam molestias et. Sed consequatur quia.",
                      "user_id": 12,
                      "commentable_id": 4,
                      "parent_id": null,
                      "created_at": "2022-05-21T12:38:11.960Z",
                      "edited_at": null,
                      "edited": false,
                      "deleted": false
                    },
                    "meta": {
                      "children_count": 0
                    },
                    "children": []
                  },
                  "meta": {
                    "descendant_count": 0
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_comments_show"
                }
              }
            }
          },
          "404": {
            "description": "comment not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "not_found",
                      "status": "404",
                      "title": "Not Found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "delete comment",
        "tags": [
          "Comments"
        ],
        "description": "Delete comment",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "type": "comment",
                    "meta": {
                      "message": "Comment successfully destroyed"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_comments_destroy"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "status": "401",
                      "title": "Unauthorized",
                      "detail": [
                        "You must be logged in"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden user",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "forbidden",
                      "status": "403",
                      "title": "Unauthorized",
                      "detail": [
                        "not allowed to destroy? this Comment"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          },
          "404": {
            "description": "comment not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "not_found",
                      "status": "404",
                      "title": "Not Found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "summary": "check auth",
        "tags": [
          "Auth Check"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "example": {
                  "message": "If you see this, you're in!"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "status": "401",
                      "title": "You need to sign in or sign up before continuing"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/posts": {
      "get": {
        "summary": "list posts",
        "tags": [
          "Posts"
        ],
        "description": "Get posts",
        "parameters": [
          {
            "name": "page[number]",
            "in": "query",
            "description": "Page number",
            "minimum": 1,
            "default": 1,
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Per page",
            "minimum": 1,
            "maximum": 100,
            "default": 20,
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort by",
            "enum": [
              "body",
              "-body",
              "created_at",
              "-created_at"
            ],
            "example": "body,-created_at",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[body]",
            "in": "query",
            "description": "Filter by body contains",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[created_at[before]]",
            "in": "query",
            "description": "Filter by created before date",
            "example": "2023-04-15",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[created_at[after]]",
            "in": "query",
            "description": "Filter by created before date",
            "example": "2021-04-15",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "headers": {
              "Link": {
                "schema": {
                  "type": "string",
                  "example": "<http://localhost:3000/api/v1/users?page%5Bnumber%5D=1&page%5Bsize%5D=5>; rel=\"first\""
                },
                "description": "Links to another pages"
              },
              "X-Total-Pages": {
                "schema": {
                  "type": "integer",
                  "example": 10,
                  "minimum": 1,
                  "maximum": 100
                },
                "description": "The total number of pages of the resource"
              },
              "Per-Page": {
                "schema": {
                  "type": "integer",
                  "example": 4
                },
                "description": "Resource entries per page"
              },
              "Current-Page": {
                "schema": {
                  "type": "integer",
                  "example": 1
                },
                "description": "Current page"
              },
              "X-Total-Count": {
                "schema": {
                  "type": "integer",
                  "example": 2
                },
                "description": "The total number of the resource"
              },
              "Content-Range": {
                "schema": {
                  "type": "string",
                  "example": "items 11-15/100"
                },
                "description": "items from-to/count"
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "9",
                      "type": "post",
                      "attributes": {
                        "body": "Labore voluptas natus. Quia nemo aut.",
                        "created_at": "2022-05-21T12:38:12.125Z",
                        "updated_at": "2022-05-21T12:38:12.125Z",
                        "comments_count": 0
                      },
                      "relationships": {
                        "user": {
                          "data": {
                            "id": "19",
                            "type": "user"
                          }
                        }
                      }
                    },
                    {
                      "id": "8",
                      "type": "post",
                      "attributes": {
                        "body": "Consectetur molestias expedita. Qui nihil fuga.",
                        "created_at": "2022-05-21T12:38:12.116Z",
                        "updated_at": "2022-05-21T12:38:12.116Z",
                        "comments_count": 0
                      },
                      "relationships": {
                        "user": {
                          "data": {
                            "id": "18",
                            "type": "user"
                          }
                        }
                      }
                    }
                  ],
                  "links": {
                    "first": "/api/v1/posts?page%5Bnumber%5D=1",
                    "self": "/api/v1/posts?page%5Bnumber%5D=1",
                    "last": "/api/v1/posts?page%5Bnumber%5D=1"
                  },
                  "meta": {
                    "total": 2,
                    "pages": 1,
                    "current_page": 1,
                    "per_page": 20,
                    "from": 1,
                    "to": 2
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_posts_index"
                }
              }
            }
          },
          "400": {
            "description": "invalid pagination",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "bad_request",
                      "status": "400",
                      "title": "Invalid Parameter",
                      "detail": [
                        "page[number] must be a positive integer; got -1"
                      ],
                      "source": {
                        "parameter": "page[number]"
                      }
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/pagination_error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "create post",
        "tags": [
          "Posts"
        ],
        "description": "Create posts",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "responses": {
          "201": {
            "description": "created successful",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "11",
                    "type": "post",
                    "attributes": {
                      "body": "Nesciunt architecto magnam. Ducimus error ut.",
                      "created_at": "2022-05-21T12:38:12.163Z",
                      "updated_at": "2022-05-21T12:38:12.163Z",
                      "comments_count": 0
                    },
                    "relationships": {
                      "user": {
                        "data": {
                          "id": "20",
                          "type": "user"
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_posts_show"
                }
              }
            }
          },
          "401": {
            "description": "user is suspended",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "status": "401",
                      "title": "You are banned"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          },
          "422": {
            "description": "validation error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unprocessable_entity",
                      "status": "422",
                      "title": "Record Invalid",
                      "detail": [
                        "Body is too long (maximum is 10000 characters)"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/parameter_posts_create"
              }
            }
          }
        }
      }
    },
    "/posts/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "show post",
        "tags": [
          "Posts"
        ],
        "description": "Show post",
        "responses": {
          "200": {
            "description": "post found",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "14",
                    "type": "post",
                    "attributes": {
                      "body": "Sed et sit. Enim consequuntur aut.",
                      "created_at": "2022-05-21T12:38:12.223Z",
                      "updated_at": "2022-05-21T12:38:12.223Z",
                      "comments_count": 0
                    },
                    "relationships": {
                      "user": {
                        "data": {
                          "id": "23",
                          "type": "user"
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_posts_show"
                }
              }
            }
          },
          "404": {
            "description": "post not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "not_found",
                      "status": "404",
                      "title": "Not Found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "update post",
        "tags": [
          "Posts"
        ],
        "description": "Show post",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "15",
                    "type": "post",
                    "attributes": {
                      "body": "Et ut ipsum. Eos voluptas sapiente. | updated!",
                      "created_at": "2022-05-21T12:38:12.245Z",
                      "updated_at": "2022-05-21T12:38:12.254Z",
                      "comments_count": 0
                    },
                    "relationships": {
                      "user": {
                        "data": {
                          "id": "24",
                          "type": "user"
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_posts_show"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "status": "401",
                      "title": "Unauthorized",
                      "detail": [
                        "You must be logged in"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden user",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "forbidden",
                      "status": "403",
                      "title": "Unauthorized",
                      "detail": [
                        "not allowed to update? this Post"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          },
          "404": {
            "description": "post not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "not_found",
                      "status": "404",
                      "title": "Not Found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          },
          "422": {
            "description": "validation error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unprocessable_entity",
                      "status": "422",
                      "title": "Record Invalid",
                      "detail": [
                        "Body is too long (maximum is 10000 characters)"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/parameter_posts_create"
              }
            }
          }
        }
      },
      "put": {
        "summary": "update post",
        "tags": [
          "Posts"
        ],
        "description": "Show post",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "19",
                    "type": "post",
                    "attributes": {
                      "body": "Reiciendis excepturi tempore. Beatae est sint. | updated!",
                      "created_at": "2022-05-21T12:38:12.397Z",
                      "updated_at": "2022-05-21T12:38:12.406Z",
                      "comments_count": 0
                    },
                    "relationships": {
                      "user": {
                        "data": {
                          "id": "29",
                          "type": "user"
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_posts_show"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "status": "401",
                      "title": "Unauthorized",
                      "detail": [
                        "You must be logged in"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden user",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "forbidden",
                      "status": "403",
                      "title": "Unauthorized",
                      "detail": [
                        "not allowed to update? this Post"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          },
          "404": {
            "description": "post not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "not_found",
                      "status": "404",
                      "title": "Not Found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          },
          "422": {
            "description": "validation error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unprocessable_entity",
                      "status": "422",
                      "title": "Record Invalid",
                      "detail": [
                        "Body is too long (maximum is 10000 characters)"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/parameter_posts_create"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "delete post",
        "tags": [
          "Posts"
        ],
        "description": "Delete post",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "type": "post",
                    "meta": {
                      "message": "Post successfully destroyed"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_posts_destroy"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "status": "401",
                      "title": "Unauthorized",
                      "detail": [
                        "You must be logged in"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden user",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "forbidden",
                      "status": "403",
                      "title": "Unauthorized",
                      "detail": [
                        "not allowed to destroy? this Post"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          },
          "404": {
            "description": "post not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "not_found",
                      "status": "404",
                      "title": "Not Found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "list users",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "page[number]",
            "in": "query",
            "description": "Page number",
            "minimum": 1,
            "default": 1,
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Per page",
            "minimum": 1,
            "maximum": 100,
            "default": 20,
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort by",
            "enum": [
              "username",
              "-username",
              "email",
              "-email",
              "created_at",
              "-created_at"
            ],
            "example": "username,-created_at",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[username]",
            "in": "query",
            "description": "Filter by username contains",
            "example": "username",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[email]",
            "in": "query",
            "description": "Filter by email contains",
            "example": "a@mail",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[created_at[before]]",
            "in": "query",
            "description": "Filter by created before date",
            "example": "2022-04-15",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[created_at[after]]",
            "in": "query",
            "description": "Filter by created before date",
            "example": "2022-04-15",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "headers": {
              "Link": {
                "schema": {
                  "type": "string",
                  "example": "<http://localhost:3000/api/v1/users?page%5Bnumber%5D=1&page%5Bsize%5D=5>; rel=\"first\""
                },
                "description": "Links to another pages"
              },
              "X-Total-Pages": {
                "schema": {
                  "type": "integer",
                  "example": 10,
                  "minimum": 1,
                  "maximum": 100
                },
                "description": "The total number of pages of the resource"
              },
              "Per-Page": {
                "schema": {
                  "type": "integer",
                  "example": 4
                },
                "description": "Resource entries per page"
              },
              "Current-Page": {
                "schema": {
                  "type": "integer",
                  "example": 1
                },
                "description": "Current page"
              },
              "X-Total-Count": {
                "schema": {
                  "type": "integer",
                  "example": 2
                },
                "description": "The total number of the resource"
              },
              "Content-Range": {
                "schema": {
                  "type": "string",
                  "example": "items 11-15/100"
                },
                "description": "items from-to/count"
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "39",
                      "type": "user",
                      "attributes": {
                        "email": "user_36@example.com",
                        "username": "Dionysus12163",
                        "created_at": "2022-05-21T12:38:12.603Z",
                        "updated_at": "2022-05-21T12:38:12.603Z",
                        "comments_count": 0,
                        "posts_count": 0,
                        "role": {
                          "name": "user",
                          "value": 0
                        }
                      }
                    },
                    {
                      "id": "38",
                      "type": "user",
                      "attributes": {
                        "email": "user_35@example.com",
                        "username": "Apollo15996",
                        "created_at": "2022-05-21T12:38:12.596Z",
                        "updated_at": "2022-05-21T12:38:12.596Z",
                        "comments_count": 0,
                        "posts_count": 0,
                        "role": {
                          "name": "user",
                          "value": 0
                        }
                      }
                    }
                  ],
                  "links": {
                    "first": "/api/v1/users?page%5Bnumber%5D=1",
                    "self": "/api/v1/users?page%5Bnumber%5D=1",
                    "last": "/api/v1/users?page%5Bnumber%5D=1"
                  },
                  "meta": {
                    "total": 2,
                    "pages": 1,
                    "current_page": 1,
                    "per_page": 20,
                    "from": 1,
                    "to": 2
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_users_index"
                }
              }
            }
          },
          "400": {
            "description": "invalid pagination",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "bad_request",
                      "status": "400",
                      "title": "Invalid Parameter",
                      "detail": [
                        "page[number] must be a positive integer; got -1"
                      ],
                      "source": {
                        "parameter": "page[number]"
                      }
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/pagination_error"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Retrieves a user",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "user found",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "40",
                    "type": "user",
                    "attributes": {
                      "email": "user_37@example.com",
                      "username": "Dionysus45153",
                      "created_at": "2022-05-21T12:38:12.633Z",
                      "updated_at": "2022-05-21T12:38:12.633Z",
                      "comments_count": 0,
                      "posts_count": 0,
                      "role": {
                        "name": "user",
                        "value": 0
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_users_show"
                }
              }
            }
          },
          "404": {
            "description": "user not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "not_found",
                      "status": "404",
                      "title": "Not Found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_users_show404"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Updates a user",
        "tags": [
          "Users"
        ],
        "description": "Updates a user",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "user data updated",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "41",
                    "type": "user",
                    "attributes": {
                      "email": "user_38@example.com",
                      "username": "NewGreatUsername1",
                      "created_at": "2022-05-21T12:38:12.670Z",
                      "updated_at": "2022-05-21T12:38:12.687Z",
                      "comments_count": 0,
                      "posts_count": 0,
                      "role": {
                        "name": "user",
                        "value": 0
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_users_show"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "status": "401",
                      "title": "Unauthorized",
                      "detail": [
                        "You must be logged in"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/you_must_be_logged_in"
                }
              }
            }
          },
          "403": {
            "description": "Not enough permissions",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "forbidden",
                      "status": "403",
                      "title": "Unauthorized",
                      "detail": [
                        "User must be at least a moderator, You cant update your own role, and You cant assign role higher then yours"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          },
          "404": {
            "description": "user not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "not_found",
                      "status": "404",
                      "title": "Not Found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_users_show404"
                }
              }
            }
          },
          "422": {
            "description": "unprocessable entity",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unprocessable_entity",
                      "status": "422",
                      "title": "Record Invalid",
                      "detail": [
                        "Username is invalid"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/record_is_invalid"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/parameter_users_update"
              }
            }
          }
        }
      },
      "put": {
        "summary": "Updates a user",
        "tags": [
          "Users"
        ],
        "description": "Updates a user",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "user data updated",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "46",
                    "type": "user",
                    "attributes": {
                      "email": "user_43@example.com",
                      "username": "NewGreatUsername1",
                      "created_at": "2022-05-21T12:38:12.776Z",
                      "updated_at": "2022-05-21T12:38:12.789Z",
                      "comments_count": 0,
                      "posts_count": 0,
                      "role": {
                        "name": "user",
                        "value": 0
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_users_show"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "status": "401",
                      "title": "Unauthorized",
                      "detail": [
                        "You must be logged in"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/you_must_be_logged_in"
                }
              }
            }
          },
          "403": {
            "description": "Not enough permissions",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "forbidden",
                      "status": "403",
                      "title": "Unauthorized",
                      "detail": [
                        "User must be at least a moderator, You cant update your own role, and You cant assign role higher then yours"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          },
          "404": {
            "description": "user not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "not_found",
                      "status": "404",
                      "title": "Not Found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_users_show404"
                }
              }
            }
          },
          "422": {
            "description": "unprocessable entity",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unprocessable_entity",
                      "status": "422",
                      "title": "Record Invalid",
                      "detail": [
                        "Username is invalid"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/record_is_invalid"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/parameter_users_update"
              }
            }
          }
        }
      }
    },
    "/users/{id}/posts": {
      "get": {
        "summary": "list user posts",
        "tags": [
          "Users"
        ],
        "description": "Get posts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[number]",
            "in": "query",
            "description": "Page number",
            "minimum": 1,
            "default": 1,
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Per page",
            "minimum": 1,
            "maximum": 100,
            "default": 20,
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort by",
            "enum": [
              "body",
              "-body",
              "created_at",
              "-created_at"
            ],
            "example": "body,-created_at",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[body]",
            "in": "query",
            "description": "Filter by body contains",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[created_at[before]]",
            "in": "query",
            "description": "Filter by created before date",
            "example": "2023-04-15",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[created_at[after]]",
            "in": "query",
            "description": "Filter by created before date",
            "example": "2021-04-15",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "headers": {
              "Link": {
                "schema": {
                  "type": "string",
                  "example": "<http://localhost:3000/api/v1/users?page%5Bnumber%5D=1&page%5Bsize%5D=5>; rel=\"first\""
                },
                "description": "Links to another pages"
              },
              "X-Total-Pages": {
                "schema": {
                  "type": "integer",
                  "example": 10,
                  "minimum": 1,
                  "maximum": 100
                },
                "description": "The total number of pages of the resource"
              },
              "Per-Page": {
                "schema": {
                  "type": "integer",
                  "example": 4
                },
                "description": "Resource entries per page"
              },
              "Current-Page": {
                "schema": {
                  "type": "integer",
                  "example": 1
                },
                "description": "Current page"
              },
              "X-Total-Count": {
                "schema": {
                  "type": "integer",
                  "example": 2
                },
                "description": "The total number of the resource"
              },
              "Content-Range": {
                "schema": {
                  "type": "string",
                  "example": "items 11-15/100"
                },
                "description": "items from-to/count"
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "30",
                      "type": "post",
                      "attributes": {
                        "body": "Expedita alias officiis. Recusandae et consequatur.",
                        "created_at": "2022-05-21T12:38:12.923Z",
                        "updated_at": "2022-05-21T12:38:12.937Z",
                        "comments_count": 0
                      },
                      "relationships": {
                        "user": {
                          "data": {
                            "id": "51",
                            "type": "user"
                          }
                        }
                      }
                    },
                    {
                      "id": "29",
                      "type": "post",
                      "attributes": {
                        "body": "Amet doloremque vel. Dolores doloremque quis.",
                        "created_at": "2022-05-21T12:38:12.915Z",
                        "updated_at": "2022-05-21T12:38:12.935Z",
                        "comments_count": 0
                      },
                      "relationships": {
                        "user": {
                          "data": {
                            "id": "51",
                            "type": "user"
                          }
                        }
                      }
                    },
                    {
                      "id": "28",
                      "type": "post",
                      "attributes": {
                        "body": "Consequuntur et perferendis. Quos cupiditate accusantium.",
                        "created_at": "2022-05-21T12:38:12.907Z",
                        "updated_at": "2022-05-21T12:38:12.932Z",
                        "comments_count": 0
                      },
                      "relationships": {
                        "user": {
                          "data": {
                            "id": "51",
                            "type": "user"
                          }
                        }
                      }
                    },
                    {
                      "id": "27",
                      "type": "post",
                      "attributes": {
                        "body": "Odit deserunt architecto. Sed et reiciendis.",
                        "created_at": "2022-05-21T12:38:12.899Z",
                        "updated_at": "2022-05-21T12:38:12.929Z",
                        "comments_count": 0
                      },
                      "relationships": {
                        "user": {
                          "data": {
                            "id": "51",
                            "type": "user"
                          }
                        }
                      }
                    },
                    {
                      "id": "26",
                      "type": "post",
                      "attributes": {
                        "body": "Non voluptatum aut. Eum dignissimos quaerat.",
                        "created_at": "2022-05-21T12:38:12.890Z",
                        "updated_at": "2022-05-21T12:38:12.926Z",
                        "comments_count": 0
                      },
                      "relationships": {
                        "user": {
                          "data": {
                            "id": "51",
                            "type": "user"
                          }
                        }
                      }
                    }
                  ],
                  "links": {
                    "first": "/api/v1/users/51/posts?page%5Bnumber%5D=1",
                    "self": "/api/v1/users/51/posts?page%5Bnumber%5D=1",
                    "last": "/api/v1/users/51/posts?page%5Bnumber%5D=1"
                  },
                  "meta": {
                    "total": 5,
                    "pages": 1,
                    "current_page": 1,
                    "per_page": 20,
                    "from": 1,
                    "to": 5
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_posts_index"
                }
              }
            }
          },
          "400": {
            "description": "invalid pagination",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "bad_request",
                      "status": "400",
                      "title": "Invalid Parameter",
                      "detail": [
                        "page[number] must be a positive integer; got -1"
                      ],
                      "source": {
                        "parameter": "page[number]"
                      }
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/pagination_error"
                }
              }
            }
          }
        }
      }
    }
  }
}
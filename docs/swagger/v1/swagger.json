{
  "openapi": "3.0.0",
  "info": {
    "title": "API V1",
    "version": "v1"
  },
  "servers": [
    {
      "url": "/api/{api_version}",
      "variables": {
        "api_version": {
          "default": "v1",
          "enum": [
            "v1"
          ]
        }
      }
    }
  ],
  "components": {
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "Bearer Token",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "auth": {
        "title": "Auth Data",
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "auth"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "access_token": {
                    "type": "string"
                  },
                  "refresh_token": {
                    "type": "string"
                  },
                  "me": {
                    "$ref": "#/components/schemas/user"
                  }
                },
                "required": [
                  "access_token",
                  "refresh_token",
                  "me"
                ]
              }
            },
            "required": [
              "type",
              "attributes"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "comment": {
        "title": "Comment",
        "description": "Comment object",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/comment_attributes"
          },
          "meta": {
            "$ref": "#/components/schemas/comment_meta"
          },
          "children": {
            "$ref": "#/components/schemas/comment_children"
          }
        },
        "required": [
          "id",
          "type",
          "attributes",
          "meta"
        ]
      },
      "comment_attributes": {
        "title": "Comment Attributes",
        "description": "Attributes for Comment",
        "type": "object",
        "properties": {
          "body": {
            "type": "string"
          },
          "user_id": {
            "type": "integer"
          },
          "commentable_id": {
            "type": "integer"
          },
          "parent_id": {
            "type": "integer",
            "nullable": true
          },
          "created_at": {
            "type": "string"
          },
          "edited_at": {
            "type": "string",
            "nullable": true
          },
          "edited": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          }
        },
        "required": [
          "body",
          "user_id",
          "commentable_id",
          "parent_id",
          "created_at",
          "edited",
          "deleted"
        ]
      },
      "comment_children": {
        "title": "Comment Children",
        "description": "Array of comment children",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/comment"
        }
      },
      "comment_meta": {
        "title": "Comment Meta",
        "description": "Comment object meta",
        "type": "object",
        "properties": {
          "children_count": {
            "type": "integer"
          }
        },
        "required": [
          "children_count"
        ]
      },
      "error": {
        "title": "Error",
        "description": "JSON:API Error response",
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string"
                },
                "code": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "detail": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "status",
                "code",
                "title"
              ]
            }
          }
        },
        "required": [
          "errors"
        ]
      },
      "invalid_credentials_error": {
        "title": "Invalid Credentials Error",
        "description": "User's token is invalid",
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "401"
                  ]
                },
                "code": {
                  "type": "string",
                  "enum": [
                    "unauthorized"
                  ]
                },
                "title": {
                  "type": "string",
                  "enum": [
                    "Invalid credentials"
                  ]
                }
              },
              "required": [
                "status",
                "code",
                "title"
              ]
            }
          }
        },
        "required": [
          "errors"
        ]
      },
      "invalid_value": {
        "title": "Invalid Value Error",
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "400"
                  ]
                },
                "code": {
                  "type": "string",
                  "enum": [
                    "bad_request"
                  ]
                },
                "title": {
                  "type": "string",
                  "enum": [
                    "Invalid value"
                  ]
                }
              },
              "required": [
                "status",
                "code",
                "title"
              ]
            }
          }
        },
        "required": [
          "errors"
        ]
      },
      "pagination_error": {
        "title": "Pagination Error",
        "description": "JSON:API Pagination Error response",
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string"
                },
                "code": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "detail": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "source": {
                  "parameter": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "status",
                "code",
                "title"
              ]
            }
          }
        },
        "required": [
          "errors"
        ]
      },
      "param_is_missing": {
        "title": "Param is missing or the value is empty",
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "422"
                  ]
                },
                "code": {
                  "type": "string",
                  "enum": [
                    "unprocessable_entity"
                  ]
                },
                "title": {
                  "type": "string"
                }
              },
              "required": [
                "status",
                "code",
                "title"
              ]
            }
          }
        },
        "required": [
          "errors"
        ]
      },
      "record_is_invalid": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "422"
                  ]
                },
                "code": {
                  "type": "string",
                  "enum": [
                    "unprocessable_entity"
                  ]
                },
                "title": {
                  "type": "string",
                  "enum": [
                    "Record Invalid"
                  ]
                },
                "detail": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "status",
                "code",
                "title"
              ]
            }
          }
        },
        "required": [
          "errors"
        ]
      },
      "unauthorized_error": {
        "title": "Unauthorized Error",
        "description": "User must sign in before continuing",
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "401"
                  ]
                },
                "code": {
                  "type": "string",
                  "enum": [
                    "unauthorized"
                  ]
                },
                "title": {
                  "type": "string",
                  "enum": [
                    "You need to sign in or sign up before continuing"
                  ]
                }
              },
              "required": [
                "status",
                "code",
                "title"
              ]
            }
          }
        },
        "required": [
          "errors"
        ]
      },
      "user_not_found_error": {
        "title": "User Not Found",
        "description": "User ID is invalid",
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "404"
                  ]
                },
                "code": {
                  "type": "string",
                  "enum": [
                    "not_found"
                  ]
                },
                "title": {
                  "type": "string",
                  "enum": [
                    "Not Found"
                  ]
                }
              },
              "required": [
                "status",
                "code",
                "title"
              ]
            }
          }
        }
      },
      "you_must_be_logged_in": {
        "title": "Unauthorized Error",
        "description": "User must log in  before continuing",
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "401"
                  ]
                },
                "code": {
                  "type": "string",
                  "enum": [
                    "unauthorized"
                  ]
                },
                "title": {
                  "type": "string"
                },
                "detail": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "You must be logged in"
                    ]
                  }
                }
              },
              "required": [
                "status",
                "code",
                "title"
              ]
            }
          }
        },
        "required": [
          "errors"
        ]
      },
      "pagination_links": {
        "title": "Pagination Links",
        "description": "Pagination Links",
        "type": "object",
        "properties": {
          "first": {
            "type": "string"
          },
          "self": {
            "type": "string"
          },
          "last": {
            "type": "string"
          },
          "next": {
            "type": "string"
          },
          "prev": {
            "type": "string"
          }
        },
        "required": [
          "first",
          "self",
          "last"
        ]
      },
      "pagination_meta": {
        "title": "Pagination Meta",
        "description": "Pagination Meta",
        "type": "object",
        "properties": {
          "total": {
            "description": "Total entries",
            "type": "integer"
          },
          "pages": {
            "description": "Total pages count",
            "type": "integer"
          },
          "current_page": {
            "description": "Current page",
            "type": "integer"
          },
          "per_page": {
            "description": "Per Page",
            "minimum": 1,
            "maximum": 100,
            "type": "integer"
          },
          "from": {
            "description": "Offset",
            "type": "integer"
          },
          "to": {
            "description": "Offset + Page length",
            "type": "integer"
          }
        },
        "required": [
          "total",
          "pages",
          "current_page",
          "per_page",
          "from",
          "to"
        ]
      },
      "post": {
        "title": "Post",
        "description": "Post object",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/post_attributes"
          },
          "relationships": {
            "$ref": "#/components/schemas/post_relationships"
          },
          "meta": {
            "type": "object",
            "properties": {
              "my_rate": {
                "type": "integer",
                "nullable": true
              }
            }
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "post_attributes": {
        "title": "Post Attributes",
        "description": "Attributes for Post",
        "type": "object",
        "properties": {
          "body": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "comments_count": {
            "type": "integer"
          }
        },
        "required": [
          "body",
          "created_at",
          "updated_at",
          "comments_count"
        ]
      },
      "post_relationships": {
        "title": "Post Relationships",
        "description": "Relationships for Post",
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "data": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "type"
                ]
              }
            },
            "required": [
              "data"
            ]
          }
        },
        "required": [
          "user"
        ]
      },
      "posts": {
        "title": "Posts",
        "description": "Posts",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/post"
        }
      },
      "role": {
        "title": "Role",
        "description": "Role",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "$ref": "#/components/schemas/role_value"
          }
        },
        "required": [
          "name",
          "value"
        ]
      },
      "role_name": {
        "title": "Role Name",
        "enum": [
          "unconfirmed",
          "banned",
          "warned",
          "user",
          "premium",
          "primary",
          "owner",
          "moderator",
          "admin"
        ],
        "type": "string",
        "description": "An enumeration"
      },
      "role_value": {
        "title": "Role Value",
        "enum": [
          -30,
          -20,
          -10,
          0,
          10,
          20,
          30,
          40,
          50
        ],
        "type": "integer",
        "description": "An enumeration"
      },
      "user": {
        "title": "User",
        "description": "User object",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/user_attributes"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "user_attributes": {
        "title": "User Attributes",
        "description": "Attributes for User",
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "avatar": {
            "$ref": "#/components/schemas/user_avatar"
          },
          "created_at": {
            "type": "string"
          },
          "posts_count": {
            "type": "integer"
          },
          "comments_count": {
            "type": "integer"
          },
          "role": {
            "$ref": "#/components/schemas/role"
          }
        },
        "required": [
          "email",
          "username",
          "created_at",
          "role",
          "posts_count",
          "comments_count"
        ]
      },
      "user_avatar": {
        "title": "User Avatar",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "url"
        ]
      },
      "users": {
        "title": "Users",
        "description": "Users",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/user"
        }
      },
      "response_auth_confirm": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "auth"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "me": {
                    "$ref": "#/components/schemas/user"
                  }
                },
                "required": [
                  "me"
                ]
              }
            },
            "required": [
              "type",
              "attributes"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "response_auth_request_password_reset": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "auth"
                ]
              },
              "meta": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string"
                  },
                  "detail": {
                    "type": "string"
                  }
                },
                "required": [
                  "message",
                  "detail"
                ]
              }
            },
            "required": [
              "type",
              "meta"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "response_auth_sign_in": {
        "$ref": "#/components/schemas/auth"
      },
      "response_auth_sign_out": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "auth"
                ]
              },
              "meta": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string"
                  }
                },
                "required": [
                  "message"
                ]
              }
            },
            "required": [
              "type",
              "meta"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "response_auth_sign_out401": {
        "$ref": "#/components/schemas/invalid_credentials_error"
      },
      "response_auth_sign_up": {
        "$ref": "#/components/schemas/auth"
      },
      "response_comments_create": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/comment"
          }
        },
        "required": [
          "data"
        ]
      },
      "response_comments_destroy": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "meta": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string"
                  }
                },
                "required": [
                  "message"
                ]
              }
            },
            "required": [
              "type",
              "meta"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "response_comments_show": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/comment"
          }
        },
        "required": [
          "data"
        ]
      },
      "response_error": {
        "$ref": "#/components/schemas/error"
      },
      "response_posts_comment": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/comment"
            }
          },
          "links": {
            "$ref": "#/components/schemas/pagination_links"
          },
          "meta": {
            "$ref": "#/components/schemas/pagination_meta"
          }
        },
        "required": [
          "data",
          "links",
          "meta"
        ]
      },
      "response_posts_destroy": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "post"
                ]
              },
              "meta": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string"
                  }
                },
                "required": [
                  "message"
                ]
              }
            },
            "required": [
              "type",
              "meta"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "response_posts_index": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/posts"
          },
          "links": {
            "$ref": "#/components/schemas/pagination_links"
          },
          "meta": {
            "$ref": "#/components/schemas/pagination_meta"
          }
        },
        "required": [
          "data"
        ]
      },
      "response_posts_show": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/post"
          },
          "meta": {
            "type": "object",
            "properties": {
              "my_rate": {
                "type": "integer",
                "nullable": true
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "response_root_index": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "enum": [
              "If you see this, you're in!"
            ]
          }
        },
        "required": [
          "message"
        ]
      },
      "response_root_index401": {
        "$ref": "#/components/schemas/unauthorized_error"
      },
      "response_users_index": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/users"
          },
          "links": {
            "$ref": "#/components/schemas/pagination_links"
          },
          "meta": {
            "$ref": "#/components/schemas/pagination_meta"
          }
        },
        "required": [
          "data"
        ]
      },
      "response_users_show": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/user"
          }
        },
        "required": [
          "data"
        ]
      },
      "response_users_show404": {
        "$ref": "#/components/schemas/user_not_found_error"
      },
      "response_users_update": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/user"
          }
        },
        "required": [
          "data"
        ]
      },
      "response_votes_success": {
        "type": "object",
        "properties": {
          "data": {
            "title": "Voting success message",
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "meta": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string"
                  }
                }
              }
            },
            "required": [
              "type",
              "meta"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "parameter_auth_request_password_reset": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "auth"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  }
                },
                "required": [
                  "email"
                ]
              }
            },
            "required": [
              "type",
              "attributes"
            ]
          }
        }
      },
      "parameter_auth_reset_password": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "auth"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "password": {
                    "type": "string"
                  },
                  "reset_token": {
                    "type": "string"
                  }
                },
                "required": [
                  "password",
                  "reset_token"
                ]
              }
            },
            "required": [
              "type",
              "attributes"
            ]
          }
        }
      },
      "parameter_auth_sign_in": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "auth"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            },
            "required": [
              "type",
              "attributes"
            ]
          }
        }
      },
      "parameter_auth_sign_out": {
        "type": "string",
        "nullable": true,
        "enum": [
          "true",
          "false"
        ]
      },
      "parameter_auth_sign_up": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "auth"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "username",
                  "password"
                ]
              }
            },
            "required": [
              "type",
              "attributes"
            ]
          }
        }
      },
      "parameter_comments_create": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "comment"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "body": {
                    "description": "Comment body",
                    "type": "string"
                  },
                  "commentable_type": {
                    "description": "Commentable type",
                    "enum": [
                      "Post"
                    ],
                    "type": "string"
                  },
                  "commentable_id": {
                    "description": "Commentable ID",
                    "type": "string"
                  },
                  "parent_id": {
                    "description": "Comment parent ID",
                    "type": "string",
                    "required": false
                  }
                }
              }
            },
            "required": [
              "type",
              "attributes"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "parameter_comments_update": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "comment"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "body": {
                    "description": "Comment body",
                    "type": "string"
                  }
                }
              }
            },
            "required": [
              "type",
              "attributes"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "parameter_posts_create": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "post"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "body": {
                    "description": "Post body",
                    "type": "string"
                  }
                }
              }
            },
            "required": [
              "type",
              "attributes"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "parameter_users_update": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "user"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "current_password": {
                    "description": "Current password",
                    "type": "string"
                  },
                  "password": {
                    "description": "New password",
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "username": {
                    "type": "string"
                  },
                  "role": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/role_value"
                      },
                      {
                        "$ref": "#/components/schemas/role_name"
                      }
                    ]
                  }
                }
              }
            },
            "required": [
              "type",
              "attributes"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "parameter_votes_vote": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "vote"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "votable_id": {
                    "description": "Votable ID",
                    "type": "integer"
                  },
                  "votable_type": {
                    "description": "Votable type (\"Post\" is default)",
                    "type": "string",
                    "required": false
                  }
                },
                "required": [
                  "votable_id"
                ]
              }
            },
            "required": [
              "type",
              "attributes"
            ]
          }
        },
        "required": [
          "data"
        ]
      }
    }
  },
  "paths": {
    "/auth/sign_in": {
      "post": {
        "summary": "Sign In",
        "tags": [
          "Auth"
        ],
        "description": "Sign In",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "type": "auth",
                    "attributes": {
                      "access_token": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOjEsImV4cCI6MTY1NjIzNzU4OCwianRpIjoiZTRiZjU4OWI4Mjg4NzE1OWY2YjZjNDYwMWFjNTNlN2EiLCJ0eXBlIjoiYWNjZXNzIn0.Toy0TEnO0aDiy9kNkkFudbcpD1yT2FoVqXKxTp9FLZY",
                      "refresh_token": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOjEsImV4cCI6MTY1ODgyNTk4OCwianRpIjoiZTRiZjU4OWI4Mjg4NzE1OWY2YjZjNDYwMWFjNTNlN2EiLCJ0eXBlIjoicmVmcmVzaCJ9.JyE-tK5nUaqgyhsLhrpvvCQW2ldMcMRh5oKaO_ww4c0",
                      "me": {
                        "id": "1",
                        "type": "user",
                        "attributes": {
                          "email": "0@mail.com",
                          "username": "Poseidon93494",
                          "avatar": {
                            "url": null
                          },
                          "created_at": "2022-06-26T08:59:48.404Z",
                          "updated_at": "2022-06-26T08:59:48.432Z",
                          "comments_count": 0,
                          "posts_count": 0,
                          "role": {
                            "name": "user",
                            "value": 0
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_auth_sign_in"
                }
              }
            }
          },
          "401": {
            "description": "invalid credentials",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "status": "401",
                      "title": "Invalid credentials"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/invalid_credentials_error"
                }
              }
            }
          },
          "422": {
            "description": "param is missing",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unprocessable_entity",
                      "status": "422",
                      "title": "param is missing or the value is empty: attributes"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/param_is_missing"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/parameter_auth_sign_in"
              }
            }
          }
        }
      }
    },
    "/auth/sign_up": {
      "post": {
        "summary": "Sign Up",
        "tags": [
          "Auth"
        ],
        "description": "Sign Up",
        "parameters": [],
        "responses": {
          "201": {
            "description": "created",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "type": "auth",
                    "attributes": {
                      "access_token": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOjMsImV4cCI6MTY1NjIzNzU4OCwianRpIjoiYjI1NjFjZmI5ZmI4OTg5ZWM2ZDJjMjliMDg4YzVmZGMiLCJ0eXBlIjoiYWNjZXNzIn0.O6XZHdzru1K_jXiBrTE5Tmx_sqPAC5qto92GTj4Rcyg",
                      "refresh_token": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOjMsImV4cCI6MTY1ODgyNTk4OCwianRpIjoiYjI1NjFjZmI5ZmI4OTg5ZWM2ZDJjMjliMDg4YzVmZGMiLCJ0eXBlIjoicmVmcmVzaCJ9.n8VI6Pi33Yurly3CBeHsv2DgzBYY9d0zIAF9aOkoVMk",
                      "me": {
                        "id": "3",
                        "type": "user",
                        "attributes": {
                          "email": "0@mail.com",
                          "username": "User000",
                          "avatar": {
                            "url": null
                          },
                          "created_at": "2022-06-26T08:59:48.468Z",
                          "updated_at": "2022-06-26T08:59:48.478Z",
                          "comments_count": 0,
                          "posts_count": 0,
                          "role": {
                            "name": "unconfirmed",
                            "value": -30
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_auth_sign_up"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/parameter_auth_sign_up"
              }
            }
          }
        }
      }
    },
    "/auth/sign_out": {
      "delete": {
        "summary": "Sign Out",
        "tags": [
          "Auth"
        ],
        "description": "Sign Out",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "everywhere",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/parameter_auth_sign_out"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "type": "auth",
                    "meta": {
                      "message": "User signed out successfully"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_auth_sign_out"
                }
              }
            }
          },
          "401": {
            "description": "invalid credentials",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "status": "401",
                      "title": "Invalid credentials"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/invalid_credentials_error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/confirm": {
      "get": {
        "summary": "Confirm User",
        "tags": [
          "Auth"
        ],
        "description": "Confirm User",
        "parameters": [
          {
            "name": "confirmation_token",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "type": "auth",
                    "attributes": {
                      "me": {
                        "id": "6",
                        "type": "user",
                        "attributes": {
                          "email": "user_3@example.com",
                          "username": "Hermes48243",
                          "avatar": {
                            "url": null
                          },
                          "created_at": "2022-06-26T08:59:48.522Z",
                          "updated_at": "2022-06-26T08:59:48.529Z",
                          "comments_count": 0,
                          "posts_count": 0,
                          "role": {
                            "name": "user",
                            "value": 0
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_auth_confirm"
                }
              }
            }
          },
          "400": {
            "description": "Invalid value",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "bad_request",
                      "status": "400",
                      "title": "Invalid value"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/invalid_value"
                }
              }
            }
          },
          "422": {
            "description": "Missing params",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unprocessable_entity",
                      "status": "422",
                      "title": "param is missing or the value is empty: confirmation_token"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/param_is_missing"
                }
              }
            }
          }
        }
      }
    },
    "/auth/request_password_reset": {
      "post": {
        "summary": "Request Password Reset",
        "tags": [
          "Auth"
        ],
        "description": "Request Password Reset",
        "parameters": [],
        "responses": {
          "200": {
            "description": "instructions sent",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "type": "auth",
                    "meta": {
                      "message": "Instructions sent",
                      "detail": "Password recovery instructions were sent"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_auth_request_password_reset"
                }
              }
            }
          },
          "404": {
            "description": "User with this email not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "not_found",
                      "status": "404",
                      "title": "Record not found",
                      "detail": [
                        "User with email a123456@mail.com not found"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/parameter_auth_request_password_reset"
              }
            }
          }
        }
      }
    },
    "/auth/reset_password": {
      "post": {
        "summary": "Reset Password",
        "tags": [
          "Auth"
        ],
        "description": "Reset Password",
        "parameters": [],
        "responses": {
          "200": {
            "description": "password reset successfully",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "type": "auth",
                    "attributes": {
                      "access_token": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOjgsImV4cCI6MTY1NjIzNzU4OCwianRpIjoiNTNjZThhODZkMGEzZDZhZjJmMWJlN2ZmOWI1ZGY1ZTciLCJ0eXBlIjoiYWNjZXNzIn0.ekyCzg0k3u5Hw86yQwzfXyXwr6zKTQWswD4HA9RfgzA",
                      "refresh_token": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOjgsImV4cCI6MTY1ODgyNTk4OCwianRpIjoiNTNjZThhODZkMGEzZDZhZjJmMWJlN2ZmOWI1ZGY1ZTciLCJ0eXBlIjoicmVmcmVzaCJ9.D75bAkd22psPiixrGJGvfKq7kejbWvuIw2-DeHPSKJI",
                      "me": {
                        "id": "8",
                        "type": "user",
                        "attributes": {
                          "email": "user_5@example.com",
                          "username": "Hades96170",
                          "avatar": {
                            "url": null
                          },
                          "created_at": "2022-06-26T08:59:48.575Z",
                          "updated_at": "2022-06-26T08:59:48.580Z",
                          "comments_count": 0,
                          "posts_count": 0,
                          "role": {
                            "name": "admin",
                            "value": 50
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/auth"
                }
              }
            }
          },
          "401": {
            "description": "Invalid token",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "status": "401",
                      "title": "Invalid credentials"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/parameter_auth_reset_password"
              }
            }
          }
        }
      }
    },
    "/comments": {
      "post": {
        "summary": "create comment",
        "tags": [
          "Comments"
        ],
        "description": "Create comments",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "responses": {
          "201": {
            "description": "created successful",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "1",
                    "type": "comment",
                    "attributes": {
                      "body": "Dignissimos sit at. Odit sit qui.",
                      "user_id": 9,
                      "commentable_id": 1,
                      "parent_id": null,
                      "created_at": "2022-06-26T08:59:48.624Z",
                      "edited_at": null,
                      "edited": false,
                      "deleted": false
                    },
                    "meta": {
                      "children_count": 0
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_comments_create"
                }
              }
            }
          },
          "401": {
            "description": "user is suspended",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "status": "401",
                      "title": "You are banned"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          },
          "422": {
            "description": "validation error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unprocessable_entity",
                      "status": "422",
                      "title": "Record Invalid",
                      "detail": [
                        "Body is too long (maximum is 10000 characters)"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/parameter_comments_create"
              }
            }
          }
        }
      }
    },
    "/comments/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "show comment",
        "tags": [
          "Comments"
        ],
        "description": "Show comment",
        "responses": {
          "200": {
            "description": "comment found",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "2",
                    "type": "comment",
                    "attributes": {
                      "body": "Et qui eum. Libero soluta non.",
                      "user_id": 12,
                      "commentable_id": 4,
                      "parent_id": null,
                      "created_at": "2022-06-26T08:59:48.687Z",
                      "edited_at": null,
                      "edited": false,
                      "deleted": false
                    },
                    "meta": {
                      "children_count": 0
                    },
                    "children": []
                  },
                  "meta": {
                    "descendant_count": 0
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_comments_show"
                }
              }
            }
          },
          "404": {
            "description": "comment not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "not_found",
                      "status": "404",
                      "title": "Not Found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "update comment",
        "tags": [
          "Comments"
        ],
        "description": "Update comment",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "3",
                    "type": "comment",
                    "attributes": {
                      "body": "Quis qui itaque. Facilis officia qui. | updated!",
                      "user_id": 13,
                      "commentable_id": 5,
                      "parent_id": null,
                      "created_at": "2022-06-26T08:59:48.716Z",
                      "edited_at": "2022-06-26T08:59:48.724Z",
                      "edited": true,
                      "deleted": false
                    },
                    "meta": {
                      "children_count": 0
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_comments_show"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "status": "401",
                      "title": "Unauthorized",
                      "detail": [
                        "You must be logged in"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden user",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "forbidden",
                      "status": "403",
                      "title": "Forbidden",
                      "detail": [
                        "not allowed to update? this Comment"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          },
          "404": {
            "description": "comment not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "not_found",
                      "status": "404",
                      "title": "Not Found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          },
          "422": {
            "description": "validation error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unprocessable_entity",
                      "status": "422",
                      "title": "Record Invalid",
                      "detail": [
                        "Body is too long (maximum is 10000 characters)"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/parameter_comments_update"
              }
            }
          }
        }
      },
      "put": {
        "summary": "update comment",
        "tags": [
          "Comments"
        ],
        "description": "Update comment",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "7",
                    "type": "comment",
                    "attributes": {
                      "body": "Assumenda qui nemo. Enim sed laudantium. | updated!",
                      "user_id": 18,
                      "commentable_id": 9,
                      "parent_id": null,
                      "created_at": "2022-06-26T08:59:48.825Z",
                      "edited_at": "2022-06-26T08:59:48.834Z",
                      "edited": true,
                      "deleted": false
                    },
                    "meta": {
                      "children_count": 0
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_comments_show"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "status": "401",
                      "title": "Unauthorized",
                      "detail": [
                        "You must be logged in"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden user",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "forbidden",
                      "status": "403",
                      "title": "Forbidden",
                      "detail": [
                        "not allowed to update? this Comment"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          },
          "404": {
            "description": "comment not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "not_found",
                      "status": "404",
                      "title": "Not Found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          },
          "422": {
            "description": "validation error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unprocessable_entity",
                      "status": "422",
                      "title": "Record Invalid",
                      "detail": [
                        "Body is too long (maximum is 10000 characters)"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/parameter_comments_update"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "delete comment",
        "tags": [
          "Comments"
        ],
        "description": "Delete comment",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "type": "comment",
                    "meta": {
                      "message": "Comment successfully destroyed"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_comments_destroy"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "status": "401",
                      "title": "Unauthorized",
                      "detail": [
                        "You must be logged in"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden user",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "forbidden",
                      "status": "403",
                      "title": "Forbidden",
                      "detail": [
                        "not allowed to destroy? this Comment"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          },
          "404": {
            "description": "comment not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "not_found",
                      "status": "404",
                      "title": "Not Found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "summary": "check auth",
        "tags": [
          "Auth Check"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "example": {
                  "message": "If you see this, you're in!"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "status": "401",
                      "title": "You need to sign in or sign up before continuing"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/posts": {
      "get": {
        "summary": "list posts",
        "tags": [
          "Posts"
        ],
        "description": "Get posts",
        "parameters": [
          {
            "name": "page[number]",
            "in": "query",
            "description": "Page number",
            "minimum": 1,
            "default": 1,
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Per page",
            "minimum": 1,
            "maximum": 100,
            "default": 20,
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort by",
            "enum": [
              "body",
              "-body",
              "created_at",
              "-created_at"
            ],
            "example": "body,-created_at",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[body]",
            "in": "query",
            "description": "Filter by body contains",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[created_at[before]]",
            "in": "query",
            "description": "Filter by created before date",
            "example": "2023-04-15",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[created_at[after]]",
            "in": "query",
            "description": "Filter by created before date",
            "example": "2021-04-15",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "headers": {
              "Link": {
                "schema": {
                  "type": "string",
                  "example": "<http://localhost:3000/api/v1/users?page%5Bnumber%5D=1&page%5Bsize%5D=5>; rel=\"first\""
                },
                "description": "Links to another pages"
              },
              "X-Total-Pages": {
                "schema": {
                  "type": "integer",
                  "example": 10,
                  "minimum": 1,
                  "maximum": 100
                },
                "description": "The total number of pages of the resource"
              },
              "Per-Page": {
                "schema": {
                  "type": "integer",
                  "example": 4
                },
                "description": "Resource entries per page"
              },
              "Current-Page": {
                "schema": {
                  "type": "integer",
                  "example": 1
                },
                "description": "Current page"
              },
              "X-Total-Count": {
                "schema": {
                  "type": "integer",
                  "example": 2
                },
                "description": "The total number of the resource"
              },
              "Content-Range": {
                "schema": {
                  "type": "string",
                  "example": "items 11-15/100"
                },
                "description": "items from-to/count"
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "17",
                      "type": "post",
                      "attributes": {
                        "body": "Odio consequatur odit. Sunt sint rerum.",
                        "created_at": "2022-06-26T08:59:49.060Z",
                        "updated_at": "2022-06-26T08:59:49.060Z",
                        "comments_count": 0,
                        "likes_count": 0,
                        "dislikes_count": 0,
                        "score": 0
                      },
                      "relationships": {
                        "user": {
                          "data": {
                            "id": "29",
                            "type": "user"
                          }
                        }
                      },
                      "meta": {
                        "my_rate": null
                      }
                    },
                    {
                      "id": "16",
                      "type": "post",
                      "attributes": {
                        "body": "Asperiores rerum tempora. Maxime aperiam molestiae.",
                        "created_at": "2022-06-26T08:59:49.052Z",
                        "updated_at": "2022-06-26T08:59:49.052Z",
                        "comments_count": 0,
                        "likes_count": 0,
                        "dislikes_count": 0,
                        "score": 0
                      },
                      "relationships": {
                        "user": {
                          "data": {
                            "id": "28",
                            "type": "user"
                          }
                        }
                      },
                      "meta": {
                        "my_rate": null
                      }
                    }
                  ],
                  "links": {
                    "first": "/api/v1/posts?page%5Bnumber%5D=1",
                    "self": "/api/v1/posts?page%5Bnumber%5D=1",
                    "last": "/api/v1/posts?page%5Bnumber%5D=1"
                  },
                  "meta": {
                    "total": 2,
                    "pages": 1,
                    "current_page": 1,
                    "per_page": 20,
                    "from": 1,
                    "to": 2
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_posts_index"
                }
              }
            }
          },
          "400": {
            "description": "invalid pagination",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "bad_request",
                      "status": "400",
                      "title": "Invalid Parameter",
                      "detail": [
                        "page[number] must be a positive integer; got -1"
                      ],
                      "source": {
                        "parameter": "page[number]"
                      }
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/pagination_error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "create post",
        "tags": [
          "Posts"
        ],
        "description": "Create posts",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "responses": {
          "201": {
            "description": "created successful",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "19",
                    "type": "post",
                    "attributes": {
                      "body": "Qui sed aut. Ut voluptatem dolorem.",
                      "created_at": "2022-06-26T08:59:49.090Z",
                      "updated_at": "2022-06-26T08:59:49.090Z",
                      "comments_count": 0,
                      "likes_count": 0,
                      "dislikes_count": 0,
                      "score": 0
                    },
                    "relationships": {
                      "user": {
                        "data": {
                          "id": "30",
                          "type": "user"
                        }
                      }
                    },
                    "meta": {
                      "my_rate": null
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_posts_show"
                }
              }
            }
          },
          "401": {
            "description": "user is suspended",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "status": "401",
                      "title": "You are banned"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          },
          "422": {
            "description": "validation error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unprocessable_entity",
                      "status": "422",
                      "title": "Record Invalid",
                      "detail": [
                        "Body is too long (maximum is 10000 characters)"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/parameter_posts_create"
              }
            }
          }
        }
      }
    },
    "/posts/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "show post",
        "tags": [
          "Posts"
        ],
        "description": "Show post",
        "responses": {
          "200": {
            "description": "post found",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "22",
                    "type": "post",
                    "attributes": {
                      "body": "Blanditiis voluptatibus iusto. Consequatur atque ut.",
                      "created_at": "2022-06-26T08:59:49.143Z",
                      "updated_at": "2022-06-26T08:59:49.143Z",
                      "comments_count": 0,
                      "likes_count": 0,
                      "dislikes_count": 0,
                      "score": 0
                    },
                    "relationships": {
                      "user": {
                        "data": {
                          "id": "33",
                          "type": "user"
                        }
                      }
                    },
                    "meta": {
                      "my_rate": null
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_posts_show"
                }
              }
            }
          },
          "404": {
            "description": "post not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "not_found",
                      "status": "404",
                      "title": "Not Found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "update post",
        "tags": [
          "Posts"
        ],
        "description": "Show post",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "23",
                    "type": "post",
                    "attributes": {
                      "body": "Cumque autem magnam. Repellendus est ipsa. | updated!",
                      "created_at": "2022-06-26T08:59:49.162Z",
                      "updated_at": "2022-06-26T08:59:49.169Z",
                      "comments_count": 0,
                      "likes_count": 0,
                      "dislikes_count": 0,
                      "score": 0
                    },
                    "relationships": {
                      "user": {
                        "data": {
                          "id": "34",
                          "type": "user"
                        }
                      }
                    },
                    "meta": {
                      "my_rate": null
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_posts_show"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "status": "401",
                      "title": "Unauthorized",
                      "detail": [
                        "You must be logged in"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden user",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "forbidden",
                      "status": "403",
                      "title": "Forbidden",
                      "detail": [
                        "not allowed to update? this Post"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          },
          "404": {
            "description": "post not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "not_found",
                      "status": "404",
                      "title": "Not Found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          },
          "422": {
            "description": "validation error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unprocessable_entity",
                      "status": "422",
                      "title": "Record Invalid",
                      "detail": [
                        "Body is too long (maximum is 10000 characters)"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/parameter_posts_create"
              }
            }
          }
        }
      },
      "put": {
        "summary": "update post",
        "tags": [
          "Posts"
        ],
        "description": "Show post",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "27",
                    "type": "post",
                    "attributes": {
                      "body": "Rerum rerum voluptate. Minima assumenda vel. | updated!",
                      "created_at": "2022-06-26T08:59:49.256Z",
                      "updated_at": "2022-06-26T08:59:49.263Z",
                      "comments_count": 0,
                      "likes_count": 0,
                      "dislikes_count": 0,
                      "score": 0
                    },
                    "relationships": {
                      "user": {
                        "data": {
                          "id": "39",
                          "type": "user"
                        }
                      }
                    },
                    "meta": {
                      "my_rate": null
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_posts_show"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "status": "401",
                      "title": "Unauthorized",
                      "detail": [
                        "You must be logged in"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden user",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "forbidden",
                      "status": "403",
                      "title": "Forbidden",
                      "detail": [
                        "not allowed to update? this Post"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          },
          "404": {
            "description": "post not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "not_found",
                      "status": "404",
                      "title": "Not Found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          },
          "422": {
            "description": "validation error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unprocessable_entity",
                      "status": "422",
                      "title": "Record Invalid",
                      "detail": [
                        "Body is too long (maximum is 10000 characters)"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/parameter_posts_create"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "delete post",
        "tags": [
          "Posts"
        ],
        "description": "Delete post",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "type": "post",
                    "meta": {
                      "message": "Post successfully destroyed"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_posts_destroy"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "status": "401",
                      "title": "Unauthorized",
                      "detail": [
                        "You must be logged in"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden user",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "forbidden",
                      "status": "403",
                      "title": "Forbidden",
                      "detail": [
                        "not allowed to destroy? this Post"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          },
          "404": {
            "description": "post not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "not_found",
                      "status": "404",
                      "title": "Not Found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          }
        }
      }
    },
    "/posts/{id}/comments": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "get post comments",
        "tags": [
          "Posts"
        ],
        "description": "Get post comments",
        "parameters": [
          {
            "name": "page[number]",
            "in": "query",
            "description": "Page number",
            "minimum": 1,
            "default": 1,
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Per page",
            "minimum": 1,
            "maximum": 100,
            "default": 20,
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "comments[take_answers_number]",
            "in": "query",
            "description": "Number of second level comments to take for each root comment",
            "default": 2,
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "comments[with_relationships]",
            "in": "query",
            "description": "Should answers be loaded",
            "enum": [
              "true",
              "false"
            ],
            "default": "false",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "14",
                      "type": "comment",
                      "attributes": {
                        "body": "comment0",
                        "user_id": 48,
                        "commentable_id": 34,
                        "parent_id": null,
                        "created_at": "2022-06-26T08:59:49.420Z",
                        "edited_at": null,
                        "edited": false,
                        "deleted": false
                      },
                      "meta": {
                        "children_count": 5
                      },
                      "relationships": {
                        "children": [
                          {
                            "id": "15",
                            "type": "comment",
                            "attributes": {
                              "body": "comment0-answer-0",
                              "user_id": 48,
                              "commentable_id": 34,
                              "parent_id": 14,
                              "created_at": "2022-06-26T08:59:49.423Z",
                              "edited_at": null,
                              "edited": false,
                              "deleted": false
                            },
                            "meta": {
                              "children_count": 0
                            }
                          },
                          {
                            "id": "16",
                            "type": "comment",
                            "attributes": {
                              "body": "comment0-answer-1",
                              "user_id": 48,
                              "commentable_id": 34,
                              "parent_id": 14,
                              "created_at": "2022-06-26T08:59:49.427Z",
                              "edited_at": null,
                              "edited": false,
                              "deleted": false
                            },
                            "meta": {
                              "children_count": 0
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "20",
                      "type": "comment",
                      "attributes": {
                        "body": "comment1",
                        "user_id": 48,
                        "commentable_id": 34,
                        "parent_id": null,
                        "created_at": "2022-06-26T08:59:49.439Z",
                        "edited_at": null,
                        "edited": false,
                        "deleted": false
                      },
                      "meta": {
                        "children_count": 5
                      },
                      "relationships": {
                        "children": [
                          {
                            "id": "21",
                            "type": "comment",
                            "attributes": {
                              "body": "comment1-answer-0",
                              "user_id": 48,
                              "commentable_id": 34,
                              "parent_id": 20,
                              "created_at": "2022-06-26T08:59:49.442Z",
                              "edited_at": null,
                              "edited": false,
                              "deleted": false
                            },
                            "meta": {
                              "children_count": 0
                            }
                          },
                          {
                            "id": "22",
                            "type": "comment",
                            "attributes": {
                              "body": "comment1-answer-1",
                              "user_id": 48,
                              "commentable_id": 34,
                              "parent_id": 20,
                              "created_at": "2022-06-26T08:59:49.446Z",
                              "edited_at": null,
                              "edited": false,
                              "deleted": false
                            },
                            "meta": {
                              "children_count": 0
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "26",
                      "type": "comment",
                      "attributes": {
                        "body": "comment2",
                        "user_id": 48,
                        "commentable_id": 34,
                        "parent_id": null,
                        "created_at": "2022-06-26T08:59:49.458Z",
                        "edited_at": null,
                        "edited": false,
                        "deleted": false
                      },
                      "meta": {
                        "children_count": 5
                      },
                      "relationships": {
                        "children": [
                          {
                            "id": "27",
                            "type": "comment",
                            "attributes": {
                              "body": "comment2-answer-0",
                              "user_id": 48,
                              "commentable_id": 34,
                              "parent_id": 26,
                              "created_at": "2022-06-26T08:59:49.460Z",
                              "edited_at": null,
                              "edited": false,
                              "deleted": false
                            },
                            "meta": {
                              "children_count": 0
                            }
                          },
                          {
                            "id": "28",
                            "type": "comment",
                            "attributes": {
                              "body": "comment2-answer-1",
                              "user_id": 48,
                              "commentable_id": 34,
                              "parent_id": 26,
                              "created_at": "2022-06-26T08:59:49.463Z",
                              "edited_at": null,
                              "edited": false,
                              "deleted": false
                            },
                            "meta": {
                              "children_count": 0
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "32",
                      "type": "comment",
                      "attributes": {
                        "body": "comment3",
                        "user_id": 48,
                        "commentable_id": 34,
                        "parent_id": null,
                        "created_at": "2022-06-26T08:59:49.478Z",
                        "edited_at": null,
                        "edited": false,
                        "deleted": false
                      },
                      "meta": {
                        "children_count": 5
                      },
                      "relationships": {
                        "children": [
                          {
                            "id": "33",
                            "type": "comment",
                            "attributes": {
                              "body": "comment3-answer-0",
                              "user_id": 48,
                              "commentable_id": 34,
                              "parent_id": 32,
                              "created_at": "2022-06-26T08:59:49.481Z",
                              "edited_at": null,
                              "edited": false,
                              "deleted": false
                            },
                            "meta": {
                              "children_count": 0
                            }
                          },
                          {
                            "id": "34",
                            "type": "comment",
                            "attributes": {
                              "body": "comment3-answer-1",
                              "user_id": 48,
                              "commentable_id": 34,
                              "parent_id": 32,
                              "created_at": "2022-06-26T08:59:49.485Z",
                              "edited_at": null,
                              "edited": false,
                              "deleted": false
                            },
                            "meta": {
                              "children_count": 0
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": "38",
                      "type": "comment",
                      "attributes": {
                        "body": "comment4",
                        "user_id": 48,
                        "commentable_id": 34,
                        "parent_id": null,
                        "created_at": "2022-06-26T08:59:49.497Z",
                        "edited_at": null,
                        "edited": false,
                        "deleted": false
                      },
                      "meta": {
                        "children_count": 5
                      },
                      "relationships": {
                        "children": [
                          {
                            "id": "39",
                            "type": "comment",
                            "attributes": {
                              "body": "comment4-answer-0",
                              "user_id": 48,
                              "commentable_id": 34,
                              "parent_id": 38,
                              "created_at": "2022-06-26T08:59:49.500Z",
                              "edited_at": null,
                              "edited": false,
                              "deleted": false
                            },
                            "meta": {
                              "children_count": 0
                            }
                          },
                          {
                            "id": "40",
                            "type": "comment",
                            "attributes": {
                              "body": "comment4-answer-1",
                              "user_id": 48,
                              "commentable_id": 34,
                              "parent_id": 38,
                              "created_at": "2022-06-26T08:59:49.503Z",
                              "edited_at": null,
                              "edited": false,
                              "deleted": false
                            },
                            "meta": {
                              "children_count": 0
                            }
                          }
                        ]
                      }
                    }
                  ],
                  "links": {
                    "first": "/api/v1/posts/34/comments?comments%5Bwith_relationships%5D=true&page%5Bnumber%5D=1",
                    "self": "/api/v1/posts/34/comments?comments%5Bwith_relationships%5D=true&page%5Bnumber%5D=1",
                    "last": "/api/v1/posts/34/comments?comments%5Bwith_relationships%5D=true&page%5Bnumber%5D=1"
                  },
                  "meta": {
                    "total": 5,
                    "pages": 1,
                    "current_page": 1,
                    "per_page": 20,
                    "from": 1,
                    "to": 5
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_posts_comment"
                }
              }
            }
          },
          "400": {
            "description": "invalid pagination",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "bad_request",
                      "status": "400",
                      "title": "Invalid Parameter",
                      "detail": [
                        "page[number] must be a positive integer; got -1"
                      ],
                      "source": {
                        "parameter": "page[number]"
                      }
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/pagination_error"
                }
              }
            }
          },
          "404": {
            "description": "post not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "not_found",
                      "status": "404",
                      "title": "Not Found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "list users",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "page[number]",
            "in": "query",
            "description": "Page number",
            "minimum": 1,
            "default": 1,
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Per page",
            "minimum": 1,
            "maximum": 100,
            "default": 20,
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort by",
            "enum": [
              "username",
              "-username",
              "email",
              "-email",
              "created_at",
              "-created_at"
            ],
            "example": "username,-created_at",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[username]",
            "in": "query",
            "description": "Filter by username contains",
            "example": "username",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[email]",
            "in": "query",
            "description": "Filter by email contains",
            "example": "a@mail",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[created_at[before]]",
            "in": "query",
            "description": "Filter by created before date",
            "example": "2022-04-15",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[created_at[after]]",
            "in": "query",
            "description": "Filter by created before date",
            "example": "2022-04-15",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "headers": {
              "Link": {
                "schema": {
                  "type": "string",
                  "example": "<http://localhost:3000/api/v1/users?page%5Bnumber%5D=1&page%5Bsize%5D=5>; rel=\"first\""
                },
                "description": "Links to another pages"
              },
              "X-Total-Pages": {
                "schema": {
                  "type": "integer",
                  "example": 10,
                  "minimum": 1,
                  "maximum": 100
                },
                "description": "The total number of pages of the resource"
              },
              "Per-Page": {
                "schema": {
                  "type": "integer",
                  "example": 4
                },
                "description": "Resource entries per page"
              },
              "Current-Page": {
                "schema": {
                  "type": "integer",
                  "example": 1
                },
                "description": "Current page"
              },
              "X-Total-Count": {
                "schema": {
                  "type": "integer",
                  "example": 2
                },
                "description": "The total number of the resource"
              },
              "Content-Range": {
                "schema": {
                  "type": "string",
                  "example": "items 11-15/100"
                },
                "description": "items from-to/count"
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "51",
                      "type": "user",
                      "attributes": {
                        "email": "user_48@example.com",
                        "username": "Dionysus27011",
                        "avatar": {
                          "url": null
                        },
                        "created_at": "2022-06-26T08:59:49.554Z",
                        "updated_at": "2022-06-26T08:59:49.554Z",
                        "comments_count": 0,
                        "posts_count": 0,
                        "role": {
                          "name": "user",
                          "value": 0
                        }
                      }
                    },
                    {
                      "id": "50",
                      "type": "user",
                      "attributes": {
                        "email": "user_47@example.com",
                        "username": "Poseidon18600",
                        "avatar": {
                          "url": null
                        },
                        "created_at": "2022-06-26T08:59:49.549Z",
                        "updated_at": "2022-06-26T08:59:49.549Z",
                        "comments_count": 0,
                        "posts_count": 0,
                        "role": {
                          "name": "user",
                          "value": 0
                        }
                      }
                    }
                  ],
                  "links": {
                    "first": "/api/v1/users?page%5Bnumber%5D=1",
                    "self": "/api/v1/users?page%5Bnumber%5D=1",
                    "last": "/api/v1/users?page%5Bnumber%5D=1"
                  },
                  "meta": {
                    "total": 2,
                    "pages": 1,
                    "current_page": 1,
                    "per_page": 20,
                    "from": 1,
                    "to": 2
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_users_index"
                }
              }
            }
          },
          "400": {
            "description": "invalid pagination",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "bad_request",
                      "status": "400",
                      "title": "Invalid Parameter",
                      "detail": [
                        "page[number] must be a positive integer; got -1"
                      ],
                      "source": {
                        "parameter": "page[number]"
                      }
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/pagination_error"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Retrieves a user",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "user found",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "52",
                    "type": "user",
                    "attributes": {
                      "email": "user_49@example.com",
                      "username": "Hestia35593",
                      "avatar": {
                        "url": null
                      },
                      "created_at": "2022-06-26T08:59:49.581Z",
                      "updated_at": "2022-06-26T08:59:49.581Z",
                      "comments_count": 0,
                      "posts_count": 0,
                      "role": {
                        "name": "user",
                        "value": 0
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_users_show"
                }
              }
            }
          },
          "404": {
            "description": "user not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "not_found",
                      "status": "404",
                      "title": "Not Found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_users_show404"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Updates a user",
        "tags": [
          "Users"
        ],
        "description": "Updates a user",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "user data updated",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "53",
                    "type": "user",
                    "attributes": {
                      "email": "user_50@example.com",
                      "username": "NewGreatUsername1",
                      "avatar": {
                        "url": null
                      },
                      "created_at": "2022-06-26T08:59:49.606Z",
                      "updated_at": "2022-06-26T08:59:49.617Z",
                      "comments_count": 0,
                      "posts_count": 0,
                      "role": {
                        "name": "user",
                        "value": 0
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_users_show"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "status": "401",
                      "title": "Unauthorized",
                      "detail": [
                        "You must be logged in"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/you_must_be_logged_in"
                }
              }
            }
          },
          "403": {
            "description": "Not enough permissions",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "forbidden",
                      "status": "403",
                      "title": "Forbidden",
                      "detail": [
                        "User must be at least a moderator, You cant update your own role, and You cant assign role higher then yours"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          },
          "404": {
            "description": "user not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "not_found",
                      "status": "404",
                      "title": "Not Found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_users_show404"
                }
              }
            }
          },
          "422": {
            "description": "unprocessable entity",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unprocessable_entity",
                      "status": "422",
                      "title": "Record Invalid",
                      "detail": [
                        "Username is invalid"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/record_is_invalid"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/parameter_users_update"
              }
            }
          }
        }
      },
      "put": {
        "summary": "Updates a user",
        "tags": [
          "Users"
        ],
        "description": "Updates a user",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "user data updated",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "58",
                    "type": "user",
                    "attributes": {
                      "email": "user_55@example.com",
                      "username": "NewGreatUsername1",
                      "avatar": {
                        "url": null
                      },
                      "created_at": "2022-06-26T08:59:49.711Z",
                      "updated_at": "2022-06-26T08:59:49.723Z",
                      "comments_count": 0,
                      "posts_count": 0,
                      "role": {
                        "name": "user",
                        "value": 0
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_users_show"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "status": "401",
                      "title": "Unauthorized",
                      "detail": [
                        "You must be logged in"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/you_must_be_logged_in"
                }
              }
            }
          },
          "403": {
            "description": "Not enough permissions",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "forbidden",
                      "status": "403",
                      "title": "Forbidden",
                      "detail": [
                        "User must be at least a moderator, You cant update your own role, and You cant assign role higher then yours"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          },
          "404": {
            "description": "user not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "not_found",
                      "status": "404",
                      "title": "Not Found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_users_show404"
                }
              }
            }
          },
          "422": {
            "description": "unprocessable entity",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unprocessable_entity",
                      "status": "422",
                      "title": "Record Invalid",
                      "detail": [
                        "Username is invalid"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/record_is_invalid"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/parameter_users_update"
              }
            }
          }
        }
      }
    },
    "/users/{id}/posts": {
      "get": {
        "summary": "list user posts",
        "tags": [
          "Users"
        ],
        "description": "Get posts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[number]",
            "in": "query",
            "description": "Page number",
            "minimum": 1,
            "default": 1,
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Per page",
            "minimum": 1,
            "maximum": 100,
            "default": 20,
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort by",
            "enum": [
              "body",
              "-body",
              "created_at",
              "-created_at"
            ],
            "example": "body,-created_at",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[body]",
            "in": "query",
            "description": "Filter by body contains",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[created_at[before]]",
            "in": "query",
            "description": "Filter by created before date",
            "example": "2023-04-15",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[created_at[after]]",
            "in": "query",
            "description": "Filter by created before date",
            "example": "2021-04-15",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "headers": {
              "Link": {
                "schema": {
                  "type": "string",
                  "example": "<http://localhost:3000/api/v1/users?page%5Bnumber%5D=1&page%5Bsize%5D=5>; rel=\"first\""
                },
                "description": "Links to another pages"
              },
              "X-Total-Pages": {
                "schema": {
                  "type": "integer",
                  "example": 10,
                  "minimum": 1,
                  "maximum": 100
                },
                "description": "The total number of pages of the resource"
              },
              "Per-Page": {
                "schema": {
                  "type": "integer",
                  "example": 4
                },
                "description": "Resource entries per page"
              },
              "Current-Page": {
                "schema": {
                  "type": "integer",
                  "example": 1
                },
                "description": "Current page"
              },
              "X-Total-Count": {
                "schema": {
                  "type": "integer",
                  "example": 2
                },
                "description": "The total number of the resource"
              },
              "Content-Range": {
                "schema": {
                  "type": "string",
                  "example": "items 11-15/100"
                },
                "description": "items from-to/count"
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "40",
                      "type": "post",
                      "attributes": {
                        "body": "Perspiciatis et modi. Dolore reiciendis modi.",
                        "created_at": "2022-06-26T08:59:49.829Z",
                        "updated_at": "2022-06-26T08:59:49.839Z",
                        "comments_count": 0,
                        "likes_count": 0,
                        "dislikes_count": 0,
                        "score": 0
                      },
                      "relationships": {
                        "user": {
                          "data": {
                            "id": "63",
                            "type": "user"
                          }
                        }
                      },
                      "meta": {
                        "my_rate": null
                      }
                    },
                    {
                      "id": "39",
                      "type": "post",
                      "attributes": {
                        "body": "Exercitationem odio quo. Ipsa sint necessitatibus.",
                        "created_at": "2022-06-26T08:59:49.822Z",
                        "updated_at": "2022-06-26T08:59:49.837Z",
                        "comments_count": 0,
                        "likes_count": 0,
                        "dislikes_count": 0,
                        "score": 0
                      },
                      "relationships": {
                        "user": {
                          "data": {
                            "id": "63",
                            "type": "user"
                          }
                        }
                      },
                      "meta": {
                        "my_rate": null
                      }
                    },
                    {
                      "id": "38",
                      "type": "post",
                      "attributes": {
                        "body": "Eius vel officia. Odit dolores modi.",
                        "created_at": "2022-06-26T08:59:49.816Z",
                        "updated_at": "2022-06-26T08:59:49.836Z",
                        "comments_count": 0,
                        "likes_count": 0,
                        "dislikes_count": 0,
                        "score": 0
                      },
                      "relationships": {
                        "user": {
                          "data": {
                            "id": "63",
                            "type": "user"
                          }
                        }
                      },
                      "meta": {
                        "my_rate": null
                      }
                    },
                    {
                      "id": "37",
                      "type": "post",
                      "attributes": {
                        "body": "Et perferendis doloremque. Suscipit et pariatur.",
                        "created_at": "2022-06-26T08:59:49.809Z",
                        "updated_at": "2022-06-26T08:59:49.834Z",
                        "comments_count": 0,
                        "likes_count": 0,
                        "dislikes_count": 0,
                        "score": 0
                      },
                      "relationships": {
                        "user": {
                          "data": {
                            "id": "63",
                            "type": "user"
                          }
                        }
                      },
                      "meta": {
                        "my_rate": null
                      }
                    },
                    {
                      "id": "36",
                      "type": "post",
                      "attributes": {
                        "body": "Fuga ut dolorem. Praesentium ut animi.",
                        "created_at": "2022-06-26T08:59:49.803Z",
                        "updated_at": "2022-06-26T08:59:49.832Z",
                        "comments_count": 0,
                        "likes_count": 0,
                        "dislikes_count": 0,
                        "score": 0
                      },
                      "relationships": {
                        "user": {
                          "data": {
                            "id": "63",
                            "type": "user"
                          }
                        }
                      },
                      "meta": {
                        "my_rate": null
                      }
                    }
                  ],
                  "links": {
                    "first": "/api/v1/users/63/posts?page%5Bnumber%5D=1",
                    "self": "/api/v1/users/63/posts?page%5Bnumber%5D=1",
                    "last": "/api/v1/users/63/posts?page%5Bnumber%5D=1"
                  },
                  "meta": {
                    "total": 5,
                    "pages": 1,
                    "current_page": 1,
                    "per_page": 20,
                    "from": 1,
                    "to": 5
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_posts_index"
                }
              }
            }
          },
          "400": {
            "description": "invalid pagination",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "bad_request",
                      "status": "400",
                      "title": "Invalid Parameter",
                      "detail": [
                        "page[number] must be a positive integer; got -1"
                      ],
                      "source": {
                        "parameter": "page[number]"
                      }
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/pagination_error"
                }
              }
            }
          }
        }
      }
    },
    "/votes/like": {
      "post": {
        "summary": "like votable",
        "tags": [
          "Votes"
        ],
        "description": "Like votable",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "type": "vote",
                    "meta": {
                      "message": "Post successfully liked"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_votes_success"
                }
              }
            }
          },
          "401": {
            "description": "user is suspended",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "status": "401",
                      "title": "You are banned"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          },
          "404": {
            "description": "votable not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "not_found",
                      "status": "404",
                      "title": "Not Found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "invalid parameter error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unprocessable_entity",
                      "status": "422",
                      "title": "Invalid parameter: votable_type must be one of the list: [\"Post\"], passed UnsupportedVotable"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/parameter_votes_vote"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "unlike votable",
        "tags": [
          "Votes"
        ],
        "description": "Unlike votable",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "type": "vote",
                    "meta": {
                      "message": "Post successfully unliked"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_votes_success"
                }
              }
            }
          },
          "401": {
            "description": "user is suspended",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "status": "401",
                      "title": "You are banned"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          },
          "404": {
            "description": "votable not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "not_found",
                      "status": "404",
                      "title": "Not Found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "invalid parameter error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unprocessable_entity",
                      "status": "422",
                      "title": "Invalid parameter: votable_type must be one of the list: [\"Post\"], passed UnsupportedVotable"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/parameter_votes_vote"
              }
            }
          }
        }
      }
    },
    "/votes/dislike": {
      "post": {
        "summary": "dislike votable",
        "tags": [
          "Votes"
        ],
        "description": "Dislike votable",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "type": "vote",
                    "meta": {
                      "message": "Post successfully disliked"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_votes_success"
                }
              }
            }
          },
          "401": {
            "description": "user is suspended",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "status": "401",
                      "title": "You are banned"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          },
          "404": {
            "description": "votable not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "not_found",
                      "status": "404",
                      "title": "Not Found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "invalid parameter error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unprocessable_entity",
                      "status": "422",
                      "title": "Invalid parameter: votable_type must be one of the list: [\"Post\"], passed UnsupportedVotable"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/parameter_votes_vote"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "undislike votable",
        "tags": [
          "Votes"
        ],
        "description": "Undislike votable",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "type": "vote",
                    "meta": {
                      "message": "Post successfully undisliked"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_votes_success"
                }
              }
            }
          },
          "401": {
            "description": "user is suspended",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "status": "401",
                      "title": "You are banned"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          },
          "404": {
            "description": "votable not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "not_found",
                      "status": "404",
                      "title": "Not Found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "invalid parameter error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unprocessable_entity",
                      "status": "422",
                      "title": "Invalid parameter: votable_type must be one of the list: [\"Post\"], passed UnsupportedVotable"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/parameter_votes_vote"
              }
            }
          }
        }
      }
    }
  }
}
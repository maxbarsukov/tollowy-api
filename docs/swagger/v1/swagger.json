{
  "openapi": "3.0.0",
  "info": {
    "title": "API V1",
    "version": "v1"
  },
  "servers": [
    {
      "url": "/api/{api_version}",
      "variables": {
        "api_version": {
          "default": "v1",
          "enum": [
            "v1"
          ]
        }
      }
    }
  ],
  "components": {
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "Bearer Token",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "role_value": {
        "title": "Role Value",
        "enum": [
          -30,
          -20,
          -10,
          0,
          10,
          20,
          30,
          40,
          50
        ],
        "type": "integer",
        "description": "An enumeration"
      },
      "role_name": {
        "title": "Role Name",
        "enum": [
          "unconfirmed",
          "banned",
          "warned",
          "user",
          "premium",
          "primary",
          "owner",
          "moderator",
          "admin"
        ],
        "type": "string",
        "description": "An enumeration"
      },
      "role": {
        "title": "Role",
        "description": "Role",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "$ref": "#/components/schemas/role_value"
          }
        },
        "required": [
          "name",
          "value"
        ]
      },
      "users": {
        "title": "Users",
        "description": "Users",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/user"
        }
      },
      "user": {
        "title": "User",
        "description": "User object",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/user_attributes"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "user_attributes": {
        "title": "User Attributes",
        "description": "Attributes for User",
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "role": {
            "$ref": "#/components/schemas/role"
          }
        },
        "required": [
          "email",
          "username",
          "created_at",
          "role"
        ]
      },
      "posts": {
        "title": "Posts",
        "description": "Posts",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/post"
        }
      },
      "post": {
        "title": "Post",
        "description": "Post object",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/post_attributes"
          },
          "relationships": {
            "$ref": "#/components/schemas/post_relationships"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "post_attributes": {
        "title": "Post Attributes",
        "description": "Attributes for Post",
        "type": "object",
        "properties": {
          "body": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          }
        },
        "required": [
          "body",
          "created_at",
          "updated_at"
        ]
      },
      "post_relationships": {
        "title": "Post Relationships",
        "description": "Relationships for Post",
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "data": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "type"
                ]
              }
            },
            "required": [
              "data"
            ]
          }
        },
        "required": [
          "user"
        ]
      },
      "auth": {
        "title": "Auth Data",
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "auth"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "access_token": {
                    "type": "string"
                  },
                  "refresh_token": {
                    "type": "string"
                  },
                  "me": {
                    "$ref": "#/components/schemas/user"
                  }
                },
                "required": [
                  "access_token",
                  "refresh_token",
                  "me"
                ]
              }
            },
            "required": [
              "type",
              "attributes"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "error": {
        "title": "Error",
        "description": "JSON:API Error response",
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string"
                },
                "code": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "detail": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "status",
                "code",
                "title"
              ]
            }
          }
        },
        "required": [
          "errors"
        ]
      },
      "unauthorized_error": {
        "title": "Unauthorized Error",
        "description": "User must sign in before continuing",
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "401"
                  ]
                },
                "code": {
                  "type": "string",
                  "enum": [
                    "unauthorized"
                  ]
                },
                "title": {
                  "type": "string",
                  "enum": [
                    "You need to sign in or sign up before continuing"
                  ]
                }
              },
              "required": [
                "status",
                "code",
                "title"
              ]
            }
          }
        },
        "required": [
          "errors"
        ]
      },
      "you_must_be_logged_in": {
        "title": "Unauthorized Error",
        "description": "User must log in  before continuing",
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "401"
                  ]
                },
                "code": {
                  "type": "string",
                  "enum": [
                    "unauthorized"
                  ]
                },
                "title": {
                  "type": "string"
                },
                "detail": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "You must be logged in"
                    ]
                  }
                }
              },
              "required": [
                "status",
                "code",
                "title"
              ]
            }
          }
        },
        "required": [
          "errors"
        ]
      },
      "invalid_credentials_error": {
        "title": "Invalid Credentials Error",
        "description": "User's token is invalid",
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "401"
                  ]
                },
                "code": {
                  "type": "string",
                  "enum": [
                    "unauthorized"
                  ]
                },
                "title": {
                  "type": "string",
                  "enum": [
                    "Invalid credentials"
                  ]
                }
              },
              "required": [
                "status",
                "code",
                "title"
              ]
            }
          }
        },
        "required": [
          "errors"
        ]
      },
      "invalid_value": {
        "title": "Invalid Value Error",
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "400"
                  ]
                },
                "code": {
                  "type": "string",
                  "enum": [
                    "bad_request"
                  ]
                },
                "title": {
                  "type": "string",
                  "enum": [
                    "Invalid value"
                  ]
                }
              },
              "required": [
                "status",
                "code",
                "title"
              ]
            }
          }
        },
        "required": [
          "errors"
        ]
      },
      "param_is_missing": {
        "title": "Param is missing or the value is empty",
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "422"
                  ]
                },
                "code": {
                  "type": "string",
                  "enum": [
                    "unprocessable_entity"
                  ]
                },
                "title": {
                  "type": "string"
                }
              },
              "required": [
                "status",
                "code",
                "title"
              ]
            }
          }
        },
        "required": [
          "errors"
        ]
      },
      "record_is_invalid": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "422"
                  ]
                },
                "code": {
                  "type": "string",
                  "enum": [
                    "unprocessable_entity"
                  ]
                },
                "title": {
                  "type": "string",
                  "enum": [
                    "Record Invalid"
                  ]
                },
                "detail": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "status",
                "code",
                "title"
              ]
            }
          }
        },
        "required": [
          "errors"
        ]
      },
      "user_not_found_error": {
        "title": "User Not Found",
        "description": "User ID is invalid",
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "404"
                  ]
                },
                "code": {
                  "type": "string",
                  "enum": [
                    "not_found"
                  ]
                },
                "title": {
                  "type": "string",
                  "enum": [
                    "Not Found"
                  ]
                }
              },
              "required": [
                "status",
                "code",
                "title"
              ]
            }
          }
        }
      },
      "response_root_get": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "enum": [
              "If you see this, you're in!"
            ]
          }
        },
        "required": [
          "message"
        ]
      },
      "response_root_get_401": {
        "$ref": "#/components/schemas/unauthorized_error"
      },
      "response_auth_sign_in": {
        "$ref": "#/components/schemas/auth"
      },
      "response_auth_sign_up": {
        "$ref": "#/components/schemas/auth"
      },
      "response_auth_sign_out": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "auth"
                ]
              },
              "meta": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string"
                  }
                },
                "required": [
                  "message"
                ]
              }
            },
            "required": [
              "type",
              "meta"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "response_auth_sign_out_401": {
        "$ref": "#/components/schemas/invalid_credentials_error"
      },
      "response_auth_confirm": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "auth"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "me": {
                    "$ref": "#/components/schemas/user"
                  }
                },
                "required": [
                  "me"
                ]
              }
            },
            "required": [
              "type",
              "attributes"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "response_request_password_reset": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "auth"
                ]
              },
              "meta": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string"
                  },
                  "detail": {
                    "type": "string"
                  }
                },
                "required": [
                  "message",
                  "detail"
                ]
              }
            },
            "required": [
              "type",
              "meta"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "response_users_get": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/users"
          }
        },
        "required": [
          "data"
        ]
      },
      "response_users_id_get_404": {
        "$ref": "#/components/schemas/user_not_found_error"
      },
      "response_users_id_get": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/user"
          }
        },
        "required": [
          "data"
        ]
      },
      "response_posts_get": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/posts"
          }
        },
        "required": [
          "data"
        ]
      },
      "response_post": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/post"
          }
        },
        "required": [
          "data"
        ]
      },
      "parameter_auth_sign_in": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "auth"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            },
            "required": [
              "type",
              "attributes"
            ]
          }
        }
      },
      "parameter_auth_sign_up": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "auth"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "username",
                  "password"
                ]
              }
            },
            "required": [
              "type",
              "attributes"
            ]
          }
        }
      },
      "parameter_auth_sign_out": {
        "type": "string",
        "nullable": true,
        "enum": [
          "true",
          "false"
        ]
      },
      "parameter_request_password_reset": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "auth"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  }
                },
                "required": [
                  "email"
                ]
              }
            },
            "required": [
              "type",
              "attributes"
            ]
          }
        }
      },
      "parameter_reset_password": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "auth"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "password": {
                    "type": "string"
                  },
                  "reset_token": {
                    "type": "string"
                  }
                },
                "required": [
                  "password",
                  "reset_token"
                ]
              }
            },
            "required": [
              "type",
              "attributes"
            ]
          }
        }
      },
      "parameter_update_user": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "user"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "current_password": {
                    "description": "Current password",
                    "type": "string"
                  },
                  "password": {
                    "description": "New password",
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "username": {
                    "type": "string"
                  },
                  "role": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/role_value"
                      },
                      {
                        "$ref": "#/components/schemas/role_name"
                      }
                    ]
                  }
                }
              }
            },
            "required": [
              "type",
              "attributes"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "parameter_posts_create": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "post"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "body": {
                    "description": "Post body",
                    "type": "string"
                  }
                }
              }
            },
            "required": [
              "type",
              "attributes"
            ]
          }
        },
        "required": [
          "data"
        ]
      }
    }
  },
  "paths": {
    "/auth/sign_in": {
      "post": {
        "summary": "Sign In",
        "tags": [
          "Auth"
        ],
        "description": "Sign In",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "type": "auth",
                    "attributes": {
                      "access_token": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOjEsImV4cCI6MTY1MDIyMDI3MCwianRpIjoiYWNjY2IzOTU3NzI5Mzg2ZGFlYjA1MmEwZTEwMjkzYmEiLCJ0eXBlIjoiYWNjZXNzIn0.xpSH9u-n-QBkj83HOwq0NLM5Rc2cW5R3TIR3wAsv52Q",
                      "refresh_token": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOjEsImV4cCI6MTY1MjgwODY3MCwianRpIjoiYWNjY2IzOTU3NzI5Mzg2ZGFlYjA1MmEwZTEwMjkzYmEiLCJ0eXBlIjoicmVmcmVzaCJ9.VypX3gkjwz4mqAKbFdqCgp5tPXJb9YFDppJcMJ65Umw",
                      "me": {
                        "id": "1",
                        "type": "user",
                        "attributes": {
                          "email": "0@mail.com",
                          "username": "Athena69154",
                          "created_at": "2022-04-17T17:31:10.021Z",
                          "role": {
                            "name": "user",
                            "value": 0
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_auth_sign_in"
                }
              }
            }
          },
          "401": {
            "description": "invalid credentials",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "status": "401",
                      "title": "Invalid credentials"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/invalid_credentials_error"
                }
              }
            }
          },
          "422": {
            "description": "param is missing",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unprocessable_entity",
                      "status": "422",
                      "title": "param is missing or the value is empty: attributes"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/param_is_missing"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/parameter_auth_sign_in"
              }
            }
          }
        }
      }
    },
    "/auth/sign_up": {
      "post": {
        "summary": "Sign Up",
        "tags": [
          "Auth"
        ],
        "description": "Sign Up",
        "parameters": [],
        "responses": {
          "201": {
            "description": "created",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "type": "auth",
                    "attributes": {
                      "access_token": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOjMsImV4cCI6MTY1MDIyMDI3MCwianRpIjoiNTI3Y2NhY2M0NzFmZmE5N2RjNjk1YjRhOGQ0NjVhNzUiLCJ0eXBlIjoiYWNjZXNzIn0.YLa-cv5SC62Dxb-fU-uibmxmkgRMlRv-_-FfyuIa8YE",
                      "refresh_token": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOjMsImV4cCI6MTY1MjgwODY3MCwianRpIjoiNTI3Y2NhY2M0NzFmZmE5N2RjNjk1YjRhOGQ0NjVhNzUiLCJ0eXBlIjoicmVmcmVzaCJ9.rlCbF-5Jc8-OpkFmUCj8QioS4CmHCCvpAZ68c0Vxk7o",
                      "me": {
                        "id": "3",
                        "type": "user",
                        "attributes": {
                          "email": "0@mail.com",
                          "username": "User000",
                          "created_at": "2022-04-17T17:31:10.100Z",
                          "role": {
                            "name": "unconfirmed",
                            "value": -30
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_auth_sign_up"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/parameter_auth_sign_up"
              }
            }
          }
        }
      }
    },
    "/auth/sign_out": {
      "delete": {
        "summary": "Sign Out",
        "tags": [
          "Auth"
        ],
        "description": "Sign Out",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "everywhere",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/parameter_auth_sign_out"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "type": "auth",
                    "meta": {
                      "message": "User signed out successfully"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_auth_sign_out"
                }
              }
            }
          },
          "401": {
            "description": "invalid credentials",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "status": "401",
                      "title": "Invalid credentials"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/invalid_credentials_error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/confirm": {
      "get": {
        "summary": "Confirm User",
        "tags": [
          "Auth"
        ],
        "description": "Confirm User",
        "parameters": [
          {
            "name": "confirmation_token",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "type": "auth",
                    "attributes": {
                      "me": {
                        "id": "6",
                        "type": "user",
                        "attributes": {
                          "email": "user_3@example.com",
                          "username": "Artemis84380",
                          "created_at": "2022-04-17T17:31:10.148Z",
                          "role": {
                            "name": "user",
                            "value": 0
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_auth_confirm"
                }
              }
            }
          },
          "400": {
            "description": "Invalid value",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "bad_request",
                      "status": "400",
                      "title": "Invalid value"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/invalid_value"
                }
              }
            }
          },
          "422": {
            "description": "Missing params",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unprocessable_entity",
                      "status": "422",
                      "title": "param is missing or the value is empty: confirmation_token"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/param_is_missing"
                }
              }
            }
          }
        }
      }
    },
    "/auth/request_password_reset": {
      "post": {
        "summary": "Request Password Reset",
        "tags": [
          "Auth"
        ],
        "description": "Request Password Reset",
        "parameters": [],
        "responses": {
          "200": {
            "description": "instructions sent",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "type": "auth",
                    "meta": {
                      "message": "Instructions sent",
                      "detail": "Password recovery instructions were sent"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_request_password_reset"
                }
              }
            }
          },
          "404": {
            "description": "User with this email not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "not_found",
                      "status": "404",
                      "title": "Record not found",
                      "detail": [
                        "User with email a123456@mail.com not found"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/parameter_request_password_reset"
              }
            }
          }
        }
      }
    },
    "/auth/reset_password": {
      "post": {
        "summary": "Reset Password",
        "tags": [
          "Auth"
        ],
        "description": "Reset Password",
        "parameters": [],
        "responses": {
          "200": {
            "description": "password reset successfully",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "type": "auth",
                    "attributes": {
                      "access_token": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOjgsImV4cCI6MTY1MDIyMDI3MCwianRpIjoiYWFkNWIxN2Y1YWFhOTBiZjZlMDU0OGQ4N2YyNTIwOTMiLCJ0eXBlIjoiYWNjZXNzIn0.eBak7rwbx04YUXIIkyHa6L9LgPBV5dKvSNw3fZD2eVg",
                      "refresh_token": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOjgsImV4cCI6MTY1MjgwODY3MCwianRpIjoiYWFkNWIxN2Y1YWFhOTBiZjZlMDU0OGQ4N2YyNTIwOTMiLCJ0eXBlIjoicmVmcmVzaCJ9.6ngPWgzWTXzjQVGQbpb4VmLIp-HW0bVEXTEGIGyydoU",
                      "me": {
                        "id": "8",
                        "type": "user",
                        "attributes": {
                          "email": "user_5@example.com",
                          "username": "Hestia34408",
                          "created_at": "2022-04-17T17:31:10.199Z",
                          "role": {
                            "name": "admin",
                            "value": 50
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/auth"
                }
              }
            }
          },
          "401": {
            "description": "Invalid token",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "status": "401",
                      "title": "Invalid credentials"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/parameter_reset_password"
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "summary": "check auth",
        "tags": [
          "Auth Check"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "example": {
                  "message": "If you see this, you're in!"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "status": "401",
                      "title": "You need to sign in or sign up before continuing"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/posts": {
      "get": {
        "summary": "list posts",
        "tags": [
          "Posts"
        ],
        "description": "Get posts",
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "1",
                      "type": "post",
                      "attributes": {
                        "body": "Provident sit nihil. Perspiciatis quis eligendi.",
                        "created_at": "2022-04-17T17:31:10.337Z",
                        "updated_at": "2022-04-17T17:31:10.337Z"
                      },
                      "relationships": {
                        "user": {
                          "data": {
                            "id": "10",
                            "type": "user"
                          }
                        }
                      }
                    },
                    {
                      "id": "2",
                      "type": "post",
                      "attributes": {
                        "body": "Ducimus deleniti debitis. Nam ab non.",
                        "created_at": "2022-04-17T17:31:10.344Z",
                        "updated_at": "2022-04-17T17:31:10.344Z"
                      },
                      "relationships": {
                        "user": {
                          "data": {
                            "id": "11",
                            "type": "user"
                          }
                        }
                      }
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_posts_get"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "create post",
        "tags": [
          "Posts"
        ],
        "description": "Create posts",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "responses": {
          "201": {
            "description": "created successful",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "4",
                    "type": "post",
                    "attributes": {
                      "body": "Dolores impedit fuga. Consectetur vel voluptatem.",
                      "created_at": "2022-04-17T17:31:10.366Z",
                      "updated_at": "2022-04-17T17:31:10.366Z"
                    },
                    "relationships": {
                      "user": {
                        "data": {
                          "id": "12",
                          "type": "user"
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_post"
                }
              }
            }
          },
          "401": {
            "description": "user is suspended",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "status": "401",
                      "title": "You are banned"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "user is suspended",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unprocessable_entity",
                      "status": "422",
                      "title": "Record Invalid",
                      "detail": [
                        "Body is too long (maximum is 10000 characters)"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/parameter_posts_create"
              }
            }
          }
        }
      }
    },
    "/posts/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "show post",
        "tags": [
          "Posts"
        ],
        "description": "Show post",
        "responses": {
          "200": {
            "description": "post found",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "7",
                    "type": "post",
                    "attributes": {
                      "body": "Mollitia accusamus dignissimos. Laboriosam consequatur occaecati.",
                      "created_at": "2022-04-17T17:31:10.412Z",
                      "updated_at": "2022-04-17T17:31:10.412Z"
                    },
                    "relationships": {
                      "user": {
                        "data": {
                          "id": "15",
                          "type": "user"
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_post"
                }
              }
            }
          },
          "404": {
            "description": "post not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "not_found",
                      "status": "404",
                      "title": "Not Found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "update post",
        "tags": [
          "Posts"
        ],
        "description": "Show post",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "8",
                    "type": "post",
                    "attributes": {
                      "body": "Accusantium consequatur nihil. Cum aliquam molestiae. | updated!",
                      "created_at": "2022-04-17T17:31:10.429Z",
                      "updated_at": "2022-04-17T17:31:10.436Z"
                    },
                    "relationships": {
                      "user": {
                        "data": {
                          "id": "16",
                          "type": "user"
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_post"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "status": "401",
                      "title": "Unauthorized",
                      "detail": [
                        "You must be logged in"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden user",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "forbidden",
                      "status": "403",
                      "title": "Unauthorized",
                      "detail": [
                        "not allowed to update? this Post"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "post not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "not_found",
                      "status": "404",
                      "title": "Not Found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "validation error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unprocessable_entity",
                      "status": "422",
                      "title": "Record Invalid",
                      "detail": [
                        "Body is too long (maximum is 10000 characters)"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/parameter_posts_create"
              }
            }
          }
        }
      },
      "put": {
        "summary": "update post",
        "tags": [
          "Posts"
        ],
        "description": "Show post",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "12",
                    "type": "post",
                    "attributes": {
                      "body": "Est sunt in. Molestiae quisquam sint. | updated!",
                      "created_at": "2022-04-17T17:31:10.509Z",
                      "updated_at": "2022-04-17T17:31:10.516Z"
                    },
                    "relationships": {
                      "user": {
                        "data": {
                          "id": "21",
                          "type": "user"
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_post"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "status": "401",
                      "title": "Unauthorized",
                      "detail": [
                        "You must be logged in"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden user",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "forbidden",
                      "status": "403",
                      "title": "Unauthorized",
                      "detail": [
                        "not allowed to update? this Post"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "post not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "not_found",
                      "status": "404",
                      "title": "Not Found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "validation error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unprocessable_entity",
                      "status": "422",
                      "title": "Record Invalid",
                      "detail": [
                        "Body is too long (maximum is 10000 characters)"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/parameter_posts_create"
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "list users",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "26",
                      "type": "user",
                      "attributes": {
                        "email": "user_23@example.com",
                        "username": "Hephaestus17856",
                        "created_at": "2022-04-17T17:31:10.588Z",
                        "role": {
                          "name": "user",
                          "value": 0
                        }
                      }
                    },
                    {
                      "id": "27",
                      "type": "user",
                      "attributes": {
                        "email": "user_24@example.com",
                        "username": "Hades63203",
                        "created_at": "2022-04-17T17:31:10.592Z",
                        "role": {
                          "name": "user",
                          "value": 0
                        }
                      }
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_users_get"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Retrieves a user",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "user found",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "28",
                    "type": "user",
                    "attributes": {
                      "email": "user_25@example.com",
                      "username": "Hera17148",
                      "created_at": "2022-04-17T17:31:10.607Z",
                      "role": {
                        "name": "user",
                        "value": 0
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_users_id_get"
                }
              }
            }
          },
          "404": {
            "description": "user not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "not_found",
                      "status": "404",
                      "title": "Not Found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_users_id_get_404"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Updates a user",
        "tags": [
          "Users"
        ],
        "description": "Updates a user",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "user data updated",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "29",
                    "type": "user",
                    "attributes": {
                      "email": "user_26@example.com",
                      "username": "NewGreatUsername1",
                      "created_at": "2022-04-17T17:31:10.624Z",
                      "role": {
                        "name": "user",
                        "value": 0
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_users_id_get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "status": "401",
                      "title": "Unauthorized",
                      "detail": [
                        "You must be logged in"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/you_must_be_logged_in"
                }
              }
            }
          },
          "403": {
            "description": "Not enough permissions",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "forbidden",
                      "status": "403",
                      "title": "Unauthorized",
                      "detail": [
                        "User must be at least a moderator, You cant update your own role, and You cant assign role higher then yours"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "user not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "not_found",
                      "status": "404",
                      "title": "Not Found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_users_id_get_404"
                }
              }
            }
          },
          "422": {
            "description": "unprocessable entity",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unprocessable_entity",
                      "status": "422",
                      "title": "Record Invalid",
                      "detail": [
                        "Username is invalid"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/record_is_invalid"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/parameter_update_user"
              }
            }
          }
        }
      },
      "put": {
        "summary": "Updates a user",
        "tags": [
          "Users"
        ],
        "description": "Updates a user",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "user data updated",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "34",
                    "type": "user",
                    "attributes": {
                      "email": "user_31@example.com",
                      "username": "NewGreatUsername1",
                      "created_at": "2022-04-17T17:31:10.696Z",
                      "role": {
                        "name": "user",
                        "value": 0
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_users_id_get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "status": "401",
                      "title": "Unauthorized",
                      "detail": [
                        "You must be logged in"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/you_must_be_logged_in"
                }
              }
            }
          },
          "403": {
            "description": "Not enough permissions",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "forbidden",
                      "status": "403",
                      "title": "Unauthorized",
                      "detail": [
                        "User must be at least a moderator, You cant update your own role, and You cant assign role higher then yours"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "user not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "not_found",
                      "status": "404",
                      "title": "Not Found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_users_id_get_404"
                }
              }
            }
          },
          "422": {
            "description": "unprocessable entity",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unprocessable_entity",
                      "status": "422",
                      "title": "Record Invalid",
                      "detail": [
                        "Username is invalid"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/record_is_invalid"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/parameter_update_user"
              }
            }
          }
        }
      }
    }
  }
}
{
  "openapi": "3.0.0",
  "info": {
    "title": "API V1",
    "version": "v1"
  },
  "servers": [
    {
      "url": "/api/{api_version}",
      "variables": {
        "api_version": {
          "default": "v1",
          "enum": [
            "v1"
          ]
        }
      }
    }
  ],
  "components": {
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "Bearer Token",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "auth": {
        "title": "Auth Data",
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "auth"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "access_token": {
                    "type": "string"
                  },
                  "refresh_token": {
                    "type": "string"
                  },
                  "me": {
                    "$ref": "#/components/schemas/user"
                  }
                },
                "required": [
                  "access_token",
                  "refresh_token",
                  "me"
                ]
              }
            },
            "required": [
              "type",
              "attributes"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "comment": {
        "title": "Comment",
        "description": "Comment object",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/comment_attributes"
          },
          "meta": {
            "type": "object",
            "properties": {
              "my_rate": {
                "type": "integer",
                "nullable": true
              }
            }
          }
        },
        "required": [
          "id",
          "type",
          "attributes"
        ]
      },
      "comment_attributes": {
        "title": "Comment Attributes",
        "description": "Attributes for Comment",
        "type": "object",
        "properties": {
          "body": {
            "type": "string"
          },
          "user_id": {
            "type": "integer"
          },
          "commentable_id": {
            "type": "integer"
          },
          "commentable_type": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "edited_at": {
            "type": "string",
            "nullable": true
          },
          "edited": {
            "type": "boolean"
          },
          "likes_count": {
            "type": "integer"
          },
          "dislikes_count": {
            "type": "integer"
          },
          "score": {
            "type": "integer"
          }
        },
        "required": [
          "body",
          "user_id",
          "commentable_id",
          "commentable_type",
          "created_at",
          "edited",
          "likes_count",
          "dislikes_count",
          "score"
        ]
      },
      "comments": {
        "title": "Comments",
        "description": "Comments",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/comment"
        }
      },
      "error": {
        "title": "Error",
        "description": "JSON:API Error response",
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string"
                },
                "code": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "detail": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "status",
                "code",
                "title"
              ]
            }
          }
        },
        "required": [
          "errors"
        ]
      },
      "invalid_credentials_error": {
        "title": "Invalid Credentials Error",
        "description": "User's token is invalid",
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "401"
                  ]
                },
                "code": {
                  "type": "string",
                  "enum": [
                    "unauthorized"
                  ]
                },
                "title": {
                  "type": "string",
                  "enum": [
                    "Invalid credentials"
                  ]
                }
              },
              "required": [
                "status",
                "code",
                "title"
              ]
            }
          }
        },
        "required": [
          "errors"
        ]
      },
      "invalid_value": {
        "title": "Invalid Value Error",
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "400"
                  ]
                },
                "code": {
                  "type": "string",
                  "enum": [
                    "bad_request"
                  ]
                },
                "title": {
                  "type": "string",
                  "enum": [
                    "Invalid value"
                  ]
                }
              },
              "required": [
                "status",
                "code",
                "title"
              ]
            }
          }
        },
        "required": [
          "errors"
        ]
      },
      "pagination_error": {
        "title": "Pagination Error",
        "description": "JSON:API Pagination Error response",
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string"
                },
                "code": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "detail": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "source": {
                  "parameter": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "status",
                "code",
                "title"
              ]
            }
          }
        },
        "required": [
          "errors"
        ]
      },
      "param_is_missing": {
        "title": "Param is missing or the value is empty",
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "422"
                  ]
                },
                "code": {
                  "type": "string",
                  "enum": [
                    "unprocessable_entity"
                  ]
                },
                "title": {
                  "type": "string"
                }
              },
              "required": [
                "status",
                "code",
                "title"
              ]
            }
          }
        },
        "required": [
          "errors"
        ]
      },
      "record_is_invalid": {
        "title": "Record Is Invalid",
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "422"
                  ]
                },
                "code": {
                  "type": "string",
                  "enum": [
                    "unprocessable_entity"
                  ]
                },
                "title": {
                  "type": "string",
                  "enum": [
                    "Record Invalid"
                  ]
                },
                "detail": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "status",
                "code",
                "title"
              ]
            }
          }
        },
        "required": [
          "errors"
        ]
      },
      "unauthorized_error": {
        "title": "Unauthorized Error",
        "description": "User must sign in before continuing",
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "401"
                  ]
                },
                "code": {
                  "type": "string",
                  "enum": [
                    "unauthorized"
                  ]
                },
                "title": {
                  "type": "string",
                  "enum": [
                    "You need to sign in or sign up before continuing"
                  ]
                }
              },
              "required": [
                "status",
                "code",
                "title"
              ]
            }
          }
        },
        "required": [
          "errors"
        ]
      },
      "user_not_found_error": {
        "title": "User Not Found",
        "description": "User ID is invalid",
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "404"
                  ]
                },
                "code": {
                  "type": "string",
                  "enum": [
                    "not_found"
                  ]
                },
                "title": {
                  "type": "string",
                  "enum": [
                    "Not Found"
                  ]
                }
              },
              "required": [
                "status",
                "code",
                "title"
              ]
            }
          }
        }
      },
      "you_must_be_logged_in": {
        "title": "Unauthorized Error",
        "description": "User must log in  before continuing",
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "401"
                  ]
                },
                "code": {
                  "type": "string",
                  "enum": [
                    "unauthorized"
                  ]
                },
                "title": {
                  "type": "string"
                },
                "detail": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "You must be logged in"
                    ]
                  }
                }
              },
              "required": [
                "status",
                "code",
                "title"
              ]
            }
          }
        },
        "required": [
          "errors"
        ]
      },
      "pagination_links": {
        "title": "Pagination Links",
        "description": "Pagination Links",
        "type": "object",
        "properties": {
          "first": {
            "type": "string"
          },
          "self": {
            "type": "string"
          },
          "last": {
            "type": "string"
          },
          "next": {
            "type": "string"
          },
          "prev": {
            "type": "string"
          }
        },
        "required": [
          "first",
          "self",
          "last"
        ]
      },
      "pagination_meta": {
        "title": "Pagination Meta",
        "description": "Pagination Meta",
        "type": "object",
        "properties": {
          "total": {
            "description": "Total entries",
            "type": "integer"
          },
          "pages": {
            "description": "Total pages count",
            "type": "integer"
          },
          "current_page": {
            "description": "Current page",
            "type": "integer"
          },
          "per_page": {
            "description": "Per Page",
            "minimum": 1,
            "maximum": 100,
            "type": "integer"
          },
          "from": {
            "description": "Offset",
            "type": "integer"
          },
          "to": {
            "description": "Offset + Page length",
            "type": "integer"
          }
        },
        "required": [
          "total",
          "pages",
          "current_page",
          "per_page",
          "from",
          "to"
        ]
      },
      "post": {
        "title": "Post",
        "description": "Post object",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/post_attributes"
          },
          "relationships": {
            "$ref": "#/components/schemas/post_relationships"
          },
          "meta": {
            "type": "object",
            "properties": {
              "my_rate": {
                "type": "integer",
                "nullable": true
              }
            }
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "post_attributes": {
        "title": "Post Attributes",
        "description": "Attributes for Post",
        "type": "object",
        "properties": {
          "body": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "comments_count": {
            "type": "integer"
          },
          "likes_count": {
            "type": "integer"
          },
          "dislikes_count": {
            "type": "integer"
          },
          "score": {
            "type": "integer"
          },
          "tag_list": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "body",
          "created_at",
          "updated_at",
          "comments_count",
          "likes_count",
          "dislikes_count",
          "score",
          "tag_list"
        ]
      },
      "post_relationships": {
        "title": "Post Relationships",
        "description": "Relationships for Post",
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "data": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "type"
                ]
              }
            },
            "required": [
              "data"
            ]
          }
        },
        "required": [
          "user"
        ]
      },
      "posts": {
        "title": "Posts",
        "description": "Posts",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/post"
        }
      },
      "role": {
        "title": "Role",
        "description": "Role",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "$ref": "#/components/schemas/role_value"
          }
        },
        "required": [
          "name",
          "value"
        ]
      },
      "role_name": {
        "title": "Role Name",
        "enum": [
          "unconfirmed",
          "banned",
          "warned",
          "user",
          "premium",
          "primary",
          "owner",
          "moderator",
          "admin"
        ],
        "type": "string",
        "description": "An enumeration"
      },
      "role_value": {
        "title": "Role Value",
        "enum": [
          -30,
          -20,
          -10,
          0,
          10,
          20,
          30,
          40,
          50
        ],
        "type": "integer",
        "description": "An enumeration"
      },
      "tag": {
        "title": "Tag",
        "description": "Tag object",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/tag_attributes"
          },
          "meta": {
            "type": "object",
            "properties": {
              "am_i_follow": {
                "type": "boolean",
                "nullable": true
              }
            }
          }
        },
        "required": [
          "id",
          "type",
          "attributes",
          "meta"
        ]
      },
      "tag_attributes": {
        "title": "Tag Attributes",
        "description": "Attributes for Tag",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "followers_count": {
            "type": "integer"
          },
          "taggings_count": {
            "type": "integer"
          }
        },
        "required": [
          "name",
          "created_at",
          "updated_at",
          "followers_count",
          "taggings_count"
        ]
      },
      "tag_small": {
        "title": "Tag Small",
        "description": "Tag object with less data",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/tag_attributes"
          }
        },
        "required": [
          "id",
          "type",
          "attributes"
        ]
      },
      "tags": {
        "title": "Tags",
        "description": "Tags",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/tag"
        }
      },
      "user": {
        "title": "User",
        "description": "User object",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/user_attributes"
          },
          "meta": {
            "$ref": "#/components/schemas/user_meta"
          }
        },
        "required": [
          "id",
          "type",
          "attributes"
        ]
      },
      "user_attributes": {
        "title": "User Attributes",
        "description": "Attributes for User",
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "avatar": {
            "$ref": "#/components/schemas/user_avatar"
          },
          "created_at": {
            "type": "string"
          },
          "posts_count": {
            "type": "integer"
          },
          "comments_count": {
            "type": "integer"
          },
          "followers_count": {
            "type": "integer"
          },
          "following_users_count": {
            "type": "integer"
          },
          "following_tags_count": {
            "type": "integer"
          },
          "follow_count": {
            "type": "integer"
          },
          "last_followed_at": {
            "type": "string",
            "nullable": true
          },
          "role": {
            "$ref": "#/components/schemas/role"
          }
        },
        "required": [
          "email",
          "username",
          "created_at",
          "posts_count",
          "comments_count"
        ]
      },
      "user_avatar": {
        "title": "User Avatar",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "url"
        ]
      },
      "user_meta": {
        "title": "User Attributes",
        "description": "Attributes for User",
        "type": "object",
        "properties": {
          "am_i_follow": {
            "type": "boolean",
            "nullable": true
          }
        },
        "required": [
          "am_i_follow"
        ]
      },
      "user_small": {
        "title": "User Small",
        "description": "User object with less data",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/user_attributes"
          }
        },
        "required": [
          "id",
          "type",
          "attributes"
        ]
      },
      "users": {
        "title": "Users",
        "description": "Users",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/user"
        }
      },
      "response_auth_confirm": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "auth"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "me": {
                    "$ref": "#/components/schemas/user"
                  }
                },
                "required": [
                  "me"
                ]
              }
            },
            "required": [
              "type",
              "attributes"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "response_auth_provider": {
        "title": "Provider Auth Data and message",
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "auth"
                ]
              },
              "meta": {
                "type": "object",
                "message": {
                  "type": "string"
                }
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "access_token": {
                    "type": "string"
                  },
                  "refresh_token": {
                    "type": "string"
                  },
                  "me": {
                    "$ref": "#/components/schemas/user"
                  }
                },
                "required": [
                  "access_token",
                  "refresh_token",
                  "me"
                ]
              }
            },
            "required": [
              "type",
              "meta",
              "attributes"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "response_auth_request_password_reset": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "auth"
                ]
              },
              "meta": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string"
                  },
                  "detail": {
                    "type": "string"
                  }
                },
                "required": [
                  "message",
                  "detail"
                ]
              }
            },
            "required": [
              "type",
              "meta"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "response_auth_sign_in": {
        "$ref": "#/components/schemas/auth"
      },
      "response_auth_sign_out": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "auth"
                ]
              },
              "meta": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string"
                  }
                },
                "required": [
                  "message"
                ]
              }
            },
            "required": [
              "type",
              "meta"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "response_auth_sign_out401": {
        "$ref": "#/components/schemas/invalid_credentials_error"
      },
      "response_auth_sign_up": {
        "$ref": "#/components/schemas/auth"
      },
      "response_comments_create": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/comment"
          }
        },
        "required": [
          "data"
        ]
      },
      "response_comments_destroy": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "meta": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string"
                  }
                },
                "required": [
                  "message"
                ]
              }
            },
            "required": [
              "type",
              "meta"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "response_comments_index": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/comments"
          },
          "links": {
            "$ref": "#/components/schemas/pagination_links"
          },
          "meta": {
            "$ref": "#/components/schemas/pagination_meta"
          }
        },
        "required": [
          "data"
        ]
      },
      "response_comments_show": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/comment"
          }
        },
        "required": [
          "data"
        ]
      },
      "response_error": {
        "$ref": "#/components/schemas/error"
      },
      "response_follows_success": {
        "type": "object",
        "properties": {
          "data": {
            "title": "Following success message",
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "meta": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string"
                  }
                }
              }
            },
            "required": [
              "type",
              "meta"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "response_posts_comment": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/comment"
            }
          },
          "links": {
            "$ref": "#/components/schemas/pagination_links"
          },
          "meta": {
            "$ref": "#/components/schemas/pagination_meta"
          }
        },
        "required": [
          "data",
          "links",
          "meta"
        ]
      },
      "response_posts_destroy": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "post"
                ]
              },
              "meta": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string"
                  }
                },
                "required": [
                  "message"
                ]
              }
            },
            "required": [
              "type",
              "meta"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "response_posts_index": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/posts"
          },
          "links": {
            "$ref": "#/components/schemas/pagination_links"
          },
          "meta": {
            "$ref": "#/components/schemas/pagination_meta"
          }
        },
        "required": [
          "data"
        ]
      },
      "response_posts_show": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/post"
          }
        },
        "required": [
          "data"
        ]
      },
      "response_root_index": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "enum": [
              "If you see this, you're in!"
            ]
          }
        },
        "required": [
          "message"
        ]
      },
      "response_root_index401": {
        "$ref": "#/components/schemas/unauthorized_error"
      },
      "response_tags_index": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/tags"
          },
          "links": {
            "$ref": "#/components/schemas/pagination_links"
          },
          "meta": {
            "$ref": "#/components/schemas/pagination_meta"
          }
        },
        "required": [
          "data"
        ]
      },
      "response_tags_show": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/tag"
          }
        },
        "required": [
          "data"
        ]
      },
      "response_users_following": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "item": {
              "type": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/user_small"
                  },
                  {
                    "$ref": "#/components/schemas/tag_small"
                  }
                ]
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/pagination_links"
          },
          "meta": {
            "$ref": "#/components/schemas/pagination_meta"
          }
        },
        "required": [
          "data"
        ]
      },
      "response_users_index": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/users"
          },
          "links": {
            "$ref": "#/components/schemas/pagination_links"
          },
          "meta": {
            "$ref": "#/components/schemas/pagination_meta"
          }
        },
        "required": [
          "data"
        ]
      },
      "response_users_show": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/user"
          }
        },
        "required": [
          "data"
        ]
      },
      "response_users_show404": {
        "$ref": "#/components/schemas/user_not_found_error"
      },
      "response_users_update": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/user"
          }
        },
        "required": [
          "data"
        ]
      },
      "response_votes_success": {
        "type": "object",
        "properties": {
          "data": {
            "title": "Voting success message",
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "meta": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string"
                  }
                }
              }
            },
            "required": [
              "type",
              "meta"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "parameter_auth_request_password_reset": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "auth"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  }
                },
                "required": [
                  "email"
                ]
              }
            },
            "required": [
              "type",
              "attributes"
            ]
          }
        }
      },
      "parameter_auth_reset_password": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "auth"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "password": {
                    "type": "string"
                  },
                  "reset_token": {
                    "type": "string"
                  }
                },
                "required": [
                  "password",
                  "reset_token"
                ]
              }
            },
            "required": [
              "type",
              "attributes"
            ]
          }
        }
      },
      "parameter_auth_sign_in": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "auth"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            },
            "required": [
              "type",
              "attributes"
            ]
          }
        }
      },
      "parameter_auth_sign_out": {
        "type": "string",
        "nullable": true,
        "enum": [
          "true",
          "false"
        ]
      },
      "parameter_auth_sign_up": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "auth"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "username",
                  "password"
                ]
              }
            },
            "required": [
              "type",
              "attributes"
            ]
          }
        }
      },
      "parameter_comments_create": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "comment"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "body": {
                    "description": "Comment body",
                    "type": "string"
                  },
                  "commentable_type": {
                    "description": "Commentable type",
                    "enum": [
                      "Post"
                    ],
                    "type": "string"
                  },
                  "commentable_id": {
                    "description": "Commentable ID",
                    "type": "string"
                  }
                }
              }
            },
            "required": [
              "type",
              "attributes"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "parameter_comments_update": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "comment"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "body": {
                    "description": "Comment body",
                    "type": "string"
                  }
                }
              }
            },
            "required": [
              "type",
              "attributes"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "parameter_follows_follow": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "follow"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "votable_id": {
                    "description": "Followable ID",
                    "type": "integer"
                  },
                  "votable_type": {
                    "description": "Followable type (\"User\" is default)",
                    "type": "string",
                    "required": false
                  }
                },
                "required": [
                  "Followable_id"
                ]
              }
            },
            "required": [
              "type",
              "attributes"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "parameter_posts_create": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "post"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "body": {
                    "description": "Post body",
                    "type": "string"
                  }
                }
              }
            },
            "required": [
              "type",
              "attributes"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "parameter_users_update": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "user"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "current_password": {
                    "description": "Current password",
                    "type": "string"
                  },
                  "password": {
                    "description": "New password",
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "username": {
                    "type": "string"
                  },
                  "role": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/role_value"
                      },
                      {
                        "$ref": "#/components/schemas/role_name"
                      }
                    ]
                  }
                }
              }
            },
            "required": [
              "type",
              "attributes"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "parameter_votes_vote": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "vote"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "votable_id": {
                    "description": "Votable ID",
                    "type": "integer"
                  },
                  "votable_type": {
                    "description": "Votable type (\"Post\" is default)",
                    "type": "string",
                    "required": false
                  }
                },
                "required": [
                  "votable_id"
                ]
              }
            },
            "required": [
              "type",
              "attributes"
            ]
          }
        },
        "required": [
          "data"
        ]
      }
    }
  },
  "paths": {
    "/auth/sign_in": {
      "post": {
        "summary": "Sign In",
        "tags": [
          "Auth"
        ],
        "description": "Sign In",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "type": "auth",
                    "attributes": {
                      "access_token": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOjQ1LCJleHAiOjE2NTg2NjYyMzAsImp0aSI6Ijc0Njc2NmNiZjE4NWI0MTU0OTFlZjQ0NDkxZGE2ZDVkIiwidHlwZSI6ImFjY2VzcyJ9.xvxQ8_626XF4e2c7_fVyrRgQanwMsGwpynQ2ZTi3qCI",
                      "refresh_token": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOjQ1LCJleHAiOjE2NjEyNTQ2MzAsImp0aSI6Ijc0Njc2NmNiZjE4NWI0MTU0OTFlZjQ0NDkxZGE2ZDVkIiwidHlwZSI6InJlZnJlc2gifQ.YB7SfgFA7AZJ25bVn2_fD7FkYnrM5o-HFopr_WROorE",
                      "me": {
                        "id": "45",
                        "type": "user",
                        "attributes": {
                          "email": "0@mail.com",
                          "username": "Aphrodite97554",
                          "bio": null,
                          "blog": null,
                          "location": null,
                          "avatar": {
                            "url": null
                          },
                          "created_at": "2022-07-24T11:37:10.256Z",
                          "updated_at": "2022-07-24T11:37:10.269Z",
                          "comments_count": 0,
                          "posts_count": 0,
                          "followers_count": 0,
                          "follow_count": 0,
                          "following_users_count": 0,
                          "following_tags_count": 0,
                          "last_followed_at": null,
                          "role": {
                            "name": "user",
                            "value": 0
                          }
                        },
                        "meta": {
                          "am_i_follow": null
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_auth_sign_in"
                }
              }
            }
          },
          "401": {
            "description": "invalid credentials",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "status": "401",
                      "title": "Invalid credentials"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/invalid_credentials_error"
                }
              }
            }
          },
          "422": {
            "description": "param is missing",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unprocessable_entity",
                      "status": "422",
                      "title": "param is missing or the value is empty: attributes"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/param_is_missing"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/parameter_auth_sign_in"
              }
            }
          }
        }
      }
    },
    "/auth/sign_up": {
      "post": {
        "summary": "Sign Up",
        "tags": [
          "Auth"
        ],
        "description": "Sign Up",
        "parameters": [],
        "responses": {
          "201": {
            "description": "created",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "type": "auth",
                    "attributes": {
                      "access_token": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOjQ3LCJleHAiOjE2NTg2NjYyMzAsImp0aSI6ImIxODhkOTAwYTYwNmQzOTlhNWEwZDBmZjIzYzE0NDEwIiwidHlwZSI6ImFjY2VzcyJ9.hs2caidhV106-tuWSUqMKy8grdom6k-yCsMhsYDlVtw",
                      "refresh_token": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOjQ3LCJleHAiOjE2NjEyNTQ2MzAsImp0aSI6ImIxODhkOTAwYTYwNmQzOTlhNWEwZDBmZjIzYzE0NDEwIiwidHlwZSI6InJlZnJlc2gifQ.SvKSiql7XUMhsThmErNrZmq1HICPKSbY8xd-UulyHfY",
                      "me": {
                        "id": "47",
                        "type": "user",
                        "attributes": {
                          "email": "0@mail.com",
                          "username": "User000",
                          "bio": null,
                          "blog": null,
                          "location": null,
                          "avatar": {
                            "url": null
                          },
                          "created_at": "2022-07-24T11:37:10.312Z",
                          "updated_at": "2022-07-24T11:37:10.317Z",
                          "comments_count": 0,
                          "posts_count": 0,
                          "followers_count": 0,
                          "follow_count": 0,
                          "following_users_count": 0,
                          "following_tags_count": 0,
                          "last_followed_at": null,
                          "role": {
                            "name": "unconfirmed",
                            "value": -30
                          }
                        },
                        "meta": {
                          "am_i_follow": null
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_auth_sign_up"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/parameter_auth_sign_up"
              }
            }
          }
        }
      }
    },
    "/auth/sign_out": {
      "delete": {
        "summary": "Sign Out",
        "tags": [
          "Auth"
        ],
        "description": "Sign Out",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "everywhere",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/parameter_auth_sign_out"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "type": "auth",
                    "meta": {
                      "message": "User signed out successfully"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_auth_sign_out"
                }
              }
            }
          },
          "401": {
            "description": "invalid credentials",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "status": "401",
                      "title": "Invalid credentials"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/invalid_credentials_error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/confirm": {
      "get": {
        "summary": "Confirm User",
        "tags": [
          "Auth"
        ],
        "description": "Confirm User",
        "parameters": [
          {
            "name": "confirmation_token",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "type": "auth",
                    "attributes": {
                      "me": {
                        "id": "50",
                        "type": "user",
                        "attributes": {
                          "email": "user_4@example.com",
                          "username": "Dionysus40994",
                          "bio": null,
                          "blog": null,
                          "location": null,
                          "avatar": {
                            "url": null
                          },
                          "created_at": "2022-07-24T11:37:10.371Z",
                          "updated_at": "2022-07-24T11:37:10.382Z",
                          "comments_count": 0,
                          "posts_count": 0,
                          "followers_count": 0,
                          "follow_count": 0,
                          "following_users_count": 0,
                          "following_tags_count": 0,
                          "last_followed_at": null,
                          "role": {
                            "name": "user",
                            "value": 0
                          }
                        },
                        "meta": {
                          "am_i_follow": null
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_auth_confirm"
                }
              }
            }
          },
          "400": {
            "description": "Invalid value",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "bad_request",
                      "status": "400",
                      "title": "Invalid value"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/invalid_value"
                }
              }
            }
          },
          "422": {
            "description": "Missing params",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unprocessable_entity",
                      "status": "422",
                      "title": "param is missing or the value is empty: confirmation_token"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/param_is_missing"
                }
              }
            }
          }
        }
      }
    },
    "/auth/refresh": {
      "get": {
        "summary": "Refresh tokens",
        "tags": [
          "Auth"
        ],
        "description": "Refresh tokens with refresh_token in header",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "type": "auth",
                    "attributes": {
                      "access_token": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOjUxLCJleHAiOjE2NTg2NjYyMzAsImp0aSI6IjMyYjNhMGYwODM1YzA2Y2FmNWEzYjVhOTZhZGM2NTE4IiwidHlwZSI6ImFjY2VzcyJ9.2MompSCqZuU68AN92QedTkJpQ-UJfaq2lfniJN33nUg",
                      "refresh_token": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOjUxLCJleHAiOjE2NjEyNTQ2MzAsImp0aSI6IjMyYjNhMGYwODM1YzA2Y2FmNWEzYjVhOTZhZGM2NTE4IiwidHlwZSI6InJlZnJlc2gifQ.wyOvDs5ST7P_ONG6SXcxYWaut48Y8TPdUgGqcqAJIis",
                      "me": {
                        "id": "51",
                        "type": "user",
                        "attributes": {
                          "email": "user_5@example.com",
                          "username": "Poseidon46039",
                          "bio": null,
                          "blog": null,
                          "location": null,
                          "avatar": {
                            "url": null
                          },
                          "created_at": "2022-07-24T11:37:10.434Z",
                          "updated_at": "2022-07-24T11:37:10.434Z",
                          "comments_count": 0,
                          "posts_count": 0,
                          "followers_count": 0,
                          "follow_count": 0,
                          "following_users_count": 0,
                          "following_tags_count": 0,
                          "last_followed_at": null,
                          "role": {
                            "name": "user",
                            "value": 0
                          }
                        },
                        "meta": {
                          "am_i_follow": null
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/auth"
                }
              }
            }
          },
          "401": {
            "description": "invalid credentials",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "status": "401",
                      "title": "Invalid credentials"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/invalid_credentials_error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/request_password_reset": {
      "post": {
        "summary": "Request Password Reset",
        "tags": [
          "Auth"
        ],
        "description": "Request Password Reset",
        "parameters": [],
        "responses": {
          "200": {
            "description": "instructions sent",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "type": "auth",
                    "meta": {
                      "message": "Instructions sent",
                      "detail": "Password recovery instructions were sent"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_auth_request_password_reset"
                }
              }
            }
          },
          "404": {
            "description": "User with this email not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "not_found",
                      "status": "404",
                      "title": "Record not found",
                      "detail": [
                        "User with email a123456@mail.com not found"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/parameter_auth_request_password_reset"
              }
            }
          }
        }
      }
    },
    "/auth/reset_password": {
      "post": {
        "summary": "Reset Password",
        "tags": [
          "Auth"
        ],
        "description": "Reset Password",
        "parameters": [],
        "responses": {
          "200": {
            "description": "password reset successfully",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "type": "auth",
                    "attributes": {
                      "access_token": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOjU0LCJleHAiOjE2NTg2NjYyMzAsImp0aSI6Ijg1ZmE4OGNkOTcwMTg0ZjNjNThhZTAzNjNjZmY0N2FjIiwidHlwZSI6ImFjY2VzcyJ9.SZufpDwMc399Wa2St118a_9dDFogqllsrR5UYfH5E78",
                      "refresh_token": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOjU0LCJleHAiOjE2NjEyNTQ2MzAsImp0aSI6Ijg1ZmE4OGNkOTcwMTg0ZjNjNThhZTAzNjNjZmY0N2FjIiwidHlwZSI6InJlZnJlc2gifQ.imHjP12AudgBExASfnIhVhcolQl3gmwfHyyrc2bg7JE",
                      "me": {
                        "id": "54",
                        "type": "user",
                        "attributes": {
                          "email": "user_8@example.com",
                          "username": "Hades95784",
                          "bio": null,
                          "blog": null,
                          "location": null,
                          "avatar": {
                            "url": null
                          },
                          "created_at": "2022-07-24T11:37:10.534Z",
                          "updated_at": "2022-07-24T11:37:10.545Z",
                          "comments_count": 0,
                          "posts_count": 0,
                          "followers_count": 0,
                          "follow_count": 0,
                          "following_users_count": 0,
                          "following_tags_count": 0,
                          "last_followed_at": null,
                          "role": {
                            "name": "admin",
                            "value": 50
                          }
                        },
                        "meta": {
                          "am_i_follow": null
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/auth"
                }
              }
            }
          },
          "401": {
            "description": "Invalid token",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "status": "401",
                      "title": "Invalid credentials"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/parameter_auth_reset_password"
              }
            }
          }
        }
      }
    },
    "/auth/providers/github": {
      "post": {
        "summary": "Sign In with GitHub",
        "tags": [
          "Auth"
        ],
        "description": "Sign In with GitHub.<br><b>token</b>: &#42; Base64 encoded GitHub access_token",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "schema": {
              "type": "string",
              "required": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "logged in successfully. User with this provider already exists",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "type": "auth",
                    "attributes": {
                      "access_token": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOjU1LCJleHAiOjE2NTg2NjYyMzAsImp0aSI6IjQ3OGMwY2ExMWIyYmU1MGQ0MDEyMTBlODhhNTkzZjU5IiwidHlwZSI6ImFjY2VzcyJ9.uFziUXIHKJcXfHi_kQHdFL4eXzOI39uCtWzIkLyAkuw",
                      "refresh_token": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOjU1LCJleHAiOjE2NjEyNTQ2MzAsImp0aSI6IjQ3OGMwY2ExMWIyYmU1MGQ0MDEyMTBlODhhNTkzZjU5IiwidHlwZSI6InJlZnJlc2gifQ.T98Ox7kGEwXbs4Xcc68Hehc0s_jiR6-31UoxYi3XYms",
                      "me": {
                        "id": "55",
                        "type": "user",
                        "attributes": {
                          "email": "maxbarsukov@bk.ru",
                          "username": "maxbarsukov",
                          "bio": null,
                          "blog": null,
                          "location": null,
                          "avatar": {
                            "url": null
                          },
                          "created_at": "2022-07-24T11:37:10.567Z",
                          "updated_at": "2022-07-24T11:37:10.581Z",
                          "comments_count": 0,
                          "posts_count": 0,
                          "followers_count": 0,
                          "follow_count": 0,
                          "following_users_count": 0,
                          "following_tags_count": 0,
                          "last_followed_at": null,
                          "role": {
                            "name": "admin",
                            "value": 50
                          }
                        },
                        "meta": {
                          "am_i_follow": null
                        }
                      }
                    },
                    "meta": {
                      "message": "You have successfully logged in with GitHub."
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_auth_provider"
                }
              }
            }
          },
          "201": {
            "description": "signed in successfully. User with this provider has been created",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "type": "auth",
                    "attributes": {
                      "access_token": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOjU2LCJleHAiOjE2NTg2NjYyMzAsImp0aSI6IjYzYTNkMWJhNTJkOWExYmZkY2FhNjQwZDdlM2JmZGZmIiwidHlwZSI6ImFjY2VzcyJ9.vsW1Iq_yQeMy3IMo3tMn1n8uUz9eQXIiBG2FI0_3ZFM",
                      "refresh_token": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOjU2LCJleHAiOjE2NjEyNTQ2MzAsImp0aSI6IjYzYTNkMWJhNTJkOWExYmZkY2FhNjQwZDdlM2JmZGZmIiwidHlwZSI6InJlZnJlc2gifQ.QCAsZTr-hCKPZCBejX4-Rmm1HBpw8BU-k6rKJunzGgQ",
                      "me": {
                        "id": "56",
                        "type": "user",
                        "attributes": {
                          "email": "maxbarsukov@bk.ru",
                          "username": "maxbarsukov",
                          "bio": "My bio",
                          "blog": "https://maxbarsukov.vercel.app",
                          "location": "A, B",
                          "avatar": {
                            "url": null
                          },
                          "created_at": "2022-07-24T11:37:10.601Z",
                          "updated_at": "2022-07-24T11:37:10.614Z",
                          "comments_count": 0,
                          "posts_count": 0,
                          "followers_count": 0,
                          "follow_count": 0,
                          "following_users_count": 0,
                          "following_tags_count": 0,
                          "last_followed_at": null,
                          "role": {
                            "name": "user",
                            "value": 0
                          }
                        },
                        "meta": {
                          "am_i_follow": null
                        }
                      }
                    },
                    "meta": {
                      "message": "You have successfully signed in with GitHub."
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_auth_provider"
                }
              }
            }
          },
          "422": {
            "description": "token encoding is broken or user parameters are not valid",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unprocessable_entity",
                      "status": "422",
                      "title": "Unprocessable Entity",
                      "detail": [
                        "Can't decode GitHub token"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          },
          "424": {
            "description": "Error at dependent service (Github error response or no connection)",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "failed_dependency",
                      "status": "424",
                      "title": "Timeout at dependent service",
                      "detail": [
                        "timeout"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/providers/vk": {
      "post": {
        "summary": "Sign In with VK",
        "tags": [
          "Auth"
        ],
        "description": "Sign In with VK.<br><b>vk_code</b>: &#42; Base64 encoded VK code<br><b>vk_redirect_uri</b>: &#42; VK OAuth App Redirect URI<br><b>email</b>: Email you must pass if VK dont provides your mail",
        "parameters": [
          {
            "name": "vk_code",
            "in": "query",
            "schema": {
              "type": "string",
              "required": true
            }
          },
          {
            "name": "vk_redirect_uri",
            "in": "query",
            "schema": {
              "type": "string",
              "required": true
            }
          },
          {
            "name": "email",
            "in": "query",
            "schema": {
              "type": "string",
              "required": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "logged in successfully. User with this provider already exists",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "type": "auth",
                    "attributes": {
                      "access_token": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOjU3LCJleHAiOjE2NTg2NjYyMzAsImp0aSI6ImY0MzViYWNjMWRiYmYyMTk2YmViOWQ1ZmUzNjAwM2E0IiwidHlwZSI6ImFjY2VzcyJ9.sf9DHbOlRE6DRj8qFAf8qPtGq5AFx75iYbccZwcDZZo",
                      "refresh_token": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOjU3LCJleHAiOjE2NjEyNTQ2MzAsImp0aSI6ImY0MzViYWNjMWRiYmYyMTk2YmViOWQ1ZmUzNjAwM2E0IiwidHlwZSI6InJlZnJlc2gifQ.GtsxE8hXAesXUErLlv6mljNaPpcOuRcGIn-TJxdW320",
                      "me": {
                        "id": "57",
                        "type": "user",
                        "attributes": {
                          "email": "maxbarsukov@bk.ru",
                          "username": "maxbarsukov",
                          "bio": null,
                          "blog": null,
                          "location": null,
                          "avatar": {
                            "url": null
                          },
                          "created_at": "2022-07-24T11:37:10.638Z",
                          "updated_at": "2022-07-24T11:37:10.650Z",
                          "comments_count": 0,
                          "posts_count": 0,
                          "followers_count": 0,
                          "follow_count": 0,
                          "following_users_count": 0,
                          "following_tags_count": 0,
                          "last_followed_at": null,
                          "role": {
                            "name": "admin",
                            "value": 50
                          }
                        },
                        "meta": {
                          "am_i_follow": null
                        }
                      }
                    },
                    "meta": {
                      "message": "You have successfully logged in with VK."
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_auth_provider"
                }
              }
            }
          },
          "201": {
            "description": "signed in successfully. User with this provider has been created",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "type": "auth",
                    "attributes": {
                      "access_token": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOjU4LCJleHAiOjE2NTg2NjYyMzAsImp0aSI6IjM0MjViODc5ZDJiOGFkZWRmZTViZjg3YWEwZDFjNDExIiwidHlwZSI6ImFjY2VzcyJ9.vqLw2zoPtzEjSSItTqud0C6bECWroJ92mDsIsZubKQw",
                      "refresh_token": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOjU4LCJleHAiOjE2NjEyNTQ2MzAsImp0aSI6IjM0MjViODc5ZDJiOGFkZWRmZTViZjg3YWEwZDFjNDExIiwidHlwZSI6InJlZnJlc2gifQ.QxonDtwWkZzaP3pdL4au_PDUa3YLHz3wt-da2EiQNbo",
                      "me": {
                        "id": "58",
                        "type": "user",
                        "attributes": {
                          "email": "maxbarsukov@bk.ru",
                          "username": "maxbarsukov",
                          "bio": "My status. My about",
                          "blog": "https://maxbarsukov.vercel.app",
                          "location": null,
                          "avatar": {
                            "url": null
                          },
                          "created_at": "2022-07-24T11:37:10.678Z",
                          "updated_at": "2022-07-24T11:37:10.692Z",
                          "comments_count": 0,
                          "posts_count": 0,
                          "followers_count": 0,
                          "follow_count": 0,
                          "following_users_count": 0,
                          "following_tags_count": 0,
                          "last_followed_at": null,
                          "role": {
                            "name": "user",
                            "value": 0
                          }
                        },
                        "meta": {
                          "am_i_follow": null
                        }
                      }
                    },
                    "meta": {
                      "message": "You have successfully signed in with VK."
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_auth_provider"
                }
              }
            }
          },
          "422": {
            "description": "token encoding is broken or user parameters are not valid",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unprocessable_entity",
                      "status": "422",
                      "title": "Bad base64 encoding. Can't decode VK code"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          },
          "424": {
            "description": "Error at dependent service (VK error response or no connection)",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "failed_dependency",
                      "status": "424",
                      "title": "Timeout at dependent service",
                      "detail": [
                        "timeout"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          }
        }
      }
    },
    "/comments": {
      "post": {
        "summary": "create comment",
        "tags": [
          "Comments"
        ],
        "description": "Create comments",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "responses": {
          "201": {
            "description": "created successful",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "1",
                    "type": "comment",
                    "attributes": {
                      "body": "Repellat sit voluptas. Harum cumque voluptatibus.",
                      "user_id": 59,
                      "commentable_id": 1,
                      "commentable_type": "Post",
                      "created_at": "2022-07-24T11:37:10.761Z",
                      "edited_at": null,
                      "edited": false,
                      "likes_count": 0,
                      "dislikes_count": 0,
                      "score": 0
                    },
                    "meta": {
                      "my_rate": null
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_comments_create"
                }
              }
            }
          },
          "401": {
            "description": "user is suspended",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "status": "401",
                      "title": "You are banned"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          },
          "422": {
            "description": "validation error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unprocessable_entity",
                      "status": "422",
                      "title": "Record Invalid",
                      "detail": [
                        "Body is too long (maximum is 10000 characters)"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/parameter_comments_create"
              }
            }
          }
        }
      }
    },
    "/comments/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "show comment",
        "tags": [
          "Comments"
        ],
        "description": "Show comment",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "comment found",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "2",
                    "type": "comment",
                    "attributes": {
                      "body": "Nesciunt enim accusantium. Odit accusamus id.",
                      "user_id": 62,
                      "commentable_id": 4,
                      "commentable_type": "Post",
                      "created_at": "2022-07-24T11:37:10.870Z",
                      "edited_at": null,
                      "edited": false,
                      "likes_count": 0,
                      "dislikes_count": 0,
                      "score": 0
                    },
                    "meta": {
                      "my_rate": 0
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_comments_show"
                }
              }
            }
          },
          "404": {
            "description": "comment not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "not_found",
                      "status": "404",
                      "title": "Not Found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "update comment",
        "tags": [
          "Comments"
        ],
        "description": "Update comment",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "3",
                    "type": "comment",
                    "attributes": {
                      "body": "Blanditiis atque provident. Adipisci velit autem. | updated!",
                      "user_id": 65,
                      "commentable_id": 5,
                      "commentable_type": "Post",
                      "created_at": "2022-07-24T11:37:10.942Z",
                      "edited_at": "2022-07-24T11:37:10.956Z",
                      "edited": true,
                      "likes_count": 0,
                      "dislikes_count": 0,
                      "score": 0
                    },
                    "meta": {
                      "my_rate": 0
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_comments_show"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "status": "401",
                      "title": "Unauthorized",
                      "detail": [
                        "You must be logged in"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden user",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "forbidden",
                      "status": "403",
                      "title": "Forbidden",
                      "detail": [
                        "not allowed to update? this Comment"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          },
          "404": {
            "description": "comment not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "not_found",
                      "status": "404",
                      "title": "Not Found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          },
          "422": {
            "description": "validation error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unprocessable_entity",
                      "status": "422",
                      "title": "Record Invalid",
                      "detail": [
                        "Body is too long (maximum is 10000 characters)"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/parameter_comments_update"
              }
            }
          }
        }
      },
      "put": {
        "summary": "update comment",
        "tags": [
          "Comments"
        ],
        "description": "Update comment",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "7",
                    "type": "comment",
                    "attributes": {
                      "body": "Recusandae dolore error. Est tenetur harum. | updated!",
                      "user_id": 70,
                      "commentable_id": 9,
                      "commentable_type": "Post",
                      "created_at": "2022-07-24T11:37:11.147Z",
                      "edited_at": "2022-07-24T11:37:11.159Z",
                      "edited": true,
                      "likes_count": 0,
                      "dislikes_count": 0,
                      "score": 0
                    },
                    "meta": {
                      "my_rate": 0
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_comments_show"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "status": "401",
                      "title": "Unauthorized",
                      "detail": [
                        "You must be logged in"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden user",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "forbidden",
                      "status": "403",
                      "title": "Forbidden",
                      "detail": [
                        "not allowed to update? this Comment"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          },
          "404": {
            "description": "comment not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "not_found",
                      "status": "404",
                      "title": "Not Found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          },
          "422": {
            "description": "validation error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unprocessable_entity",
                      "status": "422",
                      "title": "Record Invalid",
                      "detail": [
                        "Body is too long (maximum is 10000 characters)"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/parameter_comments_update"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "delete comment",
        "tags": [
          "Comments"
        ],
        "description": "Delete comment",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "type": "comment",
                    "meta": {
                      "message": "Comment successfully destroyed"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_comments_destroy"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "status": "401",
                      "title": "Unauthorized",
                      "detail": [
                        "You must be logged in"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden user",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "forbidden",
                      "status": "403",
                      "title": "Forbidden",
                      "detail": [
                        "not allowed to destroy? this Comment"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          },
          "404": {
            "description": "comment not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "not_found",
                      "status": "404",
                      "title": "Not Found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          }
        }
      }
    },
    "/feed": {
      "get": {
        "summary": "get feed",
        "tags": [
          "Feed"
        ],
        "description": "Get feed",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "page[number]",
            "in": "query",
            "description": "Page number",
            "minimum": 1,
            "default": 1,
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Per page",
            "minimum": 1,
            "maximum": 100,
            "default": 20,
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort by",
            "enum": [
              "body",
              "-body",
              "created_at",
              "-created_at"
            ],
            "example": "-created_at",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[body]",
            "in": "query",
            "description": "Filter by body contains",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[created_at[before]]",
            "in": "query",
            "description": "Filter by created before date",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[created_at[after]]",
            "in": "query",
            "description": "Filter by created after date",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "headers": {
              "Link": {
                "schema": {
                  "type": "string",
                  "example": "<http://localhost:3000/api/v1/users?page%5Bnumber%5D=1&page%5Bsize%5D=5>; rel=\"first\""
                },
                "description": "Links to another pages"
              },
              "X-Total-Pages": {
                "schema": {
                  "type": "integer",
                  "example": 10,
                  "minimum": 1,
                  "maximum": 100
                },
                "description": "The total number of pages of the resource"
              },
              "Per-Page": {
                "schema": {
                  "type": "integer",
                  "example": 4
                },
                "description": "Resource entries per page"
              },
              "Current-Page": {
                "schema": {
                  "type": "integer",
                  "example": 1
                },
                "description": "Current page"
              },
              "X-Total-Count": {
                "schema": {
                  "type": "integer",
                  "example": 2
                },
                "description": "The total number of the resource"
              },
              "Content-Range": {
                "schema": {
                  "type": "string",
                  "example": "items 11-15/100"
                },
                "description": "items from-to/count"
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "34",
                      "type": "post",
                      "attributes": {
                        "body": "This is my #post",
                        "created_at": "2022-07-24T11:37:11.757Z",
                        "updated_at": "2022-07-24T11:37:11.757Z",
                        "comments_count": 0,
                        "likes_count": 0,
                        "dislikes_count": 0,
                        "score": 0,
                        "tag_list": [
                          "post"
                        ]
                      },
                      "relationships": {
                        "user": {
                          "data": {
                            "id": "86",
                            "type": "user"
                          }
                        }
                      },
                      "meta": {
                        "my_rate": 0
                      }
                    },
                    {
                      "id": "33",
                      "type": "post",
                      "attributes": {
                        "body": "#new #post for you",
                        "created_at": "2022-07-24T11:37:11.725Z",
                        "updated_at": "2022-07-24T11:37:11.824Z",
                        "comments_count": 0,
                        "likes_count": 1,
                        "dislikes_count": 0,
                        "score": 1,
                        "tag_list": [
                          "new",
                          "post"
                        ]
                      },
                      "relationships": {
                        "user": {
                          "data": {
                            "id": "85",
                            "type": "user"
                          }
                        }
                      },
                      "meta": {
                        "my_rate": 1
                      }
                    },
                    {
                      "id": "31",
                      "type": "post",
                      "attributes": {
                        "body": "Wow, #new #amazing #post",
                        "created_at": "2022-07-24T11:37:11.639Z",
                        "updated_at": "2022-07-24T11:37:11.814Z",
                        "comments_count": 0,
                        "likes_count": 1,
                        "dislikes_count": 0,
                        "score": 1,
                        "tag_list": [
                          "new",
                          "amazing",
                          "post"
                        ]
                      },
                      "relationships": {
                        "user": {
                          "data": {
                            "id": "83",
                            "type": "user"
                          }
                        }
                      },
                      "meta": {
                        "my_rate": 1
                      }
                    },
                    {
                      "id": "30",
                      "type": "post",
                      "attributes": {
                        "body": "Soluta ut neque. Soluta quo delectus.",
                        "created_at": "2022-07-24T11:37:11.618Z",
                        "updated_at": "2022-07-24T11:37:11.618Z",
                        "comments_count": 0,
                        "likes_count": 0,
                        "dislikes_count": 0,
                        "score": 0,
                        "tag_list": []
                      },
                      "relationships": {
                        "user": {
                          "data": {
                            "id": "82",
                            "type": "user"
                          }
                        }
                      },
                      "meta": {
                        "my_rate": 0
                      }
                    },
                    {
                      "id": "29",
                      "type": "post",
                      "attributes": {
                        "body": "In vitae odio. Consequatur reprehenderit voluptas.",
                        "created_at": "2022-07-24T11:37:11.608Z",
                        "updated_at": "2022-07-24T11:37:11.608Z",
                        "comments_count": 0,
                        "likes_count": 0,
                        "dislikes_count": 0,
                        "score": 0,
                        "tag_list": []
                      },
                      "relationships": {
                        "user": {
                          "data": {
                            "id": "82",
                            "type": "user"
                          }
                        }
                      },
                      "meta": {
                        "my_rate": 0
                      }
                    },
                    {
                      "id": "28",
                      "type": "post",
                      "attributes": {
                        "body": "Animi consectetur exercitationem. Earum repudiandae adipisci.",
                        "created_at": "2022-07-24T11:37:11.599Z",
                        "updated_at": "2022-07-24T11:37:11.599Z",
                        "comments_count": 0,
                        "likes_count": 0,
                        "dislikes_count": 0,
                        "score": 0,
                        "tag_list": []
                      },
                      "relationships": {
                        "user": {
                          "data": {
                            "id": "82",
                            "type": "user"
                          }
                        }
                      },
                      "meta": {
                        "my_rate": 0
                      }
                    },
                    {
                      "id": "27",
                      "type": "post",
                      "attributes": {
                        "body": "Aperiam quidem maxime. Nihil consectetur voluptatum.",
                        "created_at": "2022-07-24T11:37:11.590Z",
                        "updated_at": "2022-07-24T11:37:11.590Z",
                        "comments_count": 0,
                        "likes_count": 0,
                        "dislikes_count": 0,
                        "score": 0,
                        "tag_list": []
                      },
                      "relationships": {
                        "user": {
                          "data": {
                            "id": "82",
                            "type": "user"
                          }
                        }
                      },
                      "meta": {
                        "my_rate": 0
                      }
                    },
                    {
                      "id": "26",
                      "type": "post",
                      "attributes": {
                        "body": "Architecto ex nisi. Voluptatem soluta rerum.",
                        "created_at": "2022-07-24T11:37:11.581Z",
                        "updated_at": "2022-07-24T11:37:11.581Z",
                        "comments_count": 0,
                        "likes_count": 0,
                        "dislikes_count": 0,
                        "score": 0,
                        "tag_list": []
                      },
                      "relationships": {
                        "user": {
                          "data": {
                            "id": "82",
                            "type": "user"
                          }
                        }
                      },
                      "meta": {
                        "my_rate": 0
                      }
                    },
                    {
                      "id": "25",
                      "type": "post",
                      "attributes": {
                        "body": "Animi blanditiis exercitationem. Deleniti vitae omnis.",
                        "created_at": "2022-07-24T11:37:11.564Z",
                        "updated_at": "2022-07-24T11:37:11.564Z",
                        "comments_count": 0,
                        "likes_count": 0,
                        "dislikes_count": 0,
                        "score": 0,
                        "tag_list": []
                      },
                      "relationships": {
                        "user": {
                          "data": {
                            "id": "81",
                            "type": "user"
                          }
                        }
                      },
                      "meta": {
                        "my_rate": 0
                      }
                    },
                    {
                      "id": "24",
                      "type": "post",
                      "attributes": {
                        "body": "Vel reprehenderit est. Praesentium neque ratione.",
                        "created_at": "2022-07-24T11:37:11.555Z",
                        "updated_at": "2022-07-24T11:37:11.555Z",
                        "comments_count": 0,
                        "likes_count": 0,
                        "dislikes_count": 0,
                        "score": 0,
                        "tag_list": []
                      },
                      "relationships": {
                        "user": {
                          "data": {
                            "id": "81",
                            "type": "user"
                          }
                        }
                      },
                      "meta": {
                        "my_rate": 0
                      }
                    },
                    {
                      "id": "23",
                      "type": "post",
                      "attributes": {
                        "body": "Similique neque omnis. Aut et consequuntur.",
                        "created_at": "2022-07-24T11:37:11.547Z",
                        "updated_at": "2022-07-24T11:37:11.547Z",
                        "comments_count": 0,
                        "likes_count": 0,
                        "dislikes_count": 0,
                        "score": 0,
                        "tag_list": []
                      },
                      "relationships": {
                        "user": {
                          "data": {
                            "id": "81",
                            "type": "user"
                          }
                        }
                      },
                      "meta": {
                        "my_rate": 0
                      }
                    },
                    {
                      "id": "22",
                      "type": "post",
                      "attributes": {
                        "body": "Deleniti optio commodi. Ipsam sed perferendis.",
                        "created_at": "2022-07-24T11:37:11.539Z",
                        "updated_at": "2022-07-24T11:37:11.539Z",
                        "comments_count": 0,
                        "likes_count": 0,
                        "dislikes_count": 0,
                        "score": 0,
                        "tag_list": []
                      },
                      "relationships": {
                        "user": {
                          "data": {
                            "id": "81",
                            "type": "user"
                          }
                        }
                      },
                      "meta": {
                        "my_rate": 0
                      }
                    },
                    {
                      "id": "21",
                      "type": "post",
                      "attributes": {
                        "body": "Porro ut veritatis. Maxime magnam dolore.",
                        "created_at": "2022-07-24T11:37:11.526Z",
                        "updated_at": "2022-07-24T11:37:11.526Z",
                        "comments_count": 0,
                        "likes_count": 0,
                        "dislikes_count": 0,
                        "score": 0,
                        "tag_list": []
                      },
                      "relationships": {
                        "user": {
                          "data": {
                            "id": "81",
                            "type": "user"
                          }
                        }
                      },
                      "meta": {
                        "my_rate": 0
                      }
                    },
                    {
                      "id": "20",
                      "type": "post",
                      "attributes": {
                        "body": "Ratione fugiat non. Aut aspernatur dolorem.",
                        "created_at": "2022-07-24T11:37:11.518Z",
                        "updated_at": "2022-07-24T11:37:11.518Z",
                        "comments_count": 0,
                        "likes_count": 0,
                        "dislikes_count": 0,
                        "score": 0,
                        "tag_list": []
                      },
                      "relationships": {
                        "user": {
                          "data": {
                            "id": "80",
                            "type": "user"
                          }
                        }
                      },
                      "meta": {
                        "my_rate": 0
                      }
                    },
                    {
                      "id": "19",
                      "type": "post",
                      "attributes": {
                        "body": "Et iste fugiat. Temporibus suscipit molestiae.",
                        "created_at": "2022-07-24T11:37:11.509Z",
                        "updated_at": "2022-07-24T11:37:11.509Z",
                        "comments_count": 0,
                        "likes_count": 0,
                        "dislikes_count": 0,
                        "score": 0,
                        "tag_list": []
                      },
                      "relationships": {
                        "user": {
                          "data": {
                            "id": "80",
                            "type": "user"
                          }
                        }
                      },
                      "meta": {
                        "my_rate": 0
                      }
                    },
                    {
                      "id": "18",
                      "type": "post",
                      "attributes": {
                        "body": "Iste consequatur cum. Libero magnam eos.",
                        "created_at": "2022-07-24T11:37:11.501Z",
                        "updated_at": "2022-07-24T11:37:11.501Z",
                        "comments_count": 0,
                        "likes_count": 0,
                        "dislikes_count": 0,
                        "score": 0,
                        "tag_list": []
                      },
                      "relationships": {
                        "user": {
                          "data": {
                            "id": "80",
                            "type": "user"
                          }
                        }
                      },
                      "meta": {
                        "my_rate": 0
                      }
                    },
                    {
                      "id": "17",
                      "type": "post",
                      "attributes": {
                        "body": "Porro ea mollitia. Iusto veritatis velit.",
                        "created_at": "2022-07-24T11:37:11.492Z",
                        "updated_at": "2022-07-24T11:37:11.492Z",
                        "comments_count": 0,
                        "likes_count": 0,
                        "dislikes_count": 0,
                        "score": 0,
                        "tag_list": []
                      },
                      "relationships": {
                        "user": {
                          "data": {
                            "id": "80",
                            "type": "user"
                          }
                        }
                      },
                      "meta": {
                        "my_rate": 0
                      }
                    },
                    {
                      "id": "16",
                      "type": "post",
                      "attributes": {
                        "body": "Maiores odio eaque. Provident dolores modi.",
                        "created_at": "2022-07-24T11:37:11.483Z",
                        "updated_at": "2022-07-24T11:37:11.483Z",
                        "comments_count": 0,
                        "likes_count": 0,
                        "dislikes_count": 0,
                        "score": 0,
                        "tag_list": []
                      },
                      "relationships": {
                        "user": {
                          "data": {
                            "id": "80",
                            "type": "user"
                          }
                        }
                      },
                      "meta": {
                        "my_rate": 0
                      }
                    }
                  ],
                  "links": {
                    "first": "/api/v1/feed?page%5Bnumber%5D=1",
                    "self": "/api/v1/feed?page%5Bnumber%5D=1",
                    "last": "/api/v1/feed?page%5Bnumber%5D=1"
                  },
                  "meta": {
                    "total": 18,
                    "pages": 1,
                    "current_page": 1,
                    "per_page": 20,
                    "from": 1,
                    "to": 18
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_posts_index"
                }
              }
            }
          },
          "400": {
            "description": "invalid pagination",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "bad_request",
                      "status": "400",
                      "title": "Bad Request",
                      "detail": [
                        "expected :page in 1..1; got 100"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/pagination_error"
                }
              }
            }
          },
          "401": {
            "description": "user is suspended",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "status": "401",
                      "title": "You are banned"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          }
        }
      }
    },
    "/follows": {
      "post": {
        "summary": "follow",
        "tags": [
          "Follows"
        ],
        "description": "Follow somebody",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "type": "follow",
                    "meta": {
                      "message": "User successfully followed"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_follows_success"
                }
              }
            }
          },
          "401": {
            "description": "user is suspended",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "status": "401",
                      "title": "You are banned"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          },
          "404": {
            "description": "followable not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "not_found",
                      "status": "404",
                      "title": "Not Found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "you cant follow yourself",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unprocessable_entity",
                      "status": "422",
                      "title": "Invalid parameter: You cant follow yourself"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/parameter_follows_follow"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "unfollow",
        "tags": [
          "Follows"
        ],
        "description": "Stop following somebody",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "type": "follow",
                    "meta": {
                      "message": "User successfully unfollowed"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_follows_success"
                }
              }
            }
          },
          "401": {
            "description": "user is suspended",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "status": "401",
                      "title": "You are banned"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          },
          "404": {
            "description": "followable not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "not_found",
                      "status": "404",
                      "title": "Not Found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "invalid parameter error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unprocessable_entity",
                      "status": "422",
                      "title": "Invalid parameter: followable_type must be one of the list: User, Tag, passed UnsupportedFollowable"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/parameter_follows_follow"
              }
            }
          }
        }
      }
    },
    "/health_check": {
      "get": {
        "summary": "check server health",
        "tags": [
          "Health Check"
        ],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/text": {
                "example": "ok"
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "summary": "check auth",
        "tags": [
          "Auth Check"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "example": {
                  "message": "If you see this, you're in!"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "status": "401",
                      "title": "You need to sign in or sign up before continuing"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/posts": {
      "get": {
        "summary": "list posts",
        "tags": [
          "Posts"
        ],
        "description": "Get posts",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "page[number]",
            "in": "query",
            "description": "Page number",
            "minimum": 1,
            "default": 1,
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Per page",
            "minimum": 1,
            "maximum": 100,
            "default": 20,
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort by",
            "enum": [
              "body",
              "-body",
              "created_at",
              "-created_at"
            ],
            "example": "-created_at",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[body]",
            "in": "query",
            "description": "Filter by body contains",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[created_at[before]]",
            "in": "query",
            "description": "Filter by created before date",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[created_at[after]]",
            "in": "query",
            "description": "Filter by created after date",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "headers": {
              "Link": {
                "schema": {
                  "type": "string",
                  "example": "<http://localhost:3000/api/v1/users?page%5Bnumber%5D=1&page%5Bsize%5D=5>; rel=\"first\""
                },
                "description": "Links to another pages"
              },
              "X-Total-Pages": {
                "schema": {
                  "type": "integer",
                  "example": 10,
                  "minimum": 1,
                  "maximum": 100
                },
                "description": "The total number of pages of the resource"
              },
              "Per-Page": {
                "schema": {
                  "type": "integer",
                  "example": 4
                },
                "description": "Resource entries per page"
              },
              "Current-Page": {
                "schema": {
                  "type": "integer",
                  "example": 1
                },
                "description": "Current page"
              },
              "X-Total-Count": {
                "schema": {
                  "type": "integer",
                  "example": 2
                },
                "description": "The total number of the resource"
              },
              "Content-Range": {
                "schema": {
                  "type": "string",
                  "example": "items 11-15/100"
                },
                "description": "items from-to/count"
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "36",
                      "type": "post",
                      "attributes": {
                        "body": "Ut nesciunt explicabo. Ut et voluptatum.",
                        "created_at": "2022-07-24T11:37:12.189Z",
                        "updated_at": "2022-07-24T11:37:12.189Z",
                        "comments_count": 0,
                        "likes_count": 0,
                        "dislikes_count": 0,
                        "score": 0,
                        "tag_list": []
                      },
                      "relationships": {
                        "user": {
                          "data": {
                            "id": "101",
                            "type": "user"
                          }
                        }
                      },
                      "meta": {
                        "my_rate": 0
                      }
                    },
                    {
                      "id": "35",
                      "type": "post",
                      "attributes": {
                        "body": "Sit ut voluptatem. Perspiciatis dolores quasi.",
                        "created_at": "2022-07-24T11:37:12.168Z",
                        "updated_at": "2022-07-24T11:37:12.168Z",
                        "comments_count": 0,
                        "likes_count": 0,
                        "dislikes_count": 0,
                        "score": 0,
                        "tag_list": []
                      },
                      "relationships": {
                        "user": {
                          "data": {
                            "id": "100",
                            "type": "user"
                          }
                        }
                      },
                      "meta": {
                        "my_rate": 0
                      }
                    }
                  ],
                  "links": {
                    "first": "/api/v1/posts?page%5Bnumber%5D=1",
                    "self": "/api/v1/posts?page%5Bnumber%5D=1",
                    "last": "/api/v1/posts?page%5Bnumber%5D=1"
                  },
                  "meta": {
                    "total": 2,
                    "pages": 1,
                    "current_page": 1,
                    "per_page": 20,
                    "from": 1,
                    "to": 2
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_posts_index"
                }
              }
            }
          },
          "400": {
            "description": "invalid pagination",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "bad_request",
                      "status": "400",
                      "title": "Invalid Parameter",
                      "detail": [
                        "page[number] must be a positive integer; got -1"
                      ],
                      "source": {
                        "parameter": "page[number]"
                      }
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/pagination_error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "create post",
        "tags": [
          "Posts"
        ],
        "description": "Create posts",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "responses": {
          "201": {
            "description": "created successful",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "38",
                    "type": "post",
                    "attributes": {
                      "body": "Provident laudantium quidem. Voluptatum beatae ut.",
                      "created_at": "2022-07-24T11:37:12.263Z",
                      "updated_at": "2022-07-24T11:37:12.263Z",
                      "comments_count": 0,
                      "likes_count": 0,
                      "dislikes_count": 0,
                      "score": 0,
                      "tag_list": []
                    },
                    "relationships": {
                      "user": {
                        "data": {
                          "id": "104",
                          "type": "user"
                        }
                      }
                    },
                    "meta": {
                      "my_rate": null
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_posts_show"
                }
              }
            }
          },
          "401": {
            "description": "user is suspended",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "status": "401",
                      "title": "You are banned"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          },
          "422": {
            "description": "validation error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unprocessable_entity",
                      "status": "422",
                      "title": "Record Invalid",
                      "detail": [
                        "Body is too long (maximum is 10000 characters)"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/parameter_posts_create"
              }
            }
          }
        }
      }
    },
    "/posts/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "show post",
        "tags": [
          "Posts"
        ],
        "description": "Show post",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "post found",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "41",
                    "type": "post",
                    "attributes": {
                      "body": "Nihil consequatur et. A voluptate aut.",
                      "created_at": "2022-07-24T11:37:12.350Z",
                      "updated_at": "2022-07-24T11:37:12.363Z",
                      "comments_count": 0,
                      "likes_count": 1,
                      "dislikes_count": 0,
                      "score": 1,
                      "tag_list": []
                    },
                    "relationships": {
                      "user": {
                        "data": {
                          "id": "107",
                          "type": "user"
                        }
                      }
                    },
                    "meta": {
                      "my_rate": 1
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_posts_show"
                }
              }
            }
          },
          "404": {
            "description": "post not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "not_found",
                      "status": "404",
                      "title": "Not Found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "update post",
        "tags": [
          "Posts"
        ],
        "description": "Show post",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "42",
                    "type": "post",
                    "attributes": {
                      "body": "Earum et delectus. Ullam sapiente deserunt. | updated!",
                      "created_at": "2022-07-24T11:37:12.419Z",
                      "updated_at": "2022-07-24T11:37:12.436Z",
                      "comments_count": 0,
                      "likes_count": 0,
                      "dislikes_count": 0,
                      "score": 0,
                      "tag_list": []
                    },
                    "relationships": {
                      "user": {
                        "data": {
                          "id": "109",
                          "type": "user"
                        }
                      }
                    },
                    "meta": {
                      "my_rate": 0
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_posts_show"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "status": "401",
                      "title": "Unauthorized",
                      "detail": [
                        "You must be logged in"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden user",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "forbidden",
                      "status": "403",
                      "title": "Forbidden",
                      "detail": [
                        "not allowed to update? this Post"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          },
          "404": {
            "description": "post not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "not_found",
                      "status": "404",
                      "title": "Not Found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          },
          "422": {
            "description": "validation error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unprocessable_entity",
                      "status": "422",
                      "title": "Record Invalid",
                      "detail": [
                        "Body is too long (maximum is 10000 characters)"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/parameter_posts_create"
              }
            }
          }
        }
      },
      "put": {
        "summary": "update post",
        "tags": [
          "Posts"
        ],
        "description": "Show post",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "46",
                    "type": "post",
                    "attributes": {
                      "body": "Doloremque temporibus non. Et quasi sint. | updated!",
                      "created_at": "2022-07-24T11:37:12.577Z",
                      "updated_at": "2022-07-24T11:37:12.592Z",
                      "comments_count": 0,
                      "likes_count": 0,
                      "dislikes_count": 0,
                      "score": 0,
                      "tag_list": []
                    },
                    "relationships": {
                      "user": {
                        "data": {
                          "id": "114",
                          "type": "user"
                        }
                      }
                    },
                    "meta": {
                      "my_rate": 0
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_posts_show"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "status": "401",
                      "title": "Unauthorized",
                      "detail": [
                        "You must be logged in"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden user",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "forbidden",
                      "status": "403",
                      "title": "Forbidden",
                      "detail": [
                        "not allowed to update? this Post"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          },
          "404": {
            "description": "post not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "not_found",
                      "status": "404",
                      "title": "Not Found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          },
          "422": {
            "description": "validation error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unprocessable_entity",
                      "status": "422",
                      "title": "Record Invalid",
                      "detail": [
                        "Body is too long (maximum is 10000 characters)"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/parameter_posts_create"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "delete post",
        "tags": [
          "Posts"
        ],
        "description": "Delete post",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "type": "post",
                    "meta": {
                      "message": "Post successfully destroyed"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_posts_destroy"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "status": "401",
                      "title": "Unauthorized",
                      "detail": [
                        "You must be logged in"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          },
          "403": {
            "description": "forbidden user",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "forbidden",
                      "status": "403",
                      "title": "Forbidden",
                      "detail": [
                        "not allowed to destroy? this Post"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          },
          "404": {
            "description": "post not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "not_found",
                      "status": "404",
                      "title": "Not Found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          }
        }
      }
    },
    "/posts/{id}/comments": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "get post comments",
        "tags": [
          "Posts"
        ],
        "description": "Get post comments",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "page[number]",
            "in": "query",
            "description": "Page number",
            "minimum": 1,
            "default": 1,
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Per page",
            "minimum": 1,
            "maximum": 100,
            "default": 20,
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "headers": {
              "Link": {
                "schema": {
                  "type": "string",
                  "example": "<http://localhost:3000/api/v1/users?page%5Bnumber%5D=1&page%5Bsize%5D=5>; rel=\"first\""
                },
                "description": "Links to another pages"
              },
              "X-Total-Pages": {
                "schema": {
                  "type": "integer",
                  "example": 10,
                  "minimum": 1,
                  "maximum": 100
                },
                "description": "The total number of pages of the resource"
              },
              "Per-Page": {
                "schema": {
                  "type": "integer",
                  "example": 4
                },
                "description": "Resource entries per page"
              },
              "Current-Page": {
                "schema": {
                  "type": "integer",
                  "example": 1
                },
                "description": "Current page"
              },
              "X-Total-Count": {
                "schema": {
                  "type": "integer",
                  "example": 2
                },
                "description": "The total number of the resource"
              },
              "Content-Range": {
                "schema": {
                  "type": "string",
                  "example": "items 11-15/100"
                },
                "description": "items from-to/count"
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "14",
                      "type": "comment",
                      "attributes": {
                        "body": "comment0",
                        "user_id": 123,
                        "commentable_id": 53,
                        "commentable_type": "Post",
                        "created_at": "2022-07-24T11:37:12.856Z",
                        "edited_at": null,
                        "edited": false,
                        "likes_count": 0,
                        "dislikes_count": 0,
                        "score": 0
                      },
                      "meta": {
                        "my_rate": 0
                      }
                    },
                    {
                      "id": "15",
                      "type": "comment",
                      "attributes": {
                        "body": "comment1",
                        "user_id": 123,
                        "commentable_id": 53,
                        "commentable_type": "Post",
                        "created_at": "2022-07-24T11:37:12.863Z",
                        "edited_at": null,
                        "edited": false,
                        "likes_count": 0,
                        "dislikes_count": 0,
                        "score": 0
                      },
                      "meta": {
                        "my_rate": 0
                      }
                    },
                    {
                      "id": "16",
                      "type": "comment",
                      "attributes": {
                        "body": "comment2",
                        "user_id": 123,
                        "commentable_id": 53,
                        "commentable_type": "Post",
                        "created_at": "2022-07-24T11:37:12.869Z",
                        "edited_at": null,
                        "edited": false,
                        "likes_count": 0,
                        "dislikes_count": 0,
                        "score": 0
                      },
                      "meta": {
                        "my_rate": 0
                      }
                    },
                    {
                      "id": "17",
                      "type": "comment",
                      "attributes": {
                        "body": "comment3",
                        "user_id": 123,
                        "commentable_id": 53,
                        "commentable_type": "Post",
                        "created_at": "2022-07-24T11:37:12.876Z",
                        "edited_at": null,
                        "edited": false,
                        "likes_count": 0,
                        "dislikes_count": 0,
                        "score": 0
                      },
                      "meta": {
                        "my_rate": 0
                      }
                    },
                    {
                      "id": "18",
                      "type": "comment",
                      "attributes": {
                        "body": "comment4",
                        "user_id": 123,
                        "commentable_id": 53,
                        "commentable_type": "Post",
                        "created_at": "2022-07-24T11:37:12.883Z",
                        "edited_at": null,
                        "edited": false,
                        "likes_count": 0,
                        "dislikes_count": 0,
                        "score": 0
                      },
                      "meta": {
                        "my_rate": 0
                      }
                    }
                  ],
                  "links": {
                    "first": "/api/v1/posts/53/comments?page%5Bnumber%5D=1",
                    "self": "/api/v1/posts/53/comments?page%5Bnumber%5D=1",
                    "last": "/api/v1/posts/53/comments?page%5Bnumber%5D=1"
                  },
                  "meta": {
                    "total": 5,
                    "pages": 1,
                    "current_page": 1,
                    "per_page": 20,
                    "from": 1,
                    "to": 5
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_posts_comment"
                }
              }
            }
          },
          "400": {
            "description": "invalid pagination",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "bad_request",
                      "status": "400",
                      "title": "Invalid Parameter",
                      "detail": [
                        "page[number] must be a positive integer; got -1"
                      ],
                      "source": {
                        "parameter": "page[number]"
                      }
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/pagination_error"
                }
              }
            }
          },
          "404": {
            "description": "post not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "not_found",
                      "status": "404",
                      "title": "Not Found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          }
        }
      }
    },
    "/posts/{id}/tags": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "get post tags",
        "tags": [
          "Posts"
        ],
        "description": "Get post tags",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "page[number]",
            "in": "query",
            "description": "Page number",
            "minimum": 1,
            "default": 1,
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Per page",
            "minimum": 1,
            "maximum": 100,
            "default": 20,
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "headers": {
              "Link": {
                "schema": {
                  "type": "string",
                  "example": "<http://localhost:3000/api/v1/users?page%5Bnumber%5D=1&page%5Bsize%5D=5>; rel=\"first\""
                },
                "description": "Links to another pages"
              },
              "X-Total-Pages": {
                "schema": {
                  "type": "integer",
                  "example": 10,
                  "minimum": 1,
                  "maximum": 100
                },
                "description": "The total number of pages of the resource"
              },
              "Per-Page": {
                "schema": {
                  "type": "integer",
                  "example": 4
                },
                "description": "Resource entries per page"
              },
              "Current-Page": {
                "schema": {
                  "type": "integer",
                  "example": 1
                },
                "description": "Current page"
              },
              "X-Total-Count": {
                "schema": {
                  "type": "integer",
                  "example": 2
                },
                "description": "The total number of the resource"
              },
              "Content-Range": {
                "schema": {
                  "type": "string",
                  "example": "items 11-15/100"
                },
                "description": "items from-to/count"
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "5",
                      "type": "tag",
                      "attributes": {
                        "name": "everyone",
                        "created_at": "2022-07-24T11:37:12.963Z",
                        "updated_at": "2022-07-24T11:37:12.963Z",
                        "followers_count": 0,
                        "taggings_count": 1
                      },
                      "meta": {
                        "am_i_follow": false
                      }
                    },
                    {
                      "id": "4",
                      "type": "tag",
                      "attributes": {
                        "name": "hello",
                        "created_at": "2022-07-24T11:37:12.963Z",
                        "updated_at": "2022-07-24T11:37:12.963Z",
                        "followers_count": 0,
                        "taggings_count": 1
                      },
                      "meta": {
                        "am_i_follow": false
                      }
                    }
                  ],
                  "links": {
                    "first": "/api/v1/posts/55/tags?page%5Bnumber%5D=1",
                    "self": "/api/v1/posts/55/tags?page%5Bnumber%5D=1",
                    "last": "/api/v1/posts/55/tags?page%5Bnumber%5D=1"
                  },
                  "meta": {
                    "total": 2,
                    "pages": 1,
                    "current_page": 1,
                    "per_page": 20,
                    "from": 1,
                    "to": 2
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_tags_index"
                }
              }
            }
          },
          "400": {
            "description": "invalid pagination",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "bad_request",
                      "status": "400",
                      "title": "Invalid Parameter",
                      "detail": [
                        "page[number] must be a positive integer; got -1"
                      ],
                      "source": {
                        "parameter": "page[number]"
                      }
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/pagination_error"
                }
              }
            }
          },
          "404": {
            "description": "post not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "not_found",
                      "status": "404",
                      "title": "Not Found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          }
        }
      }
    },
    "/posts/search": {
      "get": {
        "summary": "search posts",
        "tags": [
          "Posts"
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[number]",
            "in": "query",
            "description": "Page number",
            "minimum": 1,
            "default": 1,
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Per page",
            "minimum": 1,
            "maximum": 100,
            "default": 20,
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "headers": {
              "Link": {
                "schema": {
                  "type": "string",
                  "example": "<http://localhost:3000/api/v1/users?page%5Bnumber%5D=1&page%5Bsize%5D=5>; rel=\"first\""
                },
                "description": "Links to another pages"
              },
              "X-Total-Pages": {
                "schema": {
                  "type": "integer",
                  "example": 10,
                  "minimum": 1,
                  "maximum": 100
                },
                "description": "The total number of pages of the resource"
              },
              "Per-Page": {
                "schema": {
                  "type": "integer",
                  "example": 4
                },
                "description": "Resource entries per page"
              },
              "Current-Page": {
                "schema": {
                  "type": "integer",
                  "example": 1
                },
                "description": "Current page"
              },
              "X-Total-Count": {
                "schema": {
                  "type": "integer",
                  "example": 2
                },
                "description": "The total number of the resource"
              },
              "Content-Range": {
                "schema": {
                  "type": "string",
                  "example": "items 11-15/100"
                },
                "description": "items from-to/count"
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "60",
                      "type": "post",
                      "attributes": {
                        "body": "POST!",
                        "created_at": "2022-07-24T11:37:13.323Z",
                        "updated_at": "2022-07-24T11:37:13.323Z",
                        "comments_count": 0,
                        "likes_count": 0,
                        "dislikes_count": 0,
                        "score": 0,
                        "tag_list": []
                      },
                      "relationships": {
                        "user": {
                          "data": {
                            "id": "132",
                            "type": "user"
                          }
                        }
                      },
                      "meta": {
                        "my_rate": 0
                      }
                    },
                    {
                      "id": "58",
                      "type": "post",
                      "attributes": {
                        "body": "#wow, super post",
                        "created_at": "2022-07-24T11:37:13.270Z",
                        "updated_at": "2022-07-24T11:37:13.270Z",
                        "comments_count": 0,
                        "likes_count": 0,
                        "dislikes_count": 0,
                        "score": 0,
                        "tag_list": [
                          "wow"
                        ]
                      },
                      "relationships": {
                        "user": {
                          "data": {
                            "id": "130",
                            "type": "user"
                          }
                        }
                      },
                      "meta": {
                        "my_rate": 0
                      }
                    }
                  ],
                  "links": {
                    "first": "/api/v1/posts/search?page%5Bnumber%5D=1&q=post",
                    "self": "/api/v1/posts/search?page%5Bnumber%5D=1&q=post",
                    "last": "/api/v1/posts/search?page%5Bnumber%5D=1&q=post"
                  },
                  "meta": {
                    "total": 2,
                    "pages": 1,
                    "current_page": 1,
                    "per_page": 20,
                    "from": 1,
                    "to": 2
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_posts_index"
                }
              }
            }
          },
          "400": {
            "description": "invalid pagination",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "bad_request",
                      "status": "400",
                      "title": "Invalid Parameter",
                      "detail": [
                        "page[number] must be a positive integer; got -1"
                      ],
                      "source": {
                        "parameter": "page[number]"
                      }
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/pagination_error"
                }
              }
            }
          }
        }
      }
    },
    "/posts/{id}/comments/search": {
      "get": {
        "summary": "search posts",
        "tags": [
          "Posts"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[number]",
            "in": "query",
            "description": "Page number",
            "minimum": 1,
            "default": 1,
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Per page",
            "minimum": 1,
            "maximum": 100,
            "default": 20,
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "headers": {
              "Link": {
                "schema": {
                  "type": "string",
                  "example": "<http://localhost:3000/api/v1/users?page%5Bnumber%5D=1&page%5Bsize%5D=5>; rel=\"first\""
                },
                "description": "Links to another pages"
              },
              "X-Total-Pages": {
                "schema": {
                  "type": "integer",
                  "example": 10,
                  "minimum": 1,
                  "maximum": 100
                },
                "description": "The total number of pages of the resource"
              },
              "Per-Page": {
                "schema": {
                  "type": "integer",
                  "example": 4
                },
                "description": "Resource entries per page"
              },
              "Current-Page": {
                "schema": {
                  "type": "integer",
                  "example": 1
                },
                "description": "Current page"
              },
              "X-Total-Count": {
                "schema": {
                  "type": "integer",
                  "example": 2
                },
                "description": "The total number of the resource"
              },
              "Content-Range": {
                "schema": {
                  "type": "string",
                  "example": "items 11-15/100"
                },
                "description": "items from-to/count"
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "19",
                      "type": "comment",
                      "attributes": {
                        "body": "Hello, i love comments",
                        "user_id": 140,
                        "commentable_id": 65,
                        "commentable_type": "Post",
                        "created_at": "2022-07-24T11:37:14.359Z",
                        "edited_at": null,
                        "edited": false,
                        "likes_count": 0,
                        "dislikes_count": 0,
                        "score": 0
                      },
                      "meta": {
                        "my_rate": 0
                      }
                    },
                    {
                      "id": "20",
                      "type": "comment",
                      "attributes": {
                        "body": "#my #super #comment",
                        "user_id": 140,
                        "commentable_id": 65,
                        "commentable_type": "Post",
                        "created_at": "2022-07-24T11:37:14.393Z",
                        "edited_at": null,
                        "edited": false,
                        "likes_count": 0,
                        "dislikes_count": 0,
                        "score": 0
                      },
                      "meta": {
                        "my_rate": 0
                      }
                    }
                  ],
                  "links": {
                    "first": "/api/v1/posts/65/comments/search?page%5Bnumber%5D=1&q=comment",
                    "self": "/api/v1/posts/65/comments/search?page%5Bnumber%5D=1&q=comment",
                    "last": "/api/v1/posts/65/comments/search?page%5Bnumber%5D=1&q=comment"
                  },
                  "meta": {
                    "total": 2,
                    "pages": 1,
                    "current_page": 1,
                    "per_page": 20,
                    "from": 1,
                    "to": 2
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_comments_index"
                }
              }
            }
          },
          "400": {
            "description": "invalid pagination",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "bad_request",
                      "status": "400",
                      "title": "Invalid Parameter",
                      "detail": [
                        "page[number] must be a positive integer; got -1"
                      ],
                      "source": {
                        "parameter": "page[number]"
                      }
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/pagination_error"
                }
              }
            }
          },
          "404": {
            "description": "post not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "not_found",
                      "status": "404",
                      "title": "Not Found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          }
        }
      }
    },
    "/tags": {
      "get": {
        "summary": "list tags",
        "tags": [
          "Tags"
        ],
        "description": "Get tags",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "page[number]",
            "in": "query",
            "description": "Page number",
            "minimum": 1,
            "default": 1,
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Per page",
            "minimum": 1,
            "maximum": 100,
            "default": 20,
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort by (body, -body, updated_at, -updated_at, followers_count, -followers_count, taggings_count, -taggings_count)",
            "default": "-updated_at",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[name]",
            "in": "query",
            "description": "Filter by name contains",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[updated_at[before]]",
            "in": "query",
            "description": "Filter by updated before date",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[updated_at[after]]",
            "in": "query",
            "description": "Filter by updated after date",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "headers": {
              "Link": {
                "schema": {
                  "type": "string",
                  "example": "<http://localhost:3000/api/v1/users?page%5Bnumber%5D=1&page%5Bsize%5D=5>; rel=\"first\""
                },
                "description": "Links to another pages"
              },
              "X-Total-Pages": {
                "schema": {
                  "type": "integer",
                  "example": 10,
                  "minimum": 1,
                  "maximum": 100
                },
                "description": "The total number of pages of the resource"
              },
              "Per-Page": {
                "schema": {
                  "type": "integer",
                  "example": 4
                },
                "description": "Resource entries per page"
              },
              "Current-Page": {
                "schema": {
                  "type": "integer",
                  "example": 1
                },
                "description": "Current page"
              },
              "X-Total-Count": {
                "schema": {
                  "type": "integer",
                  "example": 2
                },
                "description": "The total number of the resource"
              },
              "Content-Range": {
                "schema": {
                  "type": "string",
                  "example": "items 11-15/100"
                },
                "description": "items from-to/count"
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "10",
                      "type": "tag",
                      "attributes": {
                        "name": "followy",
                        "created_at": "2022-07-24T11:37:16.333Z",
                        "updated_at": "2022-07-24T11:37:16.333Z",
                        "followers_count": 0,
                        "taggings_count": 1
                      },
                      "meta": {
                        "am_i_follow": false
                      }
                    },
                    {
                      "id": "9",
                      "type": "tag",
                      "attributes": {
                        "name": "anothertag",
                        "created_at": "2022-07-24T11:37:16.333Z",
                        "updated_at": "2022-07-24T11:37:16.333Z",
                        "followers_count": 0,
                        "taggings_count": 1
                      },
                      "meta": {
                        "am_i_follow": false
                      }
                    },
                    {
                      "id": "8",
                      "type": "tag",
                      "attributes": {
                        "name": "tag",
                        "created_at": "2022-07-24T11:37:16.332Z",
                        "updated_at": "2022-07-24T11:37:16.332Z",
                        "followers_count": 0,
                        "taggings_count": 1
                      },
                      "meta": {
                        "am_i_follow": false
                      }
                    }
                  ],
                  "links": {
                    "first": "/api/v1/tags?page%5Bnumber%5D=1",
                    "self": "/api/v1/tags?page%5Bnumber%5D=1",
                    "last": "/api/v1/tags?page%5Bnumber%5D=1"
                  },
                  "meta": {
                    "total": 3,
                    "pages": 1,
                    "current_page": 1,
                    "per_page": 20,
                    "from": 1,
                    "to": 3
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_tags_index"
                }
              }
            }
          },
          "400": {
            "description": "invalid pagination",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "bad_request",
                      "status": "400",
                      "title": "Invalid Parameter",
                      "detail": [
                        "page[number] must be a positive integer; got -1"
                      ],
                      "source": {
                        "parameter": "page[number]"
                      }
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/pagination_error"
                }
              }
            }
          }
        }
      }
    },
    "/tags/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "show tag",
        "tags": [
          "Tags"
        ],
        "description": "Finds tag by name",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "tag found",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "11",
                    "type": "tag",
                    "attributes": {
                      "name": "tag",
                      "created_at": "2022-07-24T11:37:16.418Z",
                      "updated_at": "2022-07-24T11:37:16.418Z",
                      "followers_count": 0,
                      "taggings_count": 1
                    },
                    "meta": {
                      "am_i_follow": false
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_tags_show"
                }
              }
            }
          },
          "404": {
            "description": "tag not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "not_found",
                      "status": "404",
                      "title": "Not Found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          }
        }
      }
    },
    "/tags/{id}/posts": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "get posts for tag",
        "tags": [
          "Tags"
        ],
        "description": "Get posts by tag",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "page[number]",
            "in": "query",
            "description": "Page number",
            "minimum": 1,
            "default": 1,
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Per page",
            "minimum": 1,
            "maximum": 100,
            "default": 20,
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort by",
            "enum": [
              "body",
              "-body",
              "created_at",
              "-created_at"
            ],
            "example": "-created_at",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[body]",
            "in": "query",
            "description": "Filter by body contains",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[created_at[before]]",
            "in": "query",
            "description": "Filter by created before date",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[created_at[after]]",
            "in": "query",
            "description": "Filter by created after date",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "headers": {
              "Link": {
                "schema": {
                  "type": "string",
                  "example": "<http://localhost:3000/api/v1/users?page%5Bnumber%5D=1&page%5Bsize%5D=5>; rel=\"first\""
                },
                "description": "Links to another pages"
              },
              "X-Total-Pages": {
                "schema": {
                  "type": "integer",
                  "example": 10,
                  "minimum": 1,
                  "maximum": 100
                },
                "description": "The total number of pages of the resource"
              },
              "Per-Page": {
                "schema": {
                  "type": "integer",
                  "example": 4
                },
                "description": "Resource entries per page"
              },
              "Current-Page": {
                "schema": {
                  "type": "integer",
                  "example": 1
                },
                "description": "Current page"
              },
              "X-Total-Count": {
                "schema": {
                  "type": "integer",
                  "example": 2
                },
                "description": "The total number of the resource"
              },
              "Content-Range": {
                "schema": {
                  "type": "string",
                  "example": "items 11-15/100"
                },
                "description": "items from-to/count"
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "71",
                      "type": "post",
                      "attributes": {
                        "body": "Another post for #tag",
                        "created_at": "2022-07-24T11:37:16.534Z",
                        "updated_at": "2022-07-24T11:37:16.534Z",
                        "comments_count": 0,
                        "likes_count": 0,
                        "dislikes_count": 0,
                        "score": 0,
                        "tag_list": [
                          "tag"
                        ]
                      },
                      "relationships": {
                        "user": {
                          "data": {
                            "id": "155",
                            "type": "user"
                          }
                        }
                      },
                      "meta": {
                        "my_rate": 0
                      }
                    },
                    {
                      "id": "70",
                      "type": "post",
                      "attributes": {
                        "body": "My #tag",
                        "created_at": "2022-07-24T11:37:16.504Z",
                        "updated_at": "2022-07-24T11:37:16.504Z",
                        "comments_count": 0,
                        "likes_count": 0,
                        "dislikes_count": 0,
                        "score": 0,
                        "tag_list": [
                          "tag"
                        ]
                      },
                      "relationships": {
                        "user": {
                          "data": {
                            "id": "154",
                            "type": "user"
                          }
                        }
                      },
                      "meta": {
                        "my_rate": 0
                      }
                    }
                  ],
                  "links": {
                    "first": "/api/v1/tags/tag/posts?page%5Bnumber%5D=1",
                    "self": "/api/v1/tags/tag/posts?page%5Bnumber%5D=1",
                    "last": "/api/v1/tags/tag/posts?page%5Bnumber%5D=1"
                  },
                  "meta": {
                    "total": 2,
                    "pages": 1,
                    "current_page": 1,
                    "per_page": 20,
                    "from": 1,
                    "to": 2
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_posts_index"
                }
              }
            }
          },
          "400": {
            "description": "invalid pagination",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "bad_request",
                      "status": "400",
                      "title": "Invalid Parameter",
                      "detail": [
                        "page[number] must be a positive integer; got -1"
                      ],
                      "source": {
                        "parameter": "page[number]"
                      }
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/pagination_error"
                }
              }
            }
          }
        }
      }
    },
    "/tags/{id}/followers": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "tag's followers",
        "tags": [
          "Tags"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "page[number]",
            "in": "query",
            "description": "Page number",
            "minimum": 1,
            "default": 1,
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Per page",
            "minimum": 1,
            "maximum": 100,
            "default": 20,
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort by",
            "enum": [
              "username",
              "-username",
              "email",
              "-email",
              "created_at",
              "-created_at",
              "follow_count",
              "-follow_count",
              "followers_count",
              "-followers_count"
            ],
            "example": "-created_at",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[username]",
            "in": "query",
            "description": "Filter by username contains",
            "example": "username",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[email]",
            "in": "query",
            "description": "Filter by email contains",
            "example": "@gmail",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[created_at[before]]",
            "in": "query",
            "description": "Filter by created before date",
            "example": "2022-04-15",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[created_at[after]]",
            "in": "query",
            "description": "Filter by created after date",
            "example": "2022-04-15",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "headers": {
              "Link": {
                "schema": {
                  "type": "string",
                  "example": "<http://localhost:3000/api/v1/users?page%5Bnumber%5D=1&page%5Bsize%5D=5>; rel=\"first\""
                },
                "description": "Links to another pages"
              },
              "X-Total-Pages": {
                "schema": {
                  "type": "integer",
                  "example": 10,
                  "minimum": 1,
                  "maximum": 100
                },
                "description": "The total number of pages of the resource"
              },
              "Per-Page": {
                "schema": {
                  "type": "integer",
                  "example": 4
                },
                "description": "Resource entries per page"
              },
              "Current-Page": {
                "schema": {
                  "type": "integer",
                  "example": 1
                },
                "description": "Current page"
              },
              "X-Total-Count": {
                "schema": {
                  "type": "integer",
                  "example": 2
                },
                "description": "The total number of the resource"
              },
              "Content-Range": {
                "schema": {
                  "type": "string",
                  "example": "items 11-15/100"
                },
                "description": "items from-to/count"
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "164",
                      "type": "user",
                      "attributes": {
                        "email": "user_114@example.com",
                        "username": "Zeus34348",
                        "bio": null,
                        "blog": null,
                        "location": null,
                        "avatar": {
                          "url": null
                        },
                        "created_at": "2022-07-24T11:37:16.716Z",
                        "updated_at": "2022-07-24T11:37:16.798Z",
                        "comments_count": 0,
                        "posts_count": 0,
                        "followers_count": 0,
                        "follow_count": 1,
                        "following_users_count": 0,
                        "following_tags_count": 1,
                        "last_followed_at": "2022-07-24T11:37:16.798Z",
                        "role": {
                          "name": "user",
                          "value": 0
                        }
                      },
                      "meta": {
                        "am_i_follow": false
                      }
                    },
                    {
                      "id": "163",
                      "type": "user",
                      "attributes": {
                        "email": "user_113@example.com",
                        "username": "Hera27981",
                        "bio": null,
                        "blog": null,
                        "location": null,
                        "avatar": {
                          "url": null
                        },
                        "created_at": "2022-07-24T11:37:16.704Z",
                        "updated_at": "2022-07-24T11:37:16.789Z",
                        "comments_count": 0,
                        "posts_count": 0,
                        "followers_count": 0,
                        "follow_count": 1,
                        "following_users_count": 0,
                        "following_tags_count": 1,
                        "last_followed_at": "2022-07-24T11:37:16.789Z",
                        "role": {
                          "name": "user",
                          "value": 0
                        }
                      },
                      "meta": {
                        "am_i_follow": false
                      }
                    },
                    {
                      "id": "162",
                      "type": "user",
                      "attributes": {
                        "email": "user_112@example.com",
                        "username": "Apollo39826",
                        "bio": null,
                        "blog": null,
                        "location": null,
                        "avatar": {
                          "url": null
                        },
                        "created_at": "2022-07-24T11:37:16.694Z",
                        "updated_at": "2022-07-24T11:37:16.780Z",
                        "comments_count": 0,
                        "posts_count": 0,
                        "followers_count": 0,
                        "follow_count": 1,
                        "following_users_count": 0,
                        "following_tags_count": 1,
                        "last_followed_at": "2022-07-24T11:37:16.780Z",
                        "role": {
                          "name": "user",
                          "value": 0
                        }
                      },
                      "meta": {
                        "am_i_follow": false
                      }
                    },
                    {
                      "id": "161",
                      "type": "user",
                      "attributes": {
                        "email": "user_111@example.com",
                        "username": "Hermes89464",
                        "bio": null,
                        "blog": null,
                        "location": null,
                        "avatar": {
                          "url": null
                        },
                        "created_at": "2022-07-24T11:37:16.684Z",
                        "updated_at": "2022-07-24T11:37:16.769Z",
                        "comments_count": 0,
                        "posts_count": 0,
                        "followers_count": 0,
                        "follow_count": 1,
                        "following_users_count": 0,
                        "following_tags_count": 1,
                        "last_followed_at": "2022-07-24T11:37:16.769Z",
                        "role": {
                          "name": "user",
                          "value": 0
                        }
                      },
                      "meta": {
                        "am_i_follow": false
                      }
                    },
                    {
                      "id": "160",
                      "type": "user",
                      "attributes": {
                        "email": "user_110@example.com",
                        "username": "Aphrodite32954",
                        "bio": null,
                        "blog": null,
                        "location": null,
                        "avatar": {
                          "url": null
                        },
                        "created_at": "2022-07-24T11:37:16.672Z",
                        "updated_at": "2022-07-24T11:37:16.757Z",
                        "comments_count": 0,
                        "posts_count": 0,
                        "followers_count": 0,
                        "follow_count": 1,
                        "following_users_count": 0,
                        "following_tags_count": 1,
                        "last_followed_at": "2022-07-24T11:37:16.757Z",
                        "role": {
                          "name": "user",
                          "value": 0
                        }
                      },
                      "meta": {
                        "am_i_follow": false
                      }
                    }
                  ],
                  "links": {
                    "first": "/api/v1/tags/tag/followers?page%5Bnumber%5D=1",
                    "self": "/api/v1/tags/tag/followers?page%5Bnumber%5D=1",
                    "last": "/api/v1/tags/tag/followers?page%5Bnumber%5D=1"
                  },
                  "meta": {
                    "total": 5,
                    "pages": 1,
                    "current_page": 1,
                    "per_page": 20,
                    "from": 1,
                    "to": 5
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_users_index"
                }
              }
            }
          },
          "400": {
            "description": "invalid pagination",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "bad_request",
                      "status": "400",
                      "title": "Invalid Parameter",
                      "detail": [
                        "page[number] must be a positive integer; got -1"
                      ],
                      "source": {
                        "parameter": "page[number]"
                      }
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/pagination_error"
                }
              }
            }
          }
        }
      }
    },
    "/tags/search": {
      "get": {
        "summary": "search tags",
        "tags": [
          "Tags"
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[number]",
            "in": "query",
            "description": "Page number",
            "minimum": 1,
            "default": 1,
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Per page",
            "minimum": 1,
            "maximum": 100,
            "default": 20,
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "headers": {
              "Link": {
                "schema": {
                  "type": "string",
                  "example": "<http://localhost:3000/api/v1/users?page%5Bnumber%5D=1&page%5Bsize%5D=5>; rel=\"first\""
                },
                "description": "Links to another pages"
              },
              "X-Total-Pages": {
                "schema": {
                  "type": "integer",
                  "example": 10,
                  "minimum": 1,
                  "maximum": 100
                },
                "description": "The total number of pages of the resource"
              },
              "Per-Page": {
                "schema": {
                  "type": "integer",
                  "example": 4
                },
                "description": "Resource entries per page"
              },
              "Current-Page": {
                "schema": {
                  "type": "integer",
                  "example": 1
                },
                "description": "Current page"
              },
              "X-Total-Count": {
                "schema": {
                  "type": "integer",
                  "example": 2
                },
                "description": "The total number of the resource"
              },
              "Content-Range": {
                "schema": {
                  "type": "string",
                  "example": "items 11-15/100"
                },
                "description": "items from-to/count"
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "21",
                      "type": "tag",
                      "attributes": {
                        "name": "tagging",
                        "created_at": "2022-07-24T11:37:17.208Z",
                        "updated_at": "2022-07-24T11:37:17.208Z",
                        "followers_count": 0,
                        "taggings_count": 1
                      },
                      "meta": {
                        "am_i_follow": false
                      }
                    },
                    {
                      "id": "20",
                      "type": "tag",
                      "attributes": {
                        "name": "tags",
                        "created_at": "2022-07-24T11:37:17.148Z",
                        "updated_at": "2022-07-24T11:37:17.148Z",
                        "followers_count": 0,
                        "taggings_count": 1
                      },
                      "meta": {
                        "am_i_follow": false
                      }
                    }
                  ],
                  "links": {
                    "first": "/api/v1/tags/search?page%5Bnumber%5D=1&q=tag",
                    "self": "/api/v1/tags/search?page%5Bnumber%5D=1&q=tag",
                    "last": "/api/v1/tags/search?page%5Bnumber%5D=1&q=tag"
                  },
                  "meta": {
                    "total": 2,
                    "pages": 1,
                    "current_page": 1,
                    "per_page": 20,
                    "from": 1,
                    "to": 2
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_tags_index"
                }
              }
            }
          },
          "400": {
            "description": "invalid pagination",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "bad_request",
                      "status": "400",
                      "title": "Invalid Parameter",
                      "detail": [
                        "page[number] must be a positive integer; got -1"
                      ],
                      "source": {
                        "parameter": "page[number]"
                      }
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/pagination_error"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "list users",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "page[number]",
            "in": "query",
            "description": "Page number",
            "minimum": 1,
            "default": 1,
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Per page",
            "minimum": 1,
            "maximum": 100,
            "default": 20,
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort by",
            "enum": [
              "username",
              "-username",
              "email",
              "-email",
              "created_at",
              "-created_at",
              "follow_count",
              "-follow_count",
              "followers_count",
              "-followers_count"
            ],
            "example": "-created_at",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[username]",
            "in": "query",
            "description": "Filter by username contains",
            "example": "username",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[email]",
            "in": "query",
            "description": "Filter by email contains",
            "example": "@gmail",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[created_at[before]]",
            "in": "query",
            "description": "Filter by created before date",
            "example": "2022-04-15",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[created_at[after]]",
            "in": "query",
            "description": "Filter by created after date",
            "example": "2022-04-15",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "headers": {
              "Link": {
                "schema": {
                  "type": "string",
                  "example": "<http://localhost:3000/api/v1/users?page%5Bnumber%5D=1&page%5Bsize%5D=5>; rel=\"first\""
                },
                "description": "Links to another pages"
              },
              "X-Total-Pages": {
                "schema": {
                  "type": "integer",
                  "example": 10,
                  "minimum": 1,
                  "maximum": 100
                },
                "description": "The total number of pages of the resource"
              },
              "Per-Page": {
                "schema": {
                  "type": "integer",
                  "example": 4
                },
                "description": "Resource entries per page"
              },
              "Current-Page": {
                "schema": {
                  "type": "integer",
                  "example": 1
                },
                "description": "Current page"
              },
              "X-Total-Count": {
                "schema": {
                  "type": "integer",
                  "example": 2
                },
                "description": "The total number of the resource"
              },
              "Content-Range": {
                "schema": {
                  "type": "string",
                  "example": "items 11-15/100"
                },
                "description": "items from-to/count"
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "182",
                      "type": "user",
                      "attributes": {
                        "email": "user_132@example.com",
                        "username": "Poseidon52204",
                        "bio": null,
                        "blog": null,
                        "location": null,
                        "avatar": {
                          "url": null
                        },
                        "created_at": "2022-07-24T11:37:17.921Z",
                        "updated_at": "2022-07-24T11:37:17.921Z",
                        "comments_count": 0,
                        "posts_count": 0,
                        "followers_count": 0,
                        "follow_count": 0,
                        "following_users_count": 0,
                        "following_tags_count": 0,
                        "last_followed_at": null,
                        "role": {
                          "name": "unconfirmed",
                          "value": -30
                        }
                      },
                      "meta": {
                        "am_i_follow": false
                      }
                    },
                    {
                      "id": "181",
                      "type": "user",
                      "attributes": {
                        "email": "user_131@example.com",
                        "username": "Dionysus15525",
                        "bio": null,
                        "blog": null,
                        "location": null,
                        "avatar": {
                          "url": null
                        },
                        "created_at": "2022-07-24T11:37:17.911Z",
                        "updated_at": "2022-07-24T11:37:17.911Z",
                        "comments_count": 0,
                        "posts_count": 0,
                        "followers_count": 0,
                        "follow_count": 0,
                        "following_users_count": 0,
                        "following_tags_count": 0,
                        "last_followed_at": null,
                        "role": {
                          "name": "user",
                          "value": 0
                        }
                      },
                      "meta": {
                        "am_i_follow": false
                      }
                    },
                    {
                      "id": "180",
                      "type": "user",
                      "attributes": {
                        "email": "user_130@example.com",
                        "username": "Athena82823",
                        "bio": null,
                        "blog": null,
                        "location": null,
                        "avatar": {
                          "url": null
                        },
                        "created_at": "2022-07-24T11:37:17.899Z",
                        "updated_at": "2022-07-24T11:37:17.899Z",
                        "comments_count": 0,
                        "posts_count": 0,
                        "followers_count": 0,
                        "follow_count": 0,
                        "following_users_count": 0,
                        "following_tags_count": 0,
                        "last_followed_at": null,
                        "role": {
                          "name": "user",
                          "value": 0
                        }
                      },
                      "meta": {
                        "am_i_follow": false
                      }
                    }
                  ],
                  "links": {
                    "first": "/api/v1/users?page%5Bnumber%5D=1",
                    "self": "/api/v1/users?page%5Bnumber%5D=1",
                    "last": "/api/v1/users?page%5Bnumber%5D=1"
                  },
                  "meta": {
                    "total": 3,
                    "pages": 1,
                    "current_page": 1,
                    "per_page": 20,
                    "from": 1,
                    "to": 3
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_users_index"
                }
              }
            }
          },
          "400": {
            "description": "invalid pagination",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "bad_request",
                      "status": "400",
                      "title": "Invalid Parameter",
                      "detail": [
                        "page[number] must be a positive integer; got -1"
                      ],
                      "source": {
                        "parameter": "page[number]"
                      }
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/pagination_error"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Retrieves a user",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "user found",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "184",
                    "type": "user",
                    "attributes": {
                      "email": "user_134@example.com",
                      "username": "Apollo76451",
                      "bio": null,
                      "blog": null,
                      "location": null,
                      "avatar": {
                        "url": null
                      },
                      "created_at": "2022-07-24T11:37:17.966Z",
                      "updated_at": "2022-07-24T11:37:17.966Z",
                      "comments_count": 0,
                      "posts_count": 0,
                      "followers_count": 0,
                      "follow_count": 0,
                      "following_users_count": 0,
                      "following_tags_count": 0,
                      "last_followed_at": null,
                      "role": {
                        "name": "user",
                        "value": 0
                      }
                    },
                    "meta": {
                      "am_i_follow": false
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_users_show"
                }
              }
            }
          },
          "404": {
            "description": "user not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "not_found",
                      "status": "404",
                      "title": "Not Found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_users_show404"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Updates a user",
        "tags": [
          "Users"
        ],
        "description": "Updates a user",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "user data updated",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "187",
                    "type": "user",
                    "attributes": {
                      "email": "user_137@example.com",
                      "username": "NewGreatUsername1",
                      "bio": null,
                      "blog": null,
                      "location": null,
                      "avatar": {
                        "url": null
                      },
                      "created_at": "2022-07-24T11:37:18.015Z",
                      "updated_at": "2022-07-24T11:37:18.030Z",
                      "comments_count": 0,
                      "posts_count": 0,
                      "followers_count": 0,
                      "follow_count": 0,
                      "following_users_count": 0,
                      "following_tags_count": 0,
                      "last_followed_at": null,
                      "role": {
                        "name": "user",
                        "value": 0
                      }
                    },
                    "meta": {
                      "am_i_follow": false
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_users_show"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "status": "401",
                      "title": "Unauthorized",
                      "detail": [
                        "You must be logged in"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/you_must_be_logged_in"
                }
              }
            }
          },
          "403": {
            "description": "Not enough permissions",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "forbidden",
                      "status": "403",
                      "title": "Forbidden",
                      "detail": [
                        "No such role: 50. Roles: unconfirmed, banned, warned, user, premium, primary, owner, moderator, admin, dev, User must be at least a moderator, You cant update your own role, and You cant assign role higher then yours"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          },
          "404": {
            "description": "user not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "not_found",
                      "status": "404",
                      "title": "Not Found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_users_show404"
                }
              }
            }
          },
          "422": {
            "description": "unprocessable entity",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unprocessable_entity",
                      "status": "422",
                      "title": "Record Invalid",
                      "detail": [
                        "Username is invalid"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/record_is_invalid"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/parameter_users_update"
              }
            }
          }
        }
      },
      "put": {
        "summary": "Updates a user",
        "tags": [
          "Users"
        ],
        "description": "Updates a user",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "user data updated",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "192",
                    "type": "user",
                    "attributes": {
                      "email": "user_142@example.com",
                      "username": "NewGreatUsername1",
                      "bio": null,
                      "blog": null,
                      "location": null,
                      "avatar": {
                        "url": null
                      },
                      "created_at": "2022-07-24T11:37:18.123Z",
                      "updated_at": "2022-07-24T11:37:18.137Z",
                      "comments_count": 0,
                      "posts_count": 0,
                      "followers_count": 0,
                      "follow_count": 0,
                      "following_users_count": 0,
                      "following_tags_count": 0,
                      "last_followed_at": null,
                      "role": {
                        "name": "user",
                        "value": 0
                      }
                    },
                    "meta": {
                      "am_i_follow": false
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_users_show"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "status": "401",
                      "title": "Unauthorized",
                      "detail": [
                        "You must be logged in"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/you_must_be_logged_in"
                }
              }
            }
          },
          "403": {
            "description": "Not enough permissions",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "forbidden",
                      "status": "403",
                      "title": "Forbidden",
                      "detail": [
                        "No such role: 50. Roles: unconfirmed, banned, warned, user, premium, primary, owner, moderator, admin, dev, User must be at least a moderator, You cant update your own role, and You cant assign role higher then yours"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          },
          "404": {
            "description": "user not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "not_found",
                      "status": "404",
                      "title": "Not Found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_users_show404"
                }
              }
            }
          },
          "422": {
            "description": "unprocessable entity",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unprocessable_entity",
                      "status": "422",
                      "title": "Record Invalid",
                      "detail": [
                        "Username is invalid"
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/record_is_invalid"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/parameter_users_update"
              }
            }
          }
        }
      }
    },
    "/users/{id}/posts": {
      "get": {
        "summary": "list user posts",
        "tags": [
          "Users"
        ],
        "description": "Get posts",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[number]",
            "in": "query",
            "description": "Page number",
            "minimum": 1,
            "default": 1,
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Per page",
            "minimum": 1,
            "maximum": 100,
            "default": 20,
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort by",
            "enum": [
              "body",
              "-body",
              "created_at",
              "-created_at"
            ],
            "example": "body,-created_at",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[body]",
            "in": "query",
            "description": "Filter by body contains",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[created_at[before]]",
            "in": "query",
            "description": "Filter by created before date",
            "example": "2023-04-15",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[created_at[after]]",
            "in": "query",
            "description": "Filter by created after date",
            "example": "2021-04-15",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "headers": {
              "Link": {
                "schema": {
                  "type": "string",
                  "example": "<http://localhost:3000/api/v1/users?page%5Bnumber%5D=1&page%5Bsize%5D=5>; rel=\"first\""
                },
                "description": "Links to another pages"
              },
              "X-Total-Pages": {
                "schema": {
                  "type": "integer",
                  "example": 10,
                  "minimum": 1,
                  "maximum": 100
                },
                "description": "The total number of pages of the resource"
              },
              "Per-Page": {
                "schema": {
                  "type": "integer",
                  "example": 4
                },
                "description": "Resource entries per page"
              },
              "Current-Page": {
                "schema": {
                  "type": "integer",
                  "example": 1
                },
                "description": "Current page"
              },
              "X-Total-Count": {
                "schema": {
                  "type": "integer",
                  "example": 2
                },
                "description": "The total number of the resource"
              },
              "Content-Range": {
                "schema": {
                  "type": "string",
                  "example": "items 11-15/100"
                },
                "description": "items from-to/count"
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "84",
                      "type": "post",
                      "attributes": {
                        "body": "Porro architecto quam. Blanditiis quas quia.",
                        "created_at": "2022-07-24T11:37:18.330Z",
                        "updated_at": "2022-07-24T11:37:18.349Z",
                        "comments_count": 0,
                        "likes_count": 0,
                        "dislikes_count": 0,
                        "score": 0,
                        "tag_list": []
                      },
                      "relationships": {
                        "user": {
                          "data": {
                            "id": "197",
                            "type": "user"
                          }
                        }
                      },
                      "meta": {
                        "my_rate": 0
                      }
                    },
                    {
                      "id": "83",
                      "type": "post",
                      "attributes": {
                        "body": "Eius harum commodi. Atque sapiente odit.",
                        "created_at": "2022-07-24T11:37:18.311Z",
                        "updated_at": "2022-07-24T11:37:18.347Z",
                        "comments_count": 0,
                        "likes_count": 0,
                        "dislikes_count": 0,
                        "score": 0,
                        "tag_list": []
                      },
                      "relationships": {
                        "user": {
                          "data": {
                            "id": "197",
                            "type": "user"
                          }
                        }
                      },
                      "meta": {
                        "my_rate": 0
                      }
                    },
                    {
                      "id": "82",
                      "type": "post",
                      "attributes": {
                        "body": "Consequatur et in. Officia omnis et.",
                        "created_at": "2022-07-24T11:37:18.291Z",
                        "updated_at": "2022-07-24T11:37:18.344Z",
                        "comments_count": 0,
                        "likes_count": 0,
                        "dislikes_count": 0,
                        "score": 0,
                        "tag_list": []
                      },
                      "relationships": {
                        "user": {
                          "data": {
                            "id": "197",
                            "type": "user"
                          }
                        }
                      },
                      "meta": {
                        "my_rate": 0
                      }
                    },
                    {
                      "id": "81",
                      "type": "post",
                      "attributes": {
                        "body": "Numquam at laborum. Quibusdam occaecati ullam.",
                        "created_at": "2022-07-24T11:37:18.272Z",
                        "updated_at": "2022-07-24T11:37:18.342Z",
                        "comments_count": 0,
                        "likes_count": 0,
                        "dislikes_count": 0,
                        "score": 0,
                        "tag_list": []
                      },
                      "relationships": {
                        "user": {
                          "data": {
                            "id": "197",
                            "type": "user"
                          }
                        }
                      },
                      "meta": {
                        "my_rate": 0
                      }
                    },
                    {
                      "id": "80",
                      "type": "post",
                      "attributes": {
                        "body": "Omnis unde laudantium. Id ullam voluptatum.",
                        "created_at": "2022-07-24T11:37:18.253Z",
                        "updated_at": "2022-07-24T11:37:18.339Z",
                        "comments_count": 0,
                        "likes_count": 0,
                        "dislikes_count": 0,
                        "score": 0,
                        "tag_list": []
                      },
                      "relationships": {
                        "user": {
                          "data": {
                            "id": "197",
                            "type": "user"
                          }
                        }
                      },
                      "meta": {
                        "my_rate": 0
                      }
                    }
                  ],
                  "links": {
                    "first": "/api/v1/users/197/posts?page%5Bnumber%5D=1",
                    "self": "/api/v1/users/197/posts?page%5Bnumber%5D=1",
                    "last": "/api/v1/users/197/posts?page%5Bnumber%5D=1"
                  },
                  "meta": {
                    "total": 5,
                    "pages": 1,
                    "current_page": 1,
                    "per_page": 20,
                    "from": 1,
                    "to": 5
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_posts_index"
                }
              }
            }
          },
          "400": {
            "description": "invalid pagination",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "bad_request",
                      "status": "400",
                      "title": "Invalid Parameter",
                      "detail": [
                        "page[number] must be a positive integer; got -1"
                      ],
                      "source": {
                        "parameter": "page[number]"
                      }
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/pagination_error"
                }
              }
            }
          },
          "404": {
            "description": "user not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "not_found",
                      "status": "404",
                      "title": "Not Found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_users_show404"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}/comments": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "get user comments",
        "tags": [
          "Users"
        ],
        "description": "Get user comments",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "page[number]",
            "in": "query",
            "description": "Page number",
            "minimum": 1,
            "default": 1,
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Per page",
            "minimum": 1,
            "maximum": 100,
            "default": 20,
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "headers": {
              "Link": {
                "schema": {
                  "type": "string",
                  "example": "<http://localhost:3000/api/v1/users?page%5Bnumber%5D=1&page%5Bsize%5D=5>; rel=\"first\""
                },
                "description": "Links to another pages"
              },
              "X-Total-Pages": {
                "schema": {
                  "type": "integer",
                  "example": 10,
                  "minimum": 1,
                  "maximum": 100
                },
                "description": "The total number of pages of the resource"
              },
              "Per-Page": {
                "schema": {
                  "type": "integer",
                  "example": 4
                },
                "description": "Resource entries per page"
              },
              "Current-Page": {
                "schema": {
                  "type": "integer",
                  "example": 1
                },
                "description": "Current page"
              },
              "X-Total-Count": {
                "schema": {
                  "type": "integer",
                  "example": 2
                },
                "description": "The total number of the resource"
              },
              "Content-Range": {
                "schema": {
                  "type": "string",
                  "example": "items 11-15/100"
                },
                "description": "items from-to/count"
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "28",
                      "type": "comment",
                      "attributes": {
                        "body": "comment0",
                        "user_id": 205,
                        "commentable_id": 85,
                        "commentable_type": "Post",
                        "created_at": "2022-07-24T11:37:18.443Z",
                        "edited_at": null,
                        "edited": false,
                        "likes_count": 0,
                        "dislikes_count": 0,
                        "score": 0
                      },
                      "meta": {
                        "my_rate": 0
                      }
                    },
                    {
                      "id": "29",
                      "type": "comment",
                      "attributes": {
                        "body": "comment1",
                        "user_id": 205,
                        "commentable_id": 85,
                        "commentable_type": "Post",
                        "created_at": "2022-07-24T11:37:18.451Z",
                        "edited_at": null,
                        "edited": false,
                        "likes_count": 0,
                        "dislikes_count": 0,
                        "score": 0
                      },
                      "meta": {
                        "my_rate": 0
                      }
                    },
                    {
                      "id": "30",
                      "type": "comment",
                      "attributes": {
                        "body": "comment2",
                        "user_id": 205,
                        "commentable_id": 85,
                        "commentable_type": "Post",
                        "created_at": "2022-07-24T11:37:18.458Z",
                        "edited_at": null,
                        "edited": false,
                        "likes_count": 0,
                        "dislikes_count": 0,
                        "score": 0
                      },
                      "meta": {
                        "my_rate": 0
                      }
                    },
                    {
                      "id": "31",
                      "type": "comment",
                      "attributes": {
                        "body": "comment3",
                        "user_id": 205,
                        "commentable_id": 85,
                        "commentable_type": "Post",
                        "created_at": "2022-07-24T11:37:18.464Z",
                        "edited_at": null,
                        "edited": false,
                        "likes_count": 0,
                        "dislikes_count": 0,
                        "score": 0
                      },
                      "meta": {
                        "my_rate": 0
                      }
                    },
                    {
                      "id": "32",
                      "type": "comment",
                      "attributes": {
                        "body": "comment4",
                        "user_id": 205,
                        "commentable_id": 85,
                        "commentable_type": "Post",
                        "created_at": "2022-07-24T11:37:18.471Z",
                        "edited_at": null,
                        "edited": false,
                        "likes_count": 0,
                        "dislikes_count": 0,
                        "score": 0
                      },
                      "meta": {
                        "my_rate": 0
                      }
                    }
                  ],
                  "links": {
                    "first": "/api/v1/users/205/comments?page%5Bnumber%5D=1",
                    "self": "/api/v1/users/205/comments?page%5Bnumber%5D=1",
                    "last": "/api/v1/users/205/comments?page%5Bnumber%5D=1"
                  },
                  "meta": {
                    "total": 5,
                    "pages": 1,
                    "current_page": 1,
                    "per_page": 20,
                    "from": 1,
                    "to": 5
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_posts_comment"
                }
              }
            }
          },
          "400": {
            "description": "invalid pagination",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "bad_request",
                      "status": "400",
                      "title": "Invalid Parameter",
                      "detail": [
                        "page[number] must be a positive integer; got -1"
                      ],
                      "source": {
                        "parameter": "page[number]"
                      }
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/pagination_error"
                }
              }
            }
          },
          "404": {
            "description": "post not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "not_found",
                      "status": "404",
                      "title": "Not Found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}/followers": {
      "get": {
        "summary": "get user's followers",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[number]",
            "in": "query",
            "description": "Page number",
            "minimum": 1,
            "default": 1,
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Per page",
            "minimum": 1,
            "maximum": 100,
            "default": 20,
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort by",
            "enum": [
              "username",
              "-username",
              "email",
              "-email",
              "created_at",
              "-created_at",
              "follow_count",
              "-follow_count",
              "followers_count",
              "-followers_count"
            ],
            "example": "-created_at",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[username]",
            "in": "query",
            "description": "Filter by username contains",
            "example": "username",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[email]",
            "in": "query",
            "description": "Filter by email contains",
            "example": "@gmail",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[created_at[before]]",
            "in": "query",
            "description": "Filter by created before date",
            "example": "2022-04-15",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[created_at[after]]",
            "in": "query",
            "description": "Filter by created after date",
            "example": "2022-04-15",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "headers": {
              "Link": {
                "schema": {
                  "type": "string",
                  "example": "<http://localhost:3000/api/v1/users?page%5Bnumber%5D=1&page%5Bsize%5D=5>; rel=\"first\""
                },
                "description": "Links to another pages"
              },
              "X-Total-Pages": {
                "schema": {
                  "type": "integer",
                  "example": 10,
                  "minimum": 1,
                  "maximum": 100
                },
                "description": "The total number of pages of the resource"
              },
              "Per-Page": {
                "schema": {
                  "type": "integer",
                  "example": 4
                },
                "description": "Resource entries per page"
              },
              "Current-Page": {
                "schema": {
                  "type": "integer",
                  "example": 1
                },
                "description": "Current page"
              },
              "X-Total-Count": {
                "schema": {
                  "type": "integer",
                  "example": 2
                },
                "description": "The total number of the resource"
              },
              "Content-Range": {
                "schema": {
                  "type": "string",
                  "example": "items 11-15/100"
                },
                "description": "items from-to/count"
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "210",
                      "type": "user",
                      "attributes": {
                        "email": "user_160@example.com",
                        "username": "Hephaestus54982",
                        "bio": null,
                        "blog": null,
                        "location": null,
                        "avatar": {
                          "url": null
                        },
                        "created_at": "2022-07-24T11:37:18.566Z",
                        "updated_at": "2022-07-24T11:37:18.601Z",
                        "comments_count": 0,
                        "posts_count": 0,
                        "followers_count": 0,
                        "follow_count": 1,
                        "following_users_count": 1,
                        "following_tags_count": 0,
                        "last_followed_at": "2022-07-24T11:37:18.601Z",
                        "role": {
                          "name": "user",
                          "value": 0
                        }
                      },
                      "meta": {
                        "am_i_follow": false
                      }
                    },
                    {
                      "id": "209",
                      "type": "user",
                      "attributes": {
                        "email": "user_159@example.com",
                        "username": "Dionysus46003",
                        "bio": null,
                        "blog": null,
                        "location": null,
                        "avatar": {
                          "url": null
                        },
                        "created_at": "2022-07-24T11:37:18.557Z",
                        "updated_at": "2022-07-24T11:37:18.592Z",
                        "comments_count": 0,
                        "posts_count": 0,
                        "followers_count": 0,
                        "follow_count": 1,
                        "following_users_count": 1,
                        "following_tags_count": 0,
                        "last_followed_at": "2022-07-24T11:37:18.592Z",
                        "role": {
                          "name": "user",
                          "value": 0
                        }
                      },
                      "meta": {
                        "am_i_follow": false
                      }
                    },
                    {
                      "id": "208",
                      "type": "user",
                      "attributes": {
                        "email": "user_158@example.com",
                        "username": "Hermes27753",
                        "bio": null,
                        "blog": null,
                        "location": null,
                        "avatar": {
                          "url": null
                        },
                        "created_at": "2022-07-24T11:37:18.547Z",
                        "updated_at": "2022-07-24T11:37:18.585Z",
                        "comments_count": 0,
                        "posts_count": 0,
                        "followers_count": 0,
                        "follow_count": 1,
                        "following_users_count": 1,
                        "following_tags_count": 0,
                        "last_followed_at": "2022-07-24T11:37:18.585Z",
                        "role": {
                          "name": "user",
                          "value": 0
                        }
                      },
                      "meta": {
                        "am_i_follow": false
                      }
                    }
                  ],
                  "links": {
                    "first": "/api/v1/users/211/followers?page%5Bnumber%5D=1",
                    "self": "/api/v1/users/211/followers?page%5Bnumber%5D=1",
                    "last": "/api/v1/users/211/followers?page%5Bnumber%5D=1"
                  },
                  "meta": {
                    "total": 3,
                    "pages": 1,
                    "current_page": 1,
                    "per_page": 20,
                    "from": 1,
                    "to": 3
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_users_index"
                }
              }
            }
          },
          "400": {
            "description": "invalid pagination",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "bad_request",
                      "status": "400",
                      "title": "Invalid Parameter",
                      "detail": [
                        "page[number] must be a positive integer; got -1"
                      ],
                      "source": {
                        "parameter": "page[number]"
                      }
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/pagination_error"
                }
              }
            }
          },
          "404": {
            "description": "user not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "not_found",
                      "status": "404",
                      "title": "Not Found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_users_show404"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}/following": {
      "get": {
        "summary": "get user's followings",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[number]",
            "in": "query",
            "description": "Page number",
            "minimum": 1,
            "default": 1,
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Per page",
            "minimum": 1,
            "maximum": 100,
            "default": 20,
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "headers": {
              "Link": {
                "schema": {
                  "type": "string",
                  "example": "<http://localhost:3000/api/v1/users?page%5Bnumber%5D=1&page%5Bsize%5D=5>; rel=\"first\""
                },
                "description": "Links to another pages"
              },
              "X-Total-Pages": {
                "schema": {
                  "type": "integer",
                  "example": 10,
                  "minimum": 1,
                  "maximum": 100
                },
                "description": "The total number of pages of the resource"
              },
              "Per-Page": {
                "schema": {
                  "type": "integer",
                  "example": 4
                },
                "description": "Resource entries per page"
              },
              "Current-Page": {
                "schema": {
                  "type": "integer",
                  "example": 1
                },
                "description": "Current page"
              },
              "X-Total-Count": {
                "schema": {
                  "type": "integer",
                  "example": 2
                },
                "description": "The total number of the resource"
              },
              "Content-Range": {
                "schema": {
                  "type": "string",
                  "example": "items 11-15/100"
                },
                "description": "items from-to/count"
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "28",
                      "type": "tag",
                      "attributes": {
                        "name": "third",
                        "created_at": "2022-07-24T11:37:18.912Z",
                        "updated_at": "2022-07-24T11:37:18.912Z",
                        "followers_count": 1,
                        "taggings_count": 1
                      },
                      "meta": {
                        "followed_at": "2022-07-24T11:37:18.943Z"
                      }
                    },
                    {
                      "id": "27",
                      "type": "tag",
                      "attributes": {
                        "name": "second",
                        "created_at": "2022-07-24T11:37:18.882Z",
                        "updated_at": "2022-07-24T11:37:18.882Z",
                        "followers_count": 1,
                        "taggings_count": 1
                      },
                      "meta": {
                        "followed_at": "2022-07-24T11:37:18.936Z"
                      }
                    },
                    {
                      "id": "26",
                      "type": "tag",
                      "attributes": {
                        "name": "first",
                        "created_at": "2022-07-24T11:37:18.848Z",
                        "updated_at": "2022-07-24T11:37:18.848Z",
                        "followers_count": 1,
                        "taggings_count": 1
                      },
                      "meta": {
                        "followed_at": "2022-07-24T11:37:18.927Z"
                      }
                    },
                    {
                      "id": "222",
                      "type": "user",
                      "attributes": {
                        "email": "user_172@example.com",
                        "username": "Zeus28666",
                        "bio": null,
                        "blog": null,
                        "location": null,
                        "avatar": {
                          "url": null
                        },
                        "created_at": "2022-07-24T11:37:18.794Z",
                        "updated_at": "2022-07-24T11:37:18.794Z",
                        "comments_count": 0,
                        "posts_count": 0,
                        "followers_count": 1,
                        "follow_count": 0,
                        "following_users_count": 0,
                        "following_tags_count": 0,
                        "last_followed_at": null
                      },
                      "meta": {
                        "followed_at": "2022-07-24T11:37:18.827Z"
                      }
                    },
                    {
                      "id": "221",
                      "type": "user",
                      "attributes": {
                        "email": "user_171@example.com",
                        "username": "Dionysus61081",
                        "bio": null,
                        "blog": null,
                        "location": null,
                        "avatar": {
                          "url": null
                        },
                        "created_at": "2022-07-24T11:37:18.783Z",
                        "updated_at": "2022-07-24T11:37:18.783Z",
                        "comments_count": 0,
                        "posts_count": 0,
                        "followers_count": 1,
                        "follow_count": 0,
                        "following_users_count": 0,
                        "following_tags_count": 0,
                        "last_followed_at": null
                      },
                      "meta": {
                        "followed_at": "2022-07-24T11:37:18.820Z"
                      }
                    },
                    {
                      "id": "220",
                      "type": "user",
                      "attributes": {
                        "email": "user_170@example.com",
                        "username": "Aphrodite49079",
                        "bio": null,
                        "blog": null,
                        "location": null,
                        "avatar": {
                          "url": null
                        },
                        "created_at": "2022-07-24T11:37:18.773Z",
                        "updated_at": "2022-07-24T11:37:18.773Z",
                        "comments_count": 0,
                        "posts_count": 0,
                        "followers_count": 1,
                        "follow_count": 0,
                        "following_users_count": 0,
                        "following_tags_count": 0,
                        "last_followed_at": null
                      },
                      "meta": {
                        "followed_at": "2022-07-24T11:37:18.812Z"
                      }
                    }
                  ],
                  "links": {
                    "first": "/api/v1/users/223/following?page%5Bnumber%5D=1",
                    "self": "/api/v1/users/223/following?page%5Bnumber%5D=1",
                    "last": "/api/v1/users/223/following?page%5Bnumber%5D=1"
                  },
                  "meta": {
                    "total": 6,
                    "pages": 1,
                    "current_page": 1,
                    "per_page": 20,
                    "from": 1,
                    "to": 6
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_users_following"
                }
              }
            }
          },
          "400": {
            "description": "invalid pagination",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "bad_request",
                      "status": "400",
                      "title": "Invalid Parameter",
                      "detail": [
                        "page[number] must be a positive integer; got -1"
                      ],
                      "source": {
                        "parameter": "page[number]"
                      }
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/pagination_error"
                }
              }
            }
          },
          "404": {
            "description": "user not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "not_found",
                      "status": "404",
                      "title": "Not Found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_users_show404"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}/following/users": {
      "get": {
        "summary": "get user's followings users",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[number]",
            "in": "query",
            "description": "Page number",
            "minimum": 1,
            "default": 1,
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Per page",
            "minimum": 1,
            "maximum": 100,
            "default": 20,
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "headers": {
              "Link": {
                "schema": {
                  "type": "string",
                  "example": "<http://localhost:3000/api/v1/users?page%5Bnumber%5D=1&page%5Bsize%5D=5>; rel=\"first\""
                },
                "description": "Links to another pages"
              },
              "X-Total-Pages": {
                "schema": {
                  "type": "integer",
                  "example": 10,
                  "minimum": 1,
                  "maximum": 100
                },
                "description": "The total number of pages of the resource"
              },
              "Per-Page": {
                "schema": {
                  "type": "integer",
                  "example": 4
                },
                "description": "Resource entries per page"
              },
              "Current-Page": {
                "schema": {
                  "type": "integer",
                  "example": 1
                },
                "description": "Current page"
              },
              "X-Total-Count": {
                "schema": {
                  "type": "integer",
                  "example": 2
                },
                "description": "The total number of the resource"
              },
              "Content-Range": {
                "schema": {
                  "type": "string",
                  "example": "items 11-15/100"
                },
                "description": "items from-to/count"
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "243",
                      "type": "user",
                      "attributes": {
                        "email": "user_193@example.com",
                        "username": "Hephaestus91256",
                        "bio": null,
                        "blog": null,
                        "location": null,
                        "avatar": {
                          "url": null
                        },
                        "created_at": "2022-07-24T11:37:19.361Z",
                        "updated_at": "2022-07-24T11:37:19.361Z",
                        "comments_count": 0,
                        "posts_count": 0,
                        "followers_count": 1,
                        "follow_count": 0,
                        "following_users_count": 0,
                        "following_tags_count": 0,
                        "last_followed_at": null,
                        "role": {
                          "name": "user",
                          "value": 0
                        }
                      },
                      "meta": {
                        "am_i_follow": true
                      }
                    },
                    {
                      "id": "242",
                      "type": "user",
                      "attributes": {
                        "email": "user_192@example.com",
                        "username": "Apollo73843",
                        "bio": null,
                        "blog": null,
                        "location": null,
                        "avatar": {
                          "url": null
                        },
                        "created_at": "2022-07-24T11:37:19.351Z",
                        "updated_at": "2022-07-24T11:37:19.351Z",
                        "comments_count": 0,
                        "posts_count": 0,
                        "followers_count": 1,
                        "follow_count": 0,
                        "following_users_count": 0,
                        "following_tags_count": 0,
                        "last_followed_at": null,
                        "role": {
                          "name": "user",
                          "value": 0
                        }
                      },
                      "meta": {
                        "am_i_follow": true
                      }
                    },
                    {
                      "id": "241",
                      "type": "user",
                      "attributes": {
                        "email": "user_191@example.com",
                        "username": "Poseidon58625",
                        "bio": null,
                        "blog": null,
                        "location": null,
                        "avatar": {
                          "url": null
                        },
                        "created_at": "2022-07-24T11:37:19.340Z",
                        "updated_at": "2022-07-24T11:37:19.340Z",
                        "comments_count": 0,
                        "posts_count": 0,
                        "followers_count": 1,
                        "follow_count": 0,
                        "following_users_count": 0,
                        "following_tags_count": 0,
                        "last_followed_at": null,
                        "role": {
                          "name": "user",
                          "value": 0
                        }
                      },
                      "meta": {
                        "am_i_follow": true
                      }
                    }
                  ],
                  "links": {
                    "first": "/api/v1/users/244/following/users?page%5Bnumber%5D=1",
                    "self": "/api/v1/users/244/following/users?page%5Bnumber%5D=1",
                    "last": "/api/v1/users/244/following/users?page%5Bnumber%5D=1"
                  },
                  "meta": {
                    "total": 3,
                    "pages": 1,
                    "current_page": 1,
                    "per_page": 20,
                    "from": 1,
                    "to": 3
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_users_following"
                }
              }
            }
          },
          "400": {
            "description": "invalid pagination",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "bad_request",
                      "status": "400",
                      "title": "Invalid Parameter",
                      "detail": [
                        "page[number] must be a positive integer; got -1"
                      ],
                      "source": {
                        "parameter": "page[number]"
                      }
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/pagination_error"
                }
              }
            }
          },
          "404": {
            "description": "user not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "not_found",
                      "status": "404",
                      "title": "Not Found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_users_show404"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}/following/tags": {
      "get": {
        "summary": "get user's followings tags",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[number]",
            "in": "query",
            "description": "Page number",
            "minimum": 1,
            "default": 1,
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Per page",
            "minimum": 1,
            "maximum": 100,
            "default": 20,
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "headers": {
              "Link": {
                "schema": {
                  "type": "string",
                  "example": "<http://localhost:3000/api/v1/users?page%5Bnumber%5D=1&page%5Bsize%5D=5>; rel=\"first\""
                },
                "description": "Links to another pages"
              },
              "X-Total-Pages": {
                "schema": {
                  "type": "integer",
                  "example": 10,
                  "minimum": 1,
                  "maximum": 100
                },
                "description": "The total number of pages of the resource"
              },
              "Per-Page": {
                "schema": {
                  "type": "integer",
                  "example": 4
                },
                "description": "Resource entries per page"
              },
              "Current-Page": {
                "schema": {
                  "type": "integer",
                  "example": 1
                },
                "description": "Current page"
              },
              "X-Total-Count": {
                "schema": {
                  "type": "integer",
                  "example": 2
                },
                "description": "The total number of the resource"
              },
              "Content-Range": {
                "schema": {
                  "type": "string",
                  "example": "items 11-15/100"
                },
                "description": "items from-to/count"
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "46",
                      "type": "tag",
                      "attributes": {
                        "name": "third",
                        "created_at": "2022-07-24T11:37:20.092Z",
                        "updated_at": "2022-07-24T11:37:20.092Z",
                        "followers_count": 1,
                        "taggings_count": 1
                      },
                      "meta": {
                        "am_i_follow": true
                      }
                    },
                    {
                      "id": "45",
                      "type": "tag",
                      "attributes": {
                        "name": "second",
                        "created_at": "2022-07-24T11:37:20.063Z",
                        "updated_at": "2022-07-24T11:37:20.063Z",
                        "followers_count": 1,
                        "taggings_count": 1
                      },
                      "meta": {
                        "am_i_follow": true
                      }
                    },
                    {
                      "id": "44",
                      "type": "tag",
                      "attributes": {
                        "name": "first",
                        "created_at": "2022-07-24T11:37:20.039Z",
                        "updated_at": "2022-07-24T11:37:20.039Z",
                        "followers_count": 1,
                        "taggings_count": 1
                      },
                      "meta": {
                        "am_i_follow": true
                      }
                    }
                  ],
                  "links": {
                    "first": "/api/v1/users/265/following/tags?page%5Bnumber%5D=1",
                    "self": "/api/v1/users/265/following/tags?page%5Bnumber%5D=1",
                    "last": "/api/v1/users/265/following/tags?page%5Bnumber%5D=1"
                  },
                  "meta": {
                    "total": 3,
                    "pages": 1,
                    "current_page": 1,
                    "per_page": 20,
                    "from": 1,
                    "to": 3
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_users_following"
                }
              }
            }
          },
          "400": {
            "description": "invalid pagination",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "bad_request",
                      "status": "400",
                      "title": "Invalid Parameter",
                      "detail": [
                        "page[number] must be a positive integer; got -1"
                      ],
                      "source": {
                        "parameter": "page[number]"
                      }
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/pagination_error"
                }
              }
            }
          },
          "404": {
            "description": "user not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "not_found",
                      "status": "404",
                      "title": "Not Found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_users_show404"
                }
              }
            }
          }
        }
      }
    },
    "/users/search": {
      "get": {
        "summary": "search users",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[number]",
            "in": "query",
            "description": "Page number",
            "minimum": 1,
            "default": 1,
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Per page",
            "minimum": 1,
            "maximum": 100,
            "default": 20,
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "headers": {
              "Link": {
                "schema": {
                  "type": "string",
                  "example": "<http://localhost:3000/api/v1/users?page%5Bnumber%5D=1&page%5Bsize%5D=5>; rel=\"first\""
                },
                "description": "Links to another pages"
              },
              "X-Total-Pages": {
                "schema": {
                  "type": "integer",
                  "example": 10,
                  "minimum": 1,
                  "maximum": 100
                },
                "description": "The total number of pages of the resource"
              },
              "Per-Page": {
                "schema": {
                  "type": "integer",
                  "example": 4
                },
                "description": "Resource entries per page"
              },
              "Current-Page": {
                "schema": {
                  "type": "integer",
                  "example": 1
                },
                "description": "Current page"
              },
              "X-Total-Count": {
                "schema": {
                  "type": "integer",
                  "example": 2
                },
                "description": "The total number of the resource"
              },
              "Content-Range": {
                "schema": {
                  "type": "string",
                  "example": "items 11-15/100"
                },
                "description": "items from-to/count"
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "284",
                      "type": "user",
                      "attributes": {
                        "email": "user_234@example.com",
                        "username": "Maxim",
                        "bio": null,
                        "blog": null,
                        "location": null,
                        "avatar": {
                          "url": null
                        },
                        "created_at": "2022-07-24T11:37:20.579Z",
                        "updated_at": "2022-07-24T11:37:20.579Z",
                        "comments_count": 0,
                        "posts_count": 0,
                        "followers_count": 0,
                        "follow_count": 0,
                        "following_users_count": 0,
                        "following_tags_count": 0,
                        "last_followed_at": null,
                        "role": {
                          "name": "user",
                          "value": 0
                        }
                      },
                      "meta": {
                        "am_i_follow": false
                      }
                    },
                    {
                      "id": "285",
                      "type": "user",
                      "attributes": {
                        "email": "user_235@example.com",
                        "username": "NAGIBATOR",
                        "bio": null,
                        "blog": null,
                        "location": null,
                        "avatar": {
                          "url": null
                        },
                        "created_at": "2022-07-24T11:37:20.588Z",
                        "updated_at": "2022-07-24T11:37:20.588Z",
                        "comments_count": 0,
                        "posts_count": 0,
                        "followers_count": 0,
                        "follow_count": 0,
                        "following_users_count": 0,
                        "following_tags_count": 0,
                        "last_followed_at": null,
                        "role": {
                          "name": "user",
                          "value": 0
                        }
                      },
                      "meta": {
                        "am_i_follow": false
                      }
                    },
                    {
                      "id": "283",
                      "type": "user",
                      "attributes": {
                        "email": "user_233@example.com",
                        "username": "SuperJack",
                        "bio": null,
                        "blog": null,
                        "location": null,
                        "avatar": {
                          "url": null
                        },
                        "created_at": "2022-07-24T11:37:20.569Z",
                        "updated_at": "2022-07-24T11:37:20.569Z",
                        "comments_count": 0,
                        "posts_count": 0,
                        "followers_count": 0,
                        "follow_count": 0,
                        "following_users_count": 0,
                        "following_tags_count": 0,
                        "last_followed_at": null,
                        "role": {
                          "name": "user",
                          "value": 0
                        }
                      },
                      "meta": {
                        "am_i_follow": false
                      }
                    }
                  ],
                  "links": {
                    "first": "/api/v1/users/search?page%5Bnumber%5D=1&q=Max",
                    "self": "/api/v1/users/search?page%5Bnumber%5D=1&q=Max",
                    "last": "/api/v1/users/search?page%5Bnumber%5D=1&q=Max"
                  },
                  "meta": {
                    "total": 3,
                    "pages": 1,
                    "current_page": 1,
                    "per_page": 20,
                    "from": 1,
                    "to": 3
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_users_index"
                }
              }
            }
          },
          "400": {
            "description": "invalid pagination",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "bad_request",
                      "status": "400",
                      "title": "Invalid Parameter",
                      "detail": [
                        "page[number] must be a positive integer; got -1"
                      ],
                      "source": {
                        "parameter": "page[number]"
                      }
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/pagination_error"
                }
              }
            }
          }
        }
      }
    },
    "/votes/like": {
      "post": {
        "summary": "like votable",
        "tags": [
          "Votes"
        ],
        "description": "Like votable",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "type": "vote",
                    "meta": {
                      "message": "Post successfully liked"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_votes_success"
                }
              }
            }
          },
          "401": {
            "description": "user is suspended",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "status": "401",
                      "title": "You are banned"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          },
          "404": {
            "description": "votable not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "not_found",
                      "status": "404",
                      "title": "Not Found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "invalid parameter error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unprocessable_entity",
                      "status": "422",
                      "title": "Invalid parameter: votable_type must be one of the list: [\"Post\", \"Comment\"], passed UnsupportedVotable"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/parameter_votes_vote"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "unlike votable",
        "tags": [
          "Votes"
        ],
        "description": "Unlike votable",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "type": "vote",
                    "meta": {
                      "message": "Post successfully unliked"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_votes_success"
                }
              }
            }
          },
          "401": {
            "description": "user is suspended",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "status": "401",
                      "title": "You are banned"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          },
          "404": {
            "description": "votable not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "not_found",
                      "status": "404",
                      "title": "Not Found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "invalid parameter error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unprocessable_entity",
                      "status": "422",
                      "title": "Invalid parameter: votable_type must be one of the list: [\"Post\", \"Comment\"], passed UnsupportedVotable"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/parameter_votes_vote"
              }
            }
          }
        }
      }
    },
    "/votes/dislike": {
      "post": {
        "summary": "dislike votable",
        "tags": [
          "Votes"
        ],
        "description": "Dislike votable",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "type": "vote",
                    "meta": {
                      "message": "Post successfully disliked"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_votes_success"
                }
              }
            }
          },
          "401": {
            "description": "user is suspended",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "status": "401",
                      "title": "You are banned"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          },
          "404": {
            "description": "votable not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "not_found",
                      "status": "404",
                      "title": "Not Found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "invalid parameter error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unprocessable_entity",
                      "status": "422",
                      "title": "Invalid parameter: votable_type must be one of the list: [\"Post\", \"Comment\"], passed UnsupportedVotable"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/parameter_votes_vote"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "undislike votable",
        "tags": [
          "Votes"
        ],
        "description": "Undislike votable",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "type": "vote",
                    "meta": {
                      "message": "Post successfully undisliked"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/response_votes_success"
                }
              }
            }
          },
          "401": {
            "description": "user is suspended",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "status": "401",
                      "title": "You are banned"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          },
          "404": {
            "description": "votable not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "not_found",
                      "status": "404",
                      "title": "Not Found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "invalid parameter error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "unprocessable_entity",
                      "status": "422",
                      "title": "Invalid parameter: votable_type must be one of the list: [\"Post\", \"Comment\"], passed UnsupportedVotable"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/response_error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/parameter_votes_vote"
              }
            }
          }
        }
      }
    }
  }
}